
1611_TicTacToe.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000340a  0000349e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000340a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800108  00800108  000034a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000034a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003504  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00003544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c85  00000000  00000000  00003644  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000621  00000000  00000000  000052c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011c6  00000000  00000000  000058ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  00006ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000358  00000000  00000000  00006e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001eee  00000000  00000000  00007170  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000370  00000000  00000000  0000905e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 09 	jmp	0x1306	; 0x1306 <__ctors_end>
       4:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
       8:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
       c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      10:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      14:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      18:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      1c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      20:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      24:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      28:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      2c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      30:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      34:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      38:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      3c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      40:	0c 94 31 16 	jmp	0x2c62	; 0x2c62 <__vector_16>
      44:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      48:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      4c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      50:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      54:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      58:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      5c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      60:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>
      64:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__bad_interrupt>

00000068 <Two>:
      68:	0c 0e 07 03 c3 e7 7e 3c 3c 3e 37 33 31 30 30 30     ......~<<>731000

00000078 <One>:
      78:	00 04 06 ff ff 00 00 00 00 30 30 3f 3f 30 30 00     .........00??00.

00000088 <WIN>:
      88:	ff ff 00 00 00 80 80 00 00 00 ff ff 00 00 03 ff     ................
      98:	ff 03 00 ff ff e0 c0 80 00 00 ff ff 00 03 0f 3e     ...............>
      a8:	38 1e 07 07 1e 38 3e 0f 03 00 00 30 3f 3f 30 00     8....8>....0??0.
      b8:	3f 3f 00 01 03 07 0e 3f 3f 00                       ??.....??.

000000c2 <DRAW>:
      c2:	ff ff 03 03 03 03 07 fe fc 00 00 ff ff c3 c3 c3     ................
      d2:	c3 c3 ff 7e 00 00 f0 fc ce c7 c7 ce fc f8 00 00     ...~............
      e2:	ff ff 80 00 00 00 00 00 00 80 ff ff 00 00 00 00     ................
      f2:	00 7f 7f 60 60 60 60 70 3f 1f 00 00 7f 7f 00 00     ...````p?.......
     102:	00 01 07 7e 78 00 00 7f 7f 00 00 00 00 7f 7f 00     ...~x...........
     112:	00 00 07 1f 7c 60 1c 1c 60 7c 1f 07 00 00 00 00     ....|`..`|......
	...

00000124 <PLAYER>:
     124:	ff ff 83 83 83 83 83 ff ff 00 06 ff ff 00 00 98     ................
     134:	d8 d8 d8 d8 d8 f8 f0 00 00 f8 f8 00 00 00 00 f8     ................
     144:	f8 00 f0 f8 98 98 98 98 f8 f0 00 f8 f8 30 18 18     .............0..
     154:	18 38 30 3f 3f 01 01 01 01 01 01 01 00 30 3f 3f     .80??........0??
     164:	30 00 1f 3f 30 30 30 18 1f 3f 30 00 c1 c3 c7 c6     0..?000..?0.....
     174:	c6 f6 7f 1f 00 0f 1f 39 31 31 31 31 30 00 3f 3f     .......911110.??
     184:	00 00 00 00 00 00                                   ......

0000018a <Figure>:
     18a:	fe 01 01 01 01 01 01 01 01 01 01 01 01 01 01 fe     ................
     19a:	7f 80 80 80 80 80 80 80 80 80 80 80 80 80 80 7f     ................
     1aa:	fe 01 0d 1d 39 71 e1 c1 c1 e1 71 39 1d 0d 01 fe     ....9q....q9....
     1ba:	7f 80 b0 b8 9c 8e 87 83 83 87 8e 9c b8 b0 80 7f     ................
     1ca:	fe 01 c1 f1 39 19 0d 0d 0d 0d 19 39 f1 c1 01 fe     ....9......9....
     1da:	7f 80 83 8f 9c 98 b0 b0 b0 b0 98 9c 8f 83 80 7f     ................

000001ea <About>:
     1ea:	ff ff ff 7f 7f 3f 1f 07 07 07 07 07 07 07 07 07     .....?..........
     1fa:	07 07 07 07 07 07 07 07 87 47 87 07 07 c7 47 47     .........G....GG
     20a:	47 87 07 87 47 47 47 87 07 c7 07 07 07 c7 07 47     G...GGG........G
     21a:	47 c7 47 47 07 07 07 87 47 47 47 87 07 07 87 47     G.GG....GGG....G
     22a:	87 07 07 c7 87 07 87 c7 07 c7 47 47 47 07 07 07     ..........GGG...
     23a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 1f     ................
     24a:	3f 7f 7f ff ff ff ff ff ff 00 00 00 00 00 00 00     ?...............
	...
     266:	00 1f 02 02 02 1f 00 1f 12 12 12 0d 00 0f 10 10     ................
     276:	10 0f 00 0f 10 10 10 0f 00 00 00 1f 00 00 00 00     ................
     286:	00 0f 10 12 12 0e 00 1f 02 02 02 1f 00 1f 00 01     ................
     296:	00 1f 00 1f 12 12 12 00 00 00 00 00 00 00 00 00     ................
	...
     2b2:	00 ff ff ff ff ff ff 00 00 00 00 00 00 3c c0 00     .............<..
     2c2:	c0 3c 00 e0 50 50 70 00 f0 20 10 10 20 00 20 50     .<..PPp.. .. . P
     2d2:	50 90 00 e8 00 e0 10 10 e0 00 f0 10 10 e0 00 00     P...............
     2e2:	00 40 40 40 00 00 08 fc 00 00 00 00 88 04 04 24     .@@@...........$
     2f2:	d8 00 08 fc 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     316:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 f0     ................
     326:	08 09 08 10 00 c0 21 21 c1 00 e1 20 20 c0 00 40     ......!!...  ..@
     336:	a1 a1 21 00 20 f9 20 00 01 01 e0 40 21 20 00 e1     ..!. . ....@! ..
     346:	00 00 e0 00 c0 20 20 00 21 f9 21 00 01 00 c0 a1     .....  .!.!.....
     356:	a1 e1 00 c0 21 21 f9 00 00 40 00 00 00 00 00 00     ....!!...@......
	...
     37e:	00 ff ff ff ff ff ff 00 00 00 00 00 00 21 f2 02     .............!..
     38e:	02 21 10 11 92 62 01 00 03 20 f0 03 00 22 f2 02     .!...b... ..."..
     39e:	01 00 00 21 12 12 91 60 03 e0 10 10 10 e1 02 22     ...!...`......."
     3ae:	f1 00 01 e2 92 90 90 21 02 02 01 00 01 02 02 02     .......!........
     3be:	00 01 02 02 03 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     3e2:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 84     ................
     3f2:	47 24 40 82 04 84 04 03 80 04 80 e4 87 04 00 04     G$@.............
     402:	07 84 80 04 00 84 06 85 84 04 00 03 04 04 04 03     ................
     412:	00 04 07 e4 00 03 04 e4 04 83 40 20 40 80 00 e0     ..........@ @...
	...
     44a:	00 ff ff ff ff ff ff 00 00 00 00 00 00 0f 01 01     ................
     45a:	01 0f 00 07 08 08 07 00 00 07 08 08 04 00 07 08     ................
     46a:	08 07 00 0f 01 00 00 00 00 00 02 02 02 00 00 00     ................
     47a:	00 01 06 08 06 01 00 0f 01 01 01 0f 00 0f 08 08     ................
     48a:	08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     4ae:	00 00 00 ff ff ff ff ff ff fe fe fc f8 e0 e0 e0     ................
     4be:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     4ce:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     4de:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     4ee:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     4fe:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     50e:	e0 e0 e0 e0 e0 f8 fc fe fe ff ff ff                 ............

0000051a <Frame>:
     51a:	ff ff ff 7f 7f 3f 1f 07 07 07 07 07 07 07 07 07     .....?..........
     52a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     53a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     54a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     55a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     56a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 1f     ................
     57a:	3f 7f 7f ff ff ff ff ff ff 00 00 00 00 00 00 00     ?...............
	...
     5e2:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     646:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     6ae:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     712:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     77a:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     7de:	00 00 00 ff ff ff ff ff ff fe fe fc f8 e0 e0 e0     ................
     7ee:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     7fe:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     80e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     81e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     82e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     83e:	e0 e0 e0 e0 e0 f8 fc fe fe ff ff ff                 ............

0000084a <Meny>:
     84a:	ff ff ff 7f 7f 3f 1f 07 07 07 07 07 07 07 07 07     .....?..........
     85a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     86a:	07 07 07 07 07 07 f7 27 47 27 f7 07 f7 97 97 97     .......'G'......
     87a:	97 07 f7 47 87 07 f7 07 f7 07 07 07 f7 07 07 07     ...G............
     88a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     89a:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 1f     ................
     8aa:	3f 7f 7f ff ff ff ff ff ff 00 00 00 00 00 00 00     ?...............
	...
     8d6:	07 00 00 00 07 00 07 04 04 04 04 00 07 00 00 01     ................
     8e6:	07 00 03 04 04 04 03 00 00 00 00 00 00 00 00 00     ................
	...
     912:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 04 fe     ................
     922:	00 00 00 00 10 10 10 00 00 00 1e 60 80 60 1e 00     ...........`.`..
     932:	4c 92 92 92 64 00 00 00 00 fe 12 12 12 0c 00 82     L...d...........
     942:	fe 80 00 68 a8 a8 f0 80 00 78 80 80 f8 00 70 a8     ...h.....x....p.
     952:	a8 a8 10 00 f8 10 08 08 10 00 00 00 00 00 00 00     ................
	...
     976:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00     ................
     986:	80 80 80 00 00 00 00 00 00 00 00 00 00 80 00 00     ................
     996:	00 80 00 00 80 80 80 00 00 00 00 00 80 80 80 00     ................
	...
     9ae:	00 00 00 02 02 02 01 00 00 00 00 00 00 00 00 80     ................
	...
     9de:	00 ff ff ff ff ff ff 00 00 00 00 00 00 21 30 28     .............!0(
     9ee:	24 23 00 00 04 04 04 00 00 00 00 07 18 20 18 07     $#........... ..
     9fe:	00 13 24 24 24 19 00 00 00 1f 20 20 20 11 00 1c     ..$$$.....   ...
     a0e:	22 22 1c 00 3e 02 3c 02 3c 00 fe 22 22 1c 00 9e     ""..>.<.<..""...
     a1e:	a0 a0 7e 00 02 1f 22 20 10 00 1c 2a 2a 2a 04 00     ..~..." ...***..
     a2e:	3e 04 02 02 04 00 00 00 00 00 00 00 00 00 00 00     >...............
     a3e:	00 00 00 00 00 00 00 ff ff ff ff ff ff 00 00 00     ................
     a4e:	00 00 00 40 20 20 20 c0 00 00 00 00 00 00 00 00     ...@   .........
     a5e:	00 80 40 20 40 80 00 e0 80 80 00 00 00 80 80 00     ..@ @...........
     a6e:	00 80 00 00 80 00 80 e0 80 00 00 00 00 00 00 00     ................
     a7e:	80 80 80 00 80 80 80 00 00 00 80 80 00 80 00 00     ................
     a8e:	00 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     aaa:	00 ff ff ff ff ff ff 00 00 00 00 00 00 04 08 08     ................
     aba:	09 06 00 00 01 01 01 00 00 00 00 0f 01 01 01 0f     ................
     aca:	00 0f 08 08 07 00 07 08 08 07 00 07 08 08 07 00     ................
     ada:	00 07 08 08 04 00 00 00 00 27 28 28 1f 00 0e 0a     .........'((....
     aea:	0a 0f 08 00 0f 00 0f 00 0f 00 07 0a 0a 0a 01 00     ................
	...
     b0e:	00 00 00 ff ff ff ff ff ff fe fe fc f8 e0 e0 e0     ................
     b1e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     b2e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     b3e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     b4e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     b5e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
     b6e:	e0 e0 e0 e0 e0 f8 fc fe fe ff ff ff                 ............

00000b7a <Name>:
     b7a:	ff ff ff 7f 7f 3f 1f 07 07 07 07 07 07 c7 e7 f7     .....?..........
     b8a:	f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 77 77 77     .............www
     b9a:	77 77 77 77 77 77 f7 e7 87 07 07 07 07 07 07 07     wwwwww..........
     baa:	f7 f7 f7 f7 07 07 07 07 07 07 07 07 07 07 07 07     ................
     bba:	07 07 07 07 07 07 07 07 07 07 07 87 c7 e7 f7 f7     ................
     bca:	f7 77 77 77 37 37 37 37 37 77 f7 f7 f7 07 07 1f     .www77777w......
     bda:	3f 7f 7f ff ff ff ff ff ff 00 00 00 00 00 00 00     ?...............
     bea:	00 00 00 03 03 01 01 01 00 00 00 00 00 00 ff ff     ................
     bfa:	ff ff ff 00 00 00 00 00 00 00 00 00 01 01 01 00     ................
     c0a:	00 00 00 00 00 00 fe fe fe fe 00 00 00 00 00 00     ................
	...
     c26:	00 00 00 fe ff ff ff 03 01 00 00 00 00 00 00 00     ................
	...
     c42:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
     c52:	00 9c 9c bc b8 b8 b8 b8 b8 b8 bc bc bf bf 9f 8f     ................
     c62:	87 80 80 80 80 80 80 80 80 00 00 00 00 00 00 00     ................
     c72:	00 00 00 00 07 1f 3f 3f 78 70 60 60 60 60 70 78     ......??xp````px
     c82:	3c 3c 00 00 00 00 00 00 00 00 00 00 00 03 07 0f     <<..............
     c92:	1f 3c 3c 3c 38 38 38 30 20 20 30 38 38 3c 3c 1c     .<<<8880  088<<.
     ca2:	1c 00 00 00 00 00 00 ff ff ff ff ff ff 00 00 00     ................
     cb2:	00 00 00 00 00 1e 1f 0f 0f 0f 07 07 07 07 07 07     ................
     cc2:	ff ff ff ff ff 03 03 03 03 03 03 03 03 03 0f 0f     ................
     cd2:	0c 00 00 00 f8 fc fe ff 0f 07 07 03 03 03 03 03     ................
     ce2:	03 07 07 0f ff fe fc f8 00 00 00 00 00 00 00 00     ................
     cf2:	00 e0 f0 f8 fc 3e 1f 0f 0f 07 07 07 03 03 03 03     .....>..........
     d02:	03 07 0f 0f 0f 00 00 00 00 00 00 00 00 ff ff ff     ................
     d12:	ff ff ff 00 00 00 00 00 00 00 00 e0 e0 e0 c0 c0     ................
     d22:	c0 c0 c0 c0 e0 e0 ff ff ff 7f 3f 00 00 00 00 00     ..........?.....
	...
     d3a:	00 00 7f ff ff ff 80 80 80 00 00 00 00 80 80 c0     ................
     d4a:	c0 c0 ff 7f ff ff 00 00 00 c0 c0 00 00 00 00 3f     ...............?
     d5a:	7f ff ff c0 c0 c0 80 80 80 00 00 00 00 80 80 c0     ................
     d6a:	c0 c0 c0 00 00 00 00 00 00 00 00 ff ff ff ff ff     ................
     d7a:	ff 00 00 00 00 00 00 f0 f8 7c 7c 7d 3d 3d 3d 3d     .........||}====
     d8a:	3d 3d fd fd fd fd fc 1c 1c 1c 1c 1c 1c 1c 1c 1c     ==..............
     d9a:	7c 78 60 00 00 00 e0 e0 f0 f0 79 39 3b 1b 1b 1b     |x`.......y9;...
     daa:	1b 1b 1b 1b 3b 7b f1 f1 e0 e0 03 03 03 03 03 03     ....;{..........
     dba:	00 00 00 80 c0 e0 e0 70 71 3b 3b 3b 1b 1b 1b 1b     .......pq;;;....
     dca:	1a 1a 3b fb fb fb fb 01 01 00 00 00 00 00 00 00     ..;.............
     dda:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     df2:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
     e02:	00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
     e12:	00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
     e22:	00 7f ff ff ff 3c 38 38 38 38 38 38 38 38 38 18     .....<888888888.
     e32:	18 0f 0f 07 07 00 00 00 00 00 00 00 00 00 00 ff     ................
     e42:	ff ff ff ff ff fe fe fc f8 e0 e0 e7 e7 ef ee ee     ................
     e52:	ee ee ee ee ef ef ef ef e7 e3 e1 e0 e0 e0 e0 e0     ................
     e62:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e3 e7 e7 e7 ee ec     ................
     e72:	ec e8 e8 e8 e8 e8 e8 ec ec ee e7 e7 e3 e3 e0 e0     ................
     e82:	e0 e0 e0 e0 e0 e0 e0 e0 e1 e3 e3 e7 e7 ee ee ec     ................
     e92:	ec ec e8 e8 ec ec ec ee ef e7 e7 e0 e0 e0 e0 e0     ................
     ea2:	e0 f8 fc fe fe ff ff ff                             ........

00000eaa <StartPage>:
     eaa:	ff ff ff 7f 7f 3f 1f 07 07 07 07 07 07 07 07 07     .....?..........
     eba:	e7 e7 e7 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     eca:	07 07 07 07 07 07 07 07 07 07 07 07 07 e7 e7 e7     ................
     eda:	c7 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     eea:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07     ................
     efa:	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 1f     ................
     f0a:	3f 7f 7f ff ff ff ff ff ff 00 00 00 00 00 00 00     ?...............
     f1a:	00 00 00 00 00 00 00 07 3f ff fc e0 00 00 00 00     ........?.......
	...
     f3a:	e0 fc ff 1f 07 07 3f ff f8 e0 00 00 00 00 00 00     ......?.........
	...
     f72:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
     f82:	00 00 00 00 00 00 00 01 07 3f ff f8 c0 00 00 00     .........?......
	...
     f9a:	00 00 00 e0 fc ff 3f 07 00 00 00 00 00 01 07 3f     ......?........?
     faa:	ff f8 e0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fd6:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     ff2:	01 0f 7f ff f8 c0 00 00 00 00 00 00 00 00 e0 f8     ................
    1002:	ff 3f 1f 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1f     .?..............
    1012:	1f ff fc e0 80 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    103e:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    105a:	00 01 0f 7f fe f0 c0 00 00 c0 f8 ff 3f 07 01 00     ............?...
	...
    107a:	07 1f ff fc f0 80 00 00 00 00 00 00 00 00 00 00     ................
	...
    10a2:	00 00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
    10c2:	00 00 03 0f 7f 7e 7f 3f 07 01 00 00 00 00 00 00     .....~.?........
	...
    10e2:	00 03 1f 7f 7c 70 70 70 70 70 70 70 70 70 70 70     ....|ppppppppppp
    10f2:	70 70 70 70 70 70 70 70 70 70 70 70 70 70 00 00     pppppppppppppp..
	...
    110a:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    112a:	00 fc 20 50 8c 00 f0 00 00 f0 00 f4 00 70 80 00     .. P.........p..
    113a:	80 70 00 00 40 40 40 00 08 84 64 24 18 00 f8 04     .p..@@@...d$....
    114a:	04 04 f8 00 08 fc 00 00 f8 24 24 24 c8 00 00 00     .........$$$....
	...
    116e:	00 00 00 ff ff ff ff ff ff fe fe fc f8 e0 e0 e0     ................
    117e:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    118e:	e0 e0 e0 e1 e0 e0 e1 e0 e4 e5 e5 e3 e0 e1 e0 e0     ................
    119e:	e0 e1 e0 e0 e0 e0 e0 e0 e0 e0 e1 e1 e1 e1 e1 e0     ................
    11ae:	e0 e1 e1 e1 e0 e0 e1 e1 e1 e0 e0 e1 e1 e1 e0 e0     ................
    11be:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    11ce:	e0 e0 e0 e0 e0 f8 fc fe fe ff ff ff                 ............

000011da <Symbols>:
    11da:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
    11ea:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
    11fa:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
    120a:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
    121a:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
    122a:	3e 41 41 41 3e 00 04 02 7f 00 42 61 51 49 46 22     >AAA>.....BaQIF"
    123a:	41 41 49 36 18 14 12 11 7f 47 45 45 45 39 3e 49     AAI6.....GEEE9>I
    124a:	49 49 32 01 01 61 19 07 36 49 49 49 36 26 49 49     II2..a..6III6&II
    125a:	49 3e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     I>.66...V6...."A
    126a:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
    127a:	32 49 79 41 3e 7c 12 11 12 7c 7f 49 49 4e 30 3e     2IyA>|...|.IIN0>
    128a:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
    129a:	09 09 01 3e 41 51 51 32 7f 08 08 08 7f 00 41 7f     ...>AQQ2......A.
    12aa:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
    12ba:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
    12ca:	7e 11 11 11 0e 3e 41 51 61 7e 7e 11 11 21 4e 26     ~....>AQa~~..!N&
    12da:	49 49 49 32 01 01 7f 01 01 3f 40 40 40 3f 0f 30     III2.....?@@@?.0
    12ea:	40 30 0f 3f 40 30 40 3f 63 14 08 14 63 03 04 78     @0.?@0@?c...c..x
    12fa:	04 03 00 00 00 00 00 00 00 00 00 00                 ............

00001306 <__ctors_end>:
    1306:	11 24       	eor	r1, r1
    1308:	1f be       	out	0x3f, r1	; 63
    130a:	cf ef       	ldi	r28, 0xFF	; 255
    130c:	d8 e0       	ldi	r29, 0x08	; 8
    130e:	de bf       	out	0x3e, r29	; 62
    1310:	cd bf       	out	0x3d, r28	; 61

00001312 <__do_copy_data>:
    1312:	11 e0       	ldi	r17, 0x01	; 1
    1314:	a0 e0       	ldi	r26, 0x00	; 0
    1316:	b1 e0       	ldi	r27, 0x01	; 1
    1318:	ea e0       	ldi	r30, 0x0A	; 10
    131a:	f4 e3       	ldi	r31, 0x34	; 52
    131c:	02 c0       	rjmp	.+4      	; 0x1322 <__do_copy_data+0x10>
    131e:	05 90       	lpm	r0, Z+
    1320:	0d 92       	st	X+, r0
    1322:	a8 30       	cpi	r26, 0x08	; 8
    1324:	b1 07       	cpc	r27, r17
    1326:	d9 f7       	brne	.-10     	; 0x131e <__do_copy_data+0xc>

00001328 <__do_clear_bss>:
    1328:	21 e0       	ldi	r18, 0x01	; 1
    132a:	a8 e0       	ldi	r26, 0x08	; 8
    132c:	b1 e0       	ldi	r27, 0x01	; 1
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <.do_clear_bss_start>

00001330 <.do_clear_bss_loop>:
    1330:	1d 92       	st	X+, r1

00001332 <.do_clear_bss_start>:
    1332:	af 31       	cpi	r26, 0x1F	; 31
    1334:	b2 07       	cpc	r27, r18
    1336:	e1 f7       	brne	.-8      	; 0x1330 <.do_clear_bss_loop>
    1338:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <main>
    133c:	0c 94 03 1a 	jmp	0x3406	; 0x3406 <_exit>

00001340 <__bad_interrupt>:
    1340:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001344 <ResetMatrix>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1344:	2f ef       	ldi	r18, 0xFF	; 255
    1346:	89 e6       	ldi	r24, 0x69	; 105
    1348:	98 e1       	ldi	r25, 0x18	; 24
    134a:	21 50       	subi	r18, 0x01	; 1
    134c:	80 40       	sbci	r24, 0x00	; 0
    134e:	90 40       	sbci	r25, 0x00	; 0
    1350:	e1 f7       	brne	.-8      	; 0x134a <ResetMatrix+0x6>
    1352:	00 c0       	rjmp	.+0      	; 0x1354 <ResetMatrix+0x10>
    1354:	00 00       	nop
	_delay_ms(1000);
	for(int8_t i =0; i < 3;i++)
	{
		for(int8_t j =0; j < 3;j++)
		{
			GameField[i][j] = 0;
    1356:	ec e0       	ldi	r30, 0x0C	; 12
    1358:	f1 e0       	ldi	r31, 0x01	; 1
    135a:	11 82       	std	Z+1, r1	; 0x01
    135c:	10 82       	st	Z, r1
    135e:	13 82       	std	Z+3, r1	; 0x03
    1360:	12 82       	std	Z+2, r1	; 0x02
    1362:	15 82       	std	Z+5, r1	; 0x05
    1364:	14 82       	std	Z+4, r1	; 0x04
    1366:	17 82       	std	Z+7, r1	; 0x07
    1368:	16 82       	std	Z+6, r1	; 0x06
    136a:	11 86       	std	Z+9, r1	; 0x09
    136c:	10 86       	std	Z+8, r1	; 0x08
    136e:	13 86       	std	Z+11, r1	; 0x0b
    1370:	12 86       	std	Z+10, r1	; 0x0a
    1372:	15 86       	std	Z+13, r1	; 0x0d
    1374:	14 86       	std	Z+12, r1	; 0x0c
    1376:	17 86       	std	Z+15, r1	; 0x0f
    1378:	16 86       	std	Z+14, r1	; 0x0e
    137a:	11 8a       	std	Z+17, r1	; 0x11
    137c:	10 8a       	std	Z+16, r1	; 0x10
		}
	}
	MatZeros = 9;
    137e:	89 e0       	ldi	r24, 0x09	; 9
    1380:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <MatZeros>
	player1 = true;
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    138a:	08 95       	ret

0000138c <LCD_Start>:
	}
	else{return;}
}

void LCD_Start()											//Clear LCD,fill RAM LCD by empty bytes
{
    138c:	0f 93       	push	r16
    138e:	1f 93       	push	r17
    1390:	cf 93       	push	r28
    1392:	df 93       	push	r29
	char buffer;
	LCD_Set_Cordinates(0,0);
    1394:	60 e0       	ldi	r22, 0x00	; 0
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    13a0:	ca ea       	ldi	r28, 0xAA	; 170
    13a2:	de e0       	ldi	r29, 0x0E	; 14
    13a4:	0a ee       	ldi	r16, 0xEA	; 234
    13a6:	11 e1       	ldi	r17, 0x11	; 17
	for(int smbl = 0; smbl < 832; smbl++)
	{
		buffer = pgm_read_byte(&(StartPage[smbl]));
    13a8:	fe 01       	movw	r30, r28
    13aa:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    13ac:	61 e0       	ldi	r22, 0x01	; 1
    13ae:	70 e0       	ldi	r23, 0x00	; 0
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    13b6:	21 96       	adiw	r28, 0x01	; 1

void LCD_Start()											//Clear LCD,fill RAM LCD by empty bytes
{
	char buffer;
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 832; smbl++)
    13b8:	c0 17       	cp	r28, r16
    13ba:	d1 07       	cpc	r29, r17
    13bc:	a9 f7       	brne	.-22     	; 0x13a8 <LCD_Start+0x1c>
	{
		buffer = pgm_read_byte(&(StartPage[smbl]));
		LCD_Sent_Byte(buffer,DATA);
	}
}
    13be:	df 91       	pop	r29
    13c0:	cf 91       	pop	r28
    13c2:	1f 91       	pop	r17
    13c4:	0f 91       	pop	r16
    13c6:	08 95       	ret

000013c8 <LCD_Name>:

void LCD_Name()											//Clear LCD,fill RAM LCD by empty bytes
{
    13c8:	0f 93       	push	r16
    13ca:	1f 93       	push	r17
    13cc:	cf 93       	push	r28
    13ce:	df 93       	push	r29
	char buffer;
	LCD_Set_Cordinates(0,0);
    13d0:	60 e0       	ldi	r22, 0x00	; 0
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    13dc:	ca e7       	ldi	r28, 0x7A	; 122
    13de:	db e0       	ldi	r29, 0x0B	; 11
    13e0:	0a eb       	ldi	r16, 0xBA	; 186
    13e2:	1e e0       	ldi	r17, 0x0E	; 14
	for(int smbl = 0; smbl < 832; smbl++)
	{
		buffer = pgm_read_byte(&(Name[smbl]));
    13e4:	fe 01       	movw	r30, r28
    13e6:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    13e8:	61 e0       	ldi	r22, 0x01	; 1
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    13f2:	21 96       	adiw	r28, 0x01	; 1

void LCD_Name()											//Clear LCD,fill RAM LCD by empty bytes
{
	char buffer;
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 832; smbl++)
    13f4:	c0 17       	cp	r28, r16
    13f6:	d1 07       	cpc	r29, r17
    13f8:	a9 f7       	brne	.-22     	; 0x13e4 <LCD_Name+0x1c>
	{
		buffer = pgm_read_byte(&(Name[smbl]));
		LCD_Sent_Byte(buffer,DATA);
	}
}
    13fa:	df 91       	pop	r29
    13fc:	cf 91       	pop	r28
    13fe:	1f 91       	pop	r17
    1400:	0f 91       	pop	r16
    1402:	08 95       	ret

00001404 <LCD_Menu>:

void LCD_Menu()											//Clear LCD,fill RAM LCD by empty bytes
{
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
	char buffer;
	LCD_Set_Cordinates(0,0);
    140c:	60 e0       	ldi	r22, 0x00	; 0
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1418:	ca e4       	ldi	r28, 0x4A	; 74
    141a:	d8 e0       	ldi	r29, 0x08	; 8
    141c:	0a e8       	ldi	r16, 0x8A	; 138
    141e:	1b e0       	ldi	r17, 0x0B	; 11
	for(int smbl = 0; smbl < 832; smbl++)
	{
		buffer = pgm_read_byte(&(Meny[smbl]));
    1420:	fe 01       	movw	r30, r28
    1422:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    1424:	61 e0       	ldi	r22, 0x01	; 1
    1426:	70 e0       	ldi	r23, 0x00	; 0
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    142e:	21 96       	adiw	r28, 0x01	; 1

void LCD_Menu()											//Clear LCD,fill RAM LCD by empty bytes
{
	char buffer;
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 832; smbl++)
    1430:	c0 17       	cp	r28, r16
    1432:	d1 07       	cpc	r29, r17
    1434:	a9 f7       	brne	.-22     	; 0x1420 <LCD_Menu+0x1c>
	{
		buffer = pgm_read_byte(&(Meny[smbl]));
		LCD_Sent_Byte(buffer,DATA);
	}
}
    1436:	df 91       	pop	r29
    1438:	cf 91       	pop	r28
    143a:	1f 91       	pop	r17
    143c:	0f 91       	pop	r16
    143e:	08 95       	ret

00001440 <frame>:

void frame()											//Clear LCD,fill RAM LCD by empty bytes
{
    1440:	0f 93       	push	r16
    1442:	1f 93       	push	r17
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
	char buffer;
	LCD_Set_Cordinates(0,0);
    1448:	60 e0       	ldi	r22, 0x00	; 0
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1454:	ca e1       	ldi	r28, 0x1A	; 26
    1456:	d5 e0       	ldi	r29, 0x05	; 5
    1458:	0a e5       	ldi	r16, 0x5A	; 90
    145a:	18 e0       	ldi	r17, 0x08	; 8
	for(int smbl = 0; smbl < 832; smbl++)
	{
		buffer = pgm_read_byte(&(Frame[smbl]));
    145c:	fe 01       	movw	r30, r28
    145e:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    1460:	61 e0       	ldi	r22, 0x01	; 1
    1462:	70 e0       	ldi	r23, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    146a:	21 96       	adiw	r28, 0x01	; 1

void frame()											//Clear LCD,fill RAM LCD by empty bytes
{
	char buffer;
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 832; smbl++)
    146c:	c0 17       	cp	r28, r16
    146e:	d1 07       	cpc	r29, r17
    1470:	a9 f7       	brne	.-22     	; 0x145c <frame+0x1c>
	{
		buffer = pgm_read_byte(&(Frame[smbl]));
		LCD_Sent_Byte(buffer,DATA);
	}
}
    1472:	df 91       	pop	r29
    1474:	cf 91       	pop	r28
    1476:	1f 91       	pop	r17
    1478:	0f 91       	pop	r16
    147a:	08 95       	ret

0000147c <printer>:
			WinnerPrint(0);}
	}
}

void printer(int seg,int l,int c)
{ 
    147c:	af 92       	push	r10
    147e:	bf 92       	push	r11
    1480:	cf 92       	push	r12
    1482:	df 92       	push	r13
    1484:	ef 92       	push	r14
    1486:	ff 92       	push	r15
    1488:	0f 93       	push	r16
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	00 d0       	rcall	.+0      	; 0x1492 <printer+0x16>
    1492:	00 d0       	rcall	.+0      	; 0x1494 <printer+0x18>
    1494:	1f 92       	push	r1
    1496:	cd b7       	in	r28, 0x3d	; 61
    1498:	de b7       	in	r29, 0x3e	; 62
    149a:	7c 01       	movw	r14, r24
    149c:	5b 01       	movw	r10, r22
    149e:	6a 01       	movw	r12, r20
	char buff[5];
	if(fr == false)
    14a0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
    14a4:	81 11       	cpse	r24, r1
    14a6:	05 c0       	rjmp	.+10     	; 0x14b2 <printer+0x36>
	{frame();
    14a8:	0e 94 20 0a 	call	0x1440	; 0x1440 <frame>
	fr = true;}
    14ac:	81 e0       	ldi	r24, 0x01	; 1
    14ae:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
	int XX,YY,buffer;
	YY = (2*l)-1;
    14b2:	aa 0c       	add	r10, r10
    14b4:	bb 1c       	adc	r11, r11
	XX = (16*c)+33;
    14b6:	cc 0c       	add	r12, r12
    14b8:	dd 1c       	adc	r13, r13
    14ba:	cc 0c       	add	r12, r12
    14bc:	dd 1c       	adc	r13, r13
    14be:	cc 0c       	add	r12, r12
    14c0:	dd 1c       	adc	r13, r13
    14c2:	cc 0c       	add	r12, r12
    14c4:	dd 1c       	adc	r13, r13
    14c6:	81 e2       	ldi	r24, 0x21	; 33
    14c8:	c8 0e       	add	r12, r24
    14ca:	d1 1c       	adc	r13, r1
	LCD_Set_Cordinates(YY,XX);
    14cc:	b6 01       	movw	r22, r12
    14ce:	c5 01       	movw	r24, r10
    14d0:	01 97       	sbiw	r24, 0x01	; 1
    14d2:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    14d6:	ee 0c       	add	r14, r14
    14d8:	ff 1c       	adc	r15, r15
    14da:	ee 0c       	add	r14, r14
    14dc:	ff 1c       	adc	r15, r15
    14de:	ee 0c       	add	r14, r14
    14e0:	ff 1c       	adc	r15, r15
    14e2:	ee 0c       	add	r14, r14
    14e4:	ff 1c       	adc	r15, r15
    14e6:	ee 0c       	add	r14, r14
    14e8:	ff 1c       	adc	r15, r15
	for(int i = 0;i < 32;i++)
    14ea:	00 e0       	ldi	r16, 0x00	; 0
    14ec:	10 e0       	ldi	r17, 0x00	; 0
    14ee:	07 c0       	rjmp	.+14     	; 0x14fe <printer+0x82>
	{
		if(i == 16)
    14f0:	00 31       	cpi	r16, 0x10	; 16
    14f2:	11 05       	cpc	r17, r1
    14f4:	21 f4       	brne	.+8      	; 0x14fe <printer+0x82>
		LCD_Set_Cordinates(YY+1,XX);
    14f6:	b6 01       	movw	r22, r12
    14f8:	c5 01       	movw	r24, r10
    14fa:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    14fe:	f8 01       	movw	r30, r16
    1500:	ee 0d       	add	r30, r14
    1502:	ff 1d       	adc	r31, r15
    1504:	e6 57       	subi	r30, 0x76	; 118
    1506:	fe 4f       	sbci	r31, 0xFE	; 254
		buffer = pgm_read_byte(&(Figure[seg][i]));
    1508:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    150a:	61 e0       	ldi	r22, 0x01	; 1
    150c:	70 e0       	ldi	r23, 0x00	; 0
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	fr = true;}
	int XX,YY,buffer;
	YY = (2*l)-1;
	XX = (16*c)+33;
	LCD_Set_Cordinates(YY,XX);
	for(int i = 0;i < 32;i++)
    1514:	0f 5f       	subi	r16, 0xFF	; 255
    1516:	1f 4f       	sbci	r17, 0xFF	; 255
    1518:	00 32       	cpi	r16, 0x20	; 32
    151a:	11 05       	cpc	r17, r1
    151c:	49 f7       	brne	.-46     	; 0x14f0 <printer+0x74>
		if(i == 16)
		LCD_Set_Cordinates(YY+1,XX);
		buffer = pgm_read_byte(&(Figure[seg][i]));
		LCD_Sent_Byte(buffer,DATA);
	}
	sprintf(buff,"%.2d",(Play1));
    151e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Play1>
    1522:	1f 92       	push	r1
    1524:	8f 93       	push	r24
    1526:	02 e0       	ldi	r16, 0x02	; 2
    1528:	11 e0       	ldi	r17, 0x01	; 1
    152a:	1f 93       	push	r17
    152c:	0f 93       	push	r16
    152e:	fe 01       	movw	r30, r28
    1530:	31 96       	adiw	r30, 0x01	; 1
    1532:	7f 01       	movw	r14, r30
    1534:	ff 93       	push	r31
    1536:	ef 93       	push	r30
    1538:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <sprintf>
	LCD_Set_Cordinates(1,5);
    153c:	65 e0       	ldi	r22, 0x05	; 5
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
	LCD_print(buff[0]);
    1548:	89 81       	ldd	r24, Y+1	; 0x01
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
	LCD_print(buff[1]);
    1550:	8a 81       	ldd	r24, Y+2	; 0x02
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
	sprintf(buff," - ");
    1558:	80 e2       	ldi	r24, 0x20	; 32
    155a:	89 83       	std	Y+1, r24	; 0x01
    155c:	9d e2       	ldi	r25, 0x2D	; 45
    155e:	9a 83       	std	Y+2, r25	; 0x02
    1560:	90 e2       	ldi	r25, 0x20	; 32
    1562:	9b 83       	std	Y+3, r25	; 0x03
    1564:	1c 82       	std	Y+4, r1	; 0x04
	for(int8_t i = 0;i < 3;i++)
	{
			LCD_print(buff[i]);
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
    156c:	8a 81       	ldd	r24, Y+2	; 0x02
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
	}
	sprintf(buff,"%.2d",(Play2));
    157c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <Play2>
    1580:	1f 92       	push	r1
    1582:	8f 93       	push	r24
    1584:	1f 93       	push	r17
    1586:	0f 93       	push	r16
    1588:	ff 92       	push	r15
    158a:	ef 92       	push	r14
    158c:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <sprintf>
	LCD_print(buff[0]);
    1590:	89 81       	ldd	r24, Y+1	; 0x01
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
	LCD_print(buff[1]);
    1598:	8a 81       	ldd	r24, Y+2	; 0x02
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <LCD_print>
	if(player1 == true){
    15a0:	0f b6       	in	r0, 0x3f	; 63
    15a2:	f8 94       	cli
    15a4:	de bf       	out	0x3e, r29	; 62
    15a6:	0f be       	out	0x3f, r0	; 63
    15a8:	cd bf       	out	0x3d, r28	; 61
    15aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    15ae:	88 23       	and	r24, r24
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <printer+0x138>
    15b2:	39 c0       	rjmp	.+114    	; 0x1626 <printer+0x1aa>
	LCD_Set_Cordinates(3,20);
    15b4:	64 e1       	ldi	r22, 0x14	; 20
    15b6:	70 e0       	ldi	r23, 0x00	; 0
    15b8:	83 e0       	ldi	r24, 0x03	; 3
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    15c0:	08 e7       	ldi	r16, 0x78	; 120
    15c2:	10 e0       	ldi	r17, 0x00	; 0
    15c4:	0f 2e       	mov	r0, r31
    15c6:	f0 e8       	ldi	r31, 0x80	; 128
    15c8:	ef 2e       	mov	r14, r31
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	ff 2e       	mov	r15, r31
    15ce:	f0 2d       	mov	r31, r0
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
		{
			int8_t b = pgm_read_byte(&(One[i][j]));
    15d0:	f8 01       	movw	r30, r16
    15d2:	84 91       	lpm	r24, Z
			LCD_Sent_Byte(b,DATA);
    15d4:	61 e0       	ldi	r22, 0x01	; 1
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	08 2e       	mov	r0, r24
    15da:	00 0c       	add	r0, r0
    15dc:	99 0b       	sbc	r25, r25
    15de:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    15e2:	0f 5f       	subi	r16, 0xFF	; 255
    15e4:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
    15e6:	0e 15       	cp	r16, r14
    15e8:	1f 05       	cpc	r17, r15
    15ea:	91 f7       	brne	.-28     	; 0x15d0 <printer+0x154>
	if(player1 == true){
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
    15ec:	64 e1       	ldi	r22, 0x14	; 20
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	84 e0       	ldi	r24, 0x04	; 4
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    15f8:	00 e8       	ldi	r16, 0x80	; 128
    15fa:	10 e0       	ldi	r17, 0x00	; 0
    15fc:	0f 2e       	mov	r0, r31
    15fe:	f8 e8       	ldi	r31, 0x88	; 136
    1600:	ef 2e       	mov	r14, r31
    1602:	f0 e0       	ldi	r31, 0x00	; 0
    1604:	ff 2e       	mov	r15, r31
    1606:	f0 2d       	mov	r31, r0
		for(int8_t j = 0;j < 8;j++)
		{
			int8_t b = pgm_read_byte(&(One[i][j]));
    1608:	f8 01       	movw	r30, r16
    160a:	84 91       	lpm	r24, Z
			LCD_Sent_Byte(b,DATA);
    160c:	61 e0       	ldi	r22, 0x01	; 1
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	08 2e       	mov	r0, r24
    1612:	00 0c       	add	r0, r0
    1614:	99 0b       	sbc	r25, r25
    1616:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    161a:	0f 5f       	subi	r16, 0xFF	; 255
    161c:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
    161e:	0e 15       	cp	r16, r14
    1620:	1f 05       	cpc	r17, r15
    1622:	91 f7       	brne	.-28     	; 0x1608 <printer+0x18c>
    1624:	38 c0       	rjmp	.+112    	; 0x1696 <printer+0x21a>
			LCD_Sent_Byte(b,DATA);
		}
	}
	}
	else{
	LCD_Set_Cordinates(3,20);
    1626:	64 e1       	ldi	r22, 0x14	; 20
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	83 e0       	ldi	r24, 0x03	; 3
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1632:	08 e6       	ldi	r16, 0x68	; 104
    1634:	10 e0       	ldi	r17, 0x00	; 0
    1636:	0f 2e       	mov	r0, r31
    1638:	f0 e7       	ldi	r31, 0x70	; 112
    163a:	ef 2e       	mov	r14, r31
    163c:	f0 e0       	ldi	r31, 0x00	; 0
    163e:	ff 2e       	mov	r15, r31
    1640:	f0 2d       	mov	r31, r0
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
		{
			int8_t b = pgm_read_byte(&(Two[i][j]));
    1642:	f8 01       	movw	r30, r16
    1644:	84 91       	lpm	r24, Z
			LCD_Sent_Byte(b,DATA);
    1646:	61 e0       	ldi	r22, 0x01	; 1
    1648:	70 e0       	ldi	r23, 0x00	; 0
    164a:	08 2e       	mov	r0, r24
    164c:	00 0c       	add	r0, r0
    164e:	99 0b       	sbc	r25, r25
    1650:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1654:	0f 5f       	subi	r16, 0xFF	; 255
    1656:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
    1658:	0e 15       	cp	r16, r14
    165a:	1f 05       	cpc	r17, r15
    165c:	91 f7       	brne	.-28     	; 0x1642 <printer+0x1c6>
	else{
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
    165e:	64 e1       	ldi	r22, 0x14	; 20
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	84 e0       	ldi	r24, 0x04	; 4
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    166a:	00 e7       	ldi	r16, 0x70	; 112
    166c:	10 e0       	ldi	r17, 0x00	; 0
    166e:	0f 2e       	mov	r0, r31
    1670:	f8 e7       	ldi	r31, 0x78	; 120
    1672:	ef 2e       	mov	r14, r31
    1674:	f0 e0       	ldi	r31, 0x00	; 0
    1676:	ff 2e       	mov	r15, r31
    1678:	f0 2d       	mov	r31, r0
		for(int8_t j = 0;j < 8;j++)
		{
			int8_t b = pgm_read_byte(&(Two[i][j]));
    167a:	f8 01       	movw	r30, r16
    167c:	84 91       	lpm	r24, Z
			LCD_Sent_Byte(b,DATA);
    167e:	61 e0       	ldi	r22, 0x01	; 1
    1680:	70 e0       	ldi	r23, 0x00	; 0
    1682:	08 2e       	mov	r0, r24
    1684:	00 0c       	add	r0, r0
    1686:	99 0b       	sbc	r25, r25
    1688:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    168c:	0f 5f       	subi	r16, 0xFF	; 255
    168e:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Set_Cordinates(3,20);
	for(int8_t i = 0;i < 2;i++)
	{
		if(i == 1)
		{LCD_Set_Cordinates(4,20);}
		for(int8_t j = 0;j < 8;j++)
    1690:	0e 15       	cp	r16, r14
    1692:	1f 05       	cpc	r17, r15
    1694:	91 f7       	brne	.-28     	; 0x167a <printer+0x1fe>
			int8_t b = pgm_read_byte(&(Two[i][j]));
			LCD_Sent_Byte(b,DATA);
		}
	}
	}
}
    1696:	0f 90       	pop	r0
    1698:	0f 90       	pop	r0
    169a:	0f 90       	pop	r0
    169c:	0f 90       	pop	r0
    169e:	0f 90       	pop	r0
    16a0:	df 91       	pop	r29
    16a2:	cf 91       	pop	r28
    16a4:	1f 91       	pop	r17
    16a6:	0f 91       	pop	r16
    16a8:	ff 90       	pop	r15
    16aa:	ef 90       	pop	r14
    16ac:	df 90       	pop	r13
    16ae:	cf 90       	pop	r12
    16b0:	bf 90       	pop	r11
    16b2:	af 90       	pop	r10
    16b4:	08 95       	ret

000016b6 <BuildScreen>:
	char MatZeros = 9,Play1 = 0,Play2 = 0; 
	bool player1 = true,winnn = false,PvP,fr = false;


void BuildScreen()
{
    16b6:	af 92       	push	r10
    16b8:	bf 92       	push	r11
    16ba:	cf 92       	push	r12
    16bc:	df 92       	push	r13
    16be:	ef 92       	push	r14
    16c0:	ff 92       	push	r15
    16c2:	0f 93       	push	r16
    16c4:	1f 93       	push	r17
    16c6:	cf 93       	push	r28
    16c8:	df 93       	push	r29
    16ca:	0f 2e       	mov	r0, r31
    16cc:	fc e0       	ldi	r31, 0x0C	; 12
    16ce:	cf 2e       	mov	r12, r31
    16d0:	f1 e0       	ldi	r31, 0x01	; 1
    16d2:	df 2e       	mov	r13, r31
    16d4:	f0 2d       	mov	r31, r0
	int buffer;
	for(int lin = 1;lin < 4;lin++)
    16d6:	ee 24       	eor	r14, r14
    16d8:	e3 94       	inc	r14
    16da:	f1 2c       	mov	r15, r1
	char MatZeros = 9,Play1 = 0,Play2 = 0; 
	bool player1 = true,winnn = false,PvP,fr = false;


void BuildScreen()
{
    16dc:	aa 24       	eor	r10, r10
    16de:	a3 94       	inc	r10
    16e0:	b1 2c       	mov	r11, r1
    16e2:	16 c0       	rjmp	.+44     	; 0x1710 <BuildScreen+0x5a>
	for(int lin = 1;lin < 4;lin++)
	{
		for(int col = 1;col < 4;col++)
		{
			buffer = GameField[lin-1][col-1];
			printer(buffer,lin,col);
    16e4:	ae 01       	movw	r20, r28
    16e6:	b7 01       	movw	r22, r14
    16e8:	f8 01       	movw	r30, r16
    16ea:	81 91       	ld	r24, Z+
    16ec:	91 91       	ld	r25, Z+
    16ee:	8f 01       	movw	r16, r30
    16f0:	0e 94 3e 0a 	call	0x147c	; 0x147c <printer>
void BuildScreen()
{
	int buffer;
	for(int lin = 1;lin < 4;lin++)
	{
		for(int col = 1;col < 4;col++)
    16f4:	21 96       	adiw	r28, 0x01	; 1
    16f6:	c4 30       	cpi	r28, 0x04	; 4
    16f8:	d1 05       	cpc	r29, r1
    16fa:	a1 f7       	brne	.-24     	; 0x16e4 <BuildScreen+0x2e>


void BuildScreen()
{
	int buffer;
	for(int lin = 1;lin < 4;lin++)
    16fc:	ff ef       	ldi	r31, 0xFF	; 255
    16fe:	ef 1a       	sub	r14, r31
    1700:	ff 0a       	sbc	r15, r31
    1702:	86 e0       	ldi	r24, 0x06	; 6
    1704:	c8 0e       	add	r12, r24
    1706:	d1 1c       	adc	r13, r1
    1708:	e4 e0       	ldi	r30, 0x04	; 4
    170a:	ee 16       	cp	r14, r30
    170c:	f1 04       	cpc	r15, r1
    170e:	21 f0       	breq	.+8      	; 0x1718 <BuildScreen+0x62>
	char MatZeros = 9,Play1 = 0,Play2 = 0; 
	bool player1 = true,winnn = false,PvP,fr = false;


void BuildScreen()
{
    1710:	86 01       	movw	r16, r12
    1712:	ca 2d       	mov	r28, r10
    1714:	db 2d       	mov	r29, r11
    1716:	e6 cf       	rjmp	.-52     	; 0x16e4 <BuildScreen+0x2e>
		{
			buffer = GameField[lin-1][col-1];
			printer(buffer,lin,col);
		}
	}
}
    1718:	df 91       	pop	r29
    171a:	cf 91       	pop	r28
    171c:	1f 91       	pop	r17
    171e:	0f 91       	pop	r16
    1720:	ff 90       	pop	r15
    1722:	ef 90       	pop	r14
    1724:	df 90       	pop	r13
    1726:	cf 90       	pop	r12
    1728:	bf 90       	pop	r11
    172a:	af 90       	pop	r10
    172c:	08 95       	ret

0000172e <WinnerPrint>:
	MatZeros = 9;
	player1 = true;
}

void WinnerPrint(int result)
{
    172e:	0f 93       	push	r16
    1730:	1f 93       	push	r17
    1732:	cf 93       	push	r28
    1734:	df 93       	push	r29
    1736:	ec 01       	movw	r28, r24
	fr = false;
    1738:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
	winnn = true;
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <winnn>
	TIMSK0 &=~ (1 << TOIE0);
    1742:	ee e6       	ldi	r30, 0x6E	; 110
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	90 81       	ld	r25, Z
    1748:	9e 7f       	andi	r25, 0xFE	; 254
    174a:	90 83       	st	Z, r25

	BuildScreen();
    174c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <BuildScreen>
    1750:	2f ef       	ldi	r18, 0xFF	; 255
    1752:	89 e6       	ldi	r24, 0x69	; 105
    1754:	98 e1       	ldi	r25, 0x18	; 24
    1756:	21 50       	subi	r18, 0x01	; 1
    1758:	80 40       	sbci	r24, 0x00	; 0
    175a:	90 40       	sbci	r25, 0x00	; 0
    175c:	e1 f7       	brne	.-8      	; 0x1756 <WinnerPrint+0x28>
    175e:	00 c0       	rjmp	.+0      	; 0x1760 <WinnerPrint+0x32>
    1760:	00 00       	nop
	_delay_ms(1000);
	LCD_SCL();
    1762:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <LCD_SCL>
	frame();
    1766:	0e 94 20 0a 	call	0x1440	; 0x1440 <frame>
	if(result == 0)
    176a:	20 97       	sbiw	r28, 0x00	; 0
    176c:	79 f5       	brne	.+94     	; 0x17cc <WinnerPrint+0x9e>
	{
		LCD_Set_Cordinates(2,30);
    176e:	6e e1       	ldi	r22, 0x1E	; 30
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	82 e0       	ldi	r24, 0x02	; 2
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    177a:	c2 ec       	ldi	r28, 0xC2	; 194
    177c:	d0 e0       	ldi	r29, 0x00	; 0
    177e:	0e ee       	ldi	r16, 0xEE	; 238
    1780:	10 e0       	ldi	r17, 0x00	; 0
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,30);}
			for(int8_t j = 0;j < 44;j++)
			{
				int8_t b = pgm_read_byte(&(DRAW[i][j]));
    1782:	fe 01       	movw	r30, r28
    1784:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1786:	61 e0       	ldi	r22, 0x01	; 1
    1788:	70 e0       	ldi	r23, 0x00	; 0
    178a:	08 2e       	mov	r0, r24
    178c:	00 0c       	add	r0, r0
    178e:	99 0b       	sbc	r25, r25
    1790:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1794:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,30);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,30);}
			for(int8_t j = 0;j < 44;j++)
    1796:	c0 17       	cp	r28, r16
    1798:	d1 07       	cpc	r29, r17
    179a:	99 f7       	brne	.-26     	; 0x1782 <WinnerPrint+0x54>
	{
		LCD_Set_Cordinates(2,30);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,30);}
    179c:	6e e1       	ldi	r22, 0x1E	; 30
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	83 e0       	ldi	r24, 0x03	; 3
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    17a8:	c3 ef       	ldi	r28, 0xF3	; 243
    17aa:	d0 e0       	ldi	r29, 0x00	; 0
    17ac:	0f e1       	ldi	r16, 0x1F	; 31
    17ae:	11 e0       	ldi	r17, 0x01	; 1
			for(int8_t j = 0;j < 44;j++)
			{
				int8_t b = pgm_read_byte(&(DRAW[i][j]));
    17b0:	fe 01       	movw	r30, r28
    17b2:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    17b4:	61 e0       	ldi	r22, 0x01	; 1
    17b6:	70 e0       	ldi	r23, 0x00	; 0
    17b8:	08 2e       	mov	r0, r24
    17ba:	00 0c       	add	r0, r0
    17bc:	99 0b       	sbc	r25, r25
    17be:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    17c2:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,30);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,30);}
			for(int8_t j = 0;j < 44;j++)
    17c4:	c0 17       	cp	r28, r16
    17c6:	d1 07       	cpc	r29, r17
    17c8:	99 f7       	brne	.-26     	; 0x17b0 <WinnerPrint+0x82>
    17ca:	26 c1       	rjmp	.+588    	; 0x1a18 <WinnerPrint+0x2ea>
				int8_t b = pgm_read_byte(&(DRAW[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
	}
	 else if(result == 1)
    17cc:	c1 30       	cpi	r28, 0x01	; 1
    17ce:	d1 05       	cpc	r29, r1
    17d0:	09 f0       	breq	.+2      	; 0x17d4 <WinnerPrint+0xa6>
    17d2:	90 c0       	rjmp	.+288    	; 0x18f4 <WinnerPrint+0x1c6>
	{
		Play1++;
    17d4:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Play1>
    17d8:	8f 5f       	subi	r24, 0xFF	; 255
    17da:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <Play1>
		LCD_Set_Cordinates(2,20);
    17de:	64 e1       	ldi	r22, 0x14	; 20
    17e0:	70 e0       	ldi	r23, 0x00	; 0
    17e2:	82 e0       	ldi	r24, 0x02	; 2
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    17ea:	c4 e2       	ldi	r28, 0x24	; 36
    17ec:	d1 e0       	ldi	r29, 0x01	; 1
    17ee:	07 e5       	ldi	r16, 0x57	; 87
    17f0:	11 e0       	ldi	r17, 0x01	; 1
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
    17f2:	fe 01       	movw	r30, r28
    17f4:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    17f6:	61 e0       	ldi	r22, 0x01	; 1
    17f8:	70 e0       	ldi	r23, 0x00	; 0
    17fa:	08 2e       	mov	r0, r24
    17fc:	00 0c       	add	r0, r0
    17fe:	99 0b       	sbc	r25, r25
    1800:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1804:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
    1806:	c0 17       	cp	r28, r16
    1808:	d1 07       	cpc	r29, r17
    180a:	99 f7       	brne	.-26     	; 0x17f2 <WinnerPrint+0xc4>
		Play1++;
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
    180c:	64 e1       	ldi	r22, 0x14	; 20
    180e:	70 e0       	ldi	r23, 0x00	; 0
    1810:	83 e0       	ldi	r24, 0x03	; 3
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1818:	c7 e5       	ldi	r28, 0x57	; 87
    181a:	d1 e0       	ldi	r29, 0x01	; 1
    181c:	0a e8       	ldi	r16, 0x8A	; 138
    181e:	11 e0       	ldi	r17, 0x01	; 1
			for(int8_t j = 0;j < 51;j++)
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
    1820:	fe 01       	movw	r30, r28
    1822:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1824:	61 e0       	ldi	r22, 0x01	; 1
    1826:	70 e0       	ldi	r23, 0x00	; 0
    1828:	08 2e       	mov	r0, r24
    182a:	00 0c       	add	r0, r0
    182c:	99 0b       	sbc	r25, r25
    182e:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1832:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
    1834:	c0 17       	cp	r28, r16
    1836:	d1 07       	cpc	r29, r17
    1838:	99 f7       	brne	.-26     	; 0x1820 <WinnerPrint+0xf2>
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
		LCD_Set_Cordinates(2,80);
    183a:	60 e5       	ldi	r22, 0x50	; 80
    183c:	70 e0       	ldi	r23, 0x00	; 0
    183e:	82 e0       	ldi	r24, 0x02	; 2
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1846:	c8 e7       	ldi	r28, 0x78	; 120
    1848:	d0 e0       	ldi	r29, 0x00	; 0
    184a:	00 e8       	ldi	r16, 0x80	; 128
    184c:	10 e0       	ldi	r17, 0x00	; 0
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
			{
				int8_t b = pgm_read_byte(&(One[i][j]));
    184e:	fe 01       	movw	r30, r28
    1850:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1852:	61 e0       	ldi	r22, 0x01	; 1
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	08 2e       	mov	r0, r24
    1858:	00 0c       	add	r0, r0
    185a:	99 0b       	sbc	r25, r25
    185c:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1860:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
    1862:	c0 17       	cp	r28, r16
    1864:	d1 07       	cpc	r29, r17
    1866:	99 f7       	brne	.-26     	; 0x184e <WinnerPrint+0x120>
		}
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
    1868:	60 e5       	ldi	r22, 0x50	; 80
    186a:	70 e0       	ldi	r23, 0x00	; 0
    186c:	83 e0       	ldi	r24, 0x03	; 3
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1874:	c0 e8       	ldi	r28, 0x80	; 128
    1876:	d0 e0       	ldi	r29, 0x00	; 0
    1878:	08 e8       	ldi	r16, 0x88	; 136
    187a:	10 e0       	ldi	r17, 0x00	; 0
			for(int8_t j = 0;j < 8;j++)
			{
				int8_t b = pgm_read_byte(&(One[i][j]));
    187c:	fe 01       	movw	r30, r28
    187e:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1880:	61 e0       	ldi	r22, 0x01	; 1
    1882:	70 e0       	ldi	r23, 0x00	; 0
    1884:	08 2e       	mov	r0, r24
    1886:	00 0c       	add	r0, r0
    1888:	99 0b       	sbc	r25, r25
    188a:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    188e:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
    1890:	c0 17       	cp	r28, r16
    1892:	d1 07       	cpc	r29, r17
    1894:	99 f7       	brne	.-26     	; 0x187c <WinnerPrint+0x14e>
			{
				int8_t b = pgm_read_byte(&(One[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
		LCD_Set_Cordinates(4,40);
    1896:	68 e2       	ldi	r22, 0x28	; 40
    1898:	70 e0       	ldi	r23, 0x00	; 0
    189a:	84 e0       	ldi	r24, 0x04	; 4
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    18a2:	c8 e8       	ldi	r28, 0x88	; 136
    18a4:	d0 e0       	ldi	r29, 0x00	; 0
    18a6:	05 ea       	ldi	r16, 0xA5	; 165
    18a8:	10 e0       	ldi	r17, 0x00	; 0
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
			{
				int8_t b = pgm_read_byte(&(WIN[i][j]));
    18aa:	fe 01       	movw	r30, r28
    18ac:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    18ae:	61 e0       	ldi	r22, 0x01	; 1
    18b0:	70 e0       	ldi	r23, 0x00	; 0
    18b2:	08 2e       	mov	r0, r24
    18b4:	00 0c       	add	r0, r0
    18b6:	99 0b       	sbc	r25, r25
    18b8:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    18bc:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
    18be:	c0 17       	cp	r28, r16
    18c0:	d1 07       	cpc	r29, r17
    18c2:	99 f7       	brne	.-26     	; 0x18aa <WinnerPrint+0x17c>
		}
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
    18c4:	68 e2       	ldi	r22, 0x28	; 40
    18c6:	70 e0       	ldi	r23, 0x00	; 0
    18c8:	85 e0       	ldi	r24, 0x05	; 5
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    18d0:	c5 ea       	ldi	r28, 0xA5	; 165
    18d2:	d0 e0       	ldi	r29, 0x00	; 0
    18d4:	02 ec       	ldi	r16, 0xC2	; 194
    18d6:	10 e0       	ldi	r17, 0x00	; 0
			for(int8_t j = 0;j < 29;j++)
			{
				int8_t b = pgm_read_byte(&(WIN[i][j]));
    18d8:	fe 01       	movw	r30, r28
    18da:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    18dc:	61 e0       	ldi	r22, 0x01	; 1
    18de:	70 e0       	ldi	r23, 0x00	; 0
    18e0:	08 2e       	mov	r0, r24
    18e2:	00 0c       	add	r0, r0
    18e4:	99 0b       	sbc	r25, r25
    18e6:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    18ea:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
    18ec:	c0 17       	cp	r28, r16
    18ee:	d1 07       	cpc	r29, r17
    18f0:	99 f7       	brne	.-26     	; 0x18d8 <WinnerPrint+0x1aa>
    18f2:	92 c0       	rjmp	.+292    	; 0x1a18 <WinnerPrint+0x2ea>
				int8_t b = pgm_read_byte(&(WIN[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
	}
	else if(result == 2)
    18f4:	22 97       	sbiw	r28, 0x02	; 2
    18f6:	09 f0       	breq	.+2      	; 0x18fa <WinnerPrint+0x1cc>
    18f8:	8f c0       	rjmp	.+286    	; 0x1a18 <WinnerPrint+0x2ea>
	{
		Play2++;
    18fa:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <Play2>
    18fe:	8f 5f       	subi	r24, 0xFF	; 255
    1900:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <Play2>
		LCD_Set_Cordinates(2,20);
    1904:	64 e1       	ldi	r22, 0x14	; 20
    1906:	70 e0       	ldi	r23, 0x00	; 0
    1908:	82 e0       	ldi	r24, 0x02	; 2
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    1910:	c4 e2       	ldi	r28, 0x24	; 36
    1912:	d1 e0       	ldi	r29, 0x01	; 1
    1914:	07 e5       	ldi	r16, 0x57	; 87
    1916:	11 e0       	ldi	r17, 0x01	; 1
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
    1918:	fe 01       	movw	r30, r28
    191a:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    191c:	61 e0       	ldi	r22, 0x01	; 1
    191e:	70 e0       	ldi	r23, 0x00	; 0
    1920:	08 2e       	mov	r0, r24
    1922:	00 0c       	add	r0, r0
    1924:	99 0b       	sbc	r25, r25
    1926:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    192a:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
    192c:	c0 17       	cp	r28, r16
    192e:	d1 07       	cpc	r29, r17
    1930:	99 f7       	brne	.-26     	; 0x1918 <WinnerPrint+0x1ea>
		Play2++;
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
    1932:	64 e1       	ldi	r22, 0x14	; 20
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	83 e0       	ldi	r24, 0x03	; 3
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    193e:	c7 e5       	ldi	r28, 0x57	; 87
    1940:	d1 e0       	ldi	r29, 0x01	; 1
    1942:	0a e8       	ldi	r16, 0x8A	; 138
    1944:	11 e0       	ldi	r17, 0x01	; 1
			for(int8_t j = 0;j < 51;j++)
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
    1946:	fe 01       	movw	r30, r28
    1948:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    194a:	61 e0       	ldi	r22, 0x01	; 1
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	08 2e       	mov	r0, r24
    1950:	00 0c       	add	r0, r0
    1952:	99 0b       	sbc	r25, r25
    1954:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1958:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,20);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,20);}
			for(int8_t j = 0;j < 51;j++)
    195a:	c0 17       	cp	r28, r16
    195c:	d1 07       	cpc	r29, r17
    195e:	99 f7       	brne	.-26     	; 0x1946 <WinnerPrint+0x218>
			{
				int8_t b = pgm_read_byte(&(PLAYER[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
		LCD_Set_Cordinates(2,80);
    1960:	60 e5       	ldi	r22, 0x50	; 80
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	82 e0       	ldi	r24, 0x02	; 2
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    196c:	c8 e6       	ldi	r28, 0x68	; 104
    196e:	d0 e0       	ldi	r29, 0x00	; 0
    1970:	00 e7       	ldi	r16, 0x70	; 112
    1972:	10 e0       	ldi	r17, 0x00	; 0
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
			{
				int8_t b = pgm_read_byte(&(Two[i][j]));
    1974:	fe 01       	movw	r30, r28
    1976:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1978:	61 e0       	ldi	r22, 0x01	; 1
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	08 2e       	mov	r0, r24
    197e:	00 0c       	add	r0, r0
    1980:	99 0b       	sbc	r25, r25
    1982:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1986:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
    1988:	c0 17       	cp	r28, r16
    198a:	d1 07       	cpc	r29, r17
    198c:	99 f7       	brne	.-26     	; 0x1974 <WinnerPrint+0x246>
		}
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
    198e:	60 e5       	ldi	r22, 0x50	; 80
    1990:	70 e0       	ldi	r23, 0x00	; 0
    1992:	83 e0       	ldi	r24, 0x03	; 3
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    199a:	c0 e7       	ldi	r28, 0x70	; 112
    199c:	d0 e0       	ldi	r29, 0x00	; 0
    199e:	08 e7       	ldi	r16, 0x78	; 120
    19a0:	10 e0       	ldi	r17, 0x00	; 0
			for(int8_t j = 0;j < 8;j++)
			{
				int8_t b = pgm_read_byte(&(Two[i][j]));
    19a2:	fe 01       	movw	r30, r28
    19a4:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    19a6:	61 e0       	ldi	r22, 0x01	; 1
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	08 2e       	mov	r0, r24
    19ac:	00 0c       	add	r0, r0
    19ae:	99 0b       	sbc	r25, r25
    19b0:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    19b4:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(2,80);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(3,80);}
			for(int8_t j = 0;j < 8;j++)
    19b6:	c0 17       	cp	r28, r16
    19b8:	d1 07       	cpc	r29, r17
    19ba:	99 f7       	brne	.-26     	; 0x19a2 <WinnerPrint+0x274>
			{
				int8_t b = pgm_read_byte(&(Two[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
		LCD_Set_Cordinates(4,40);
    19bc:	68 e2       	ldi	r22, 0x28	; 40
    19be:	70 e0       	ldi	r23, 0x00	; 0
    19c0:	84 e0       	ldi	r24, 0x04	; 4
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    19c8:	c8 e8       	ldi	r28, 0x88	; 136
    19ca:	d0 e0       	ldi	r29, 0x00	; 0
    19cc:	05 ea       	ldi	r16, 0xA5	; 165
    19ce:	10 e0       	ldi	r17, 0x00	; 0
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
			{
				int8_t b = pgm_read_byte(&(WIN[i][j]));
    19d0:	fe 01       	movw	r30, r28
    19d2:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    19d4:	61 e0       	ldi	r22, 0x01	; 1
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	08 2e       	mov	r0, r24
    19da:	00 0c       	add	r0, r0
    19dc:	99 0b       	sbc	r25, r25
    19de:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    19e2:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
    19e4:	c0 17       	cp	r28, r16
    19e6:	d1 07       	cpc	r29, r17
    19e8:	99 f7       	brne	.-26     	; 0x19d0 <WinnerPrint+0x2a2>
		}
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
    19ea:	68 e2       	ldi	r22, 0x28	; 40
    19ec:	70 e0       	ldi	r23, 0x00	; 0
    19ee:	85 e0       	ldi	r24, 0x05	; 5
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    19f6:	c5 ea       	ldi	r28, 0xA5	; 165
    19f8:	d0 e0       	ldi	r29, 0x00	; 0
    19fa:	02 ec       	ldi	r16, 0xC2	; 194
    19fc:	10 e0       	ldi	r17, 0x00	; 0
			for(int8_t j = 0;j < 29;j++)
			{
				int8_t b = pgm_read_byte(&(WIN[i][j]));
    19fe:	fe 01       	movw	r30, r28
    1a00:	84 91       	lpm	r24, Z
				LCD_Sent_Byte(b,DATA);
    1a02:	61 e0       	ldi	r22, 0x01	; 1
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	08 2e       	mov	r0, r24
    1a08:	00 0c       	add	r0, r0
    1a0a:	99 0b       	sbc	r25, r25
    1a0c:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    1a10:	21 96       	adiw	r28, 0x01	; 1
		LCD_Set_Cordinates(4,40);
		for(int8_t i = 0;i < 2;i++)
		{
			if(i == 1)
			{LCD_Set_Cordinates(5,40);}
			for(int8_t j = 0;j < 29;j++)
    1a12:	c0 17       	cp	r28, r16
    1a14:	d1 07       	cpc	r29, r17
    1a16:	99 f7       	brne	.-26     	; 0x19fe <WinnerPrint+0x2d0>
				int8_t b = pgm_read_byte(&(WIN[i][j]));
				LCD_Sent_Byte(b,DATA);
			}
		}
	}
	ResetMatrix();
    1a18:	0e 94 a2 09 	call	0x1344	; 0x1344 <ResetMatrix>
    1a1c:	ff ef       	ldi	r31, 0xFF	; 255
    1a1e:	23 ed       	ldi	r18, 0xD3	; 211
    1a20:	80 e3       	ldi	r24, 0x30	; 48
    1a22:	f1 50       	subi	r31, 0x01	; 1
    1a24:	20 40       	sbci	r18, 0x00	; 0
    1a26:	80 40       	sbci	r24, 0x00	; 0
    1a28:	e1 f7       	brne	.-8      	; 0x1a22 <WinnerPrint+0x2f4>
    1a2a:	00 c0       	rjmp	.+0      	; 0x1a2c <WinnerPrint+0x2fe>
    1a2c:	00 00       	nop
	_delay_ms(2000);
	LCD_SCL();
    1a2e:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <LCD_SCL>
	TIMSK0 |= (1 << TOIE0);
    1a32:	ee e6       	ldi	r30, 0x6E	; 110
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	80 81       	ld	r24, Z
    1a38:	81 60       	ori	r24, 0x01	; 1
    1a3a:	80 83       	st	Z, r24
}
    1a3c:	df 91       	pop	r29
    1a3e:	cf 91       	pop	r28
    1a40:	1f 91       	pop	r17
    1a42:	0f 91       	pop	r16
    1a44:	08 95       	ret

00001a46 <Results>:

void Results(int input)
{
    1a46:	0f 93       	push	r16
    1a48:	1f 93       	push	r17
    1a4a:	cf 93       	push	r28
    1a4c:	df 93       	push	r29
    1a4e:	ec 01       	movw	r28, r24
	if(input < 6)
    1a50:	06 97       	sbiw	r24, 0x06	; 6
    1a52:	0c f0       	brlt	.+2      	; 0x1a56 <Results+0x10>
    1a54:	e9 c0       	rjmp	.+466    	; 0x1c28 <Results+0x1e2>
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
    1a56:	51 e0       	ldi	r21, 0x01	; 1
    1a58:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <GameField>
    1a5c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <GameField+0x1>
    1a60:	01 97       	sbiw	r24, 0x01	; 1
    1a62:	09 f0       	breq	.+2      	; 0x1a66 <Results+0x20>
    1a64:	50 e0       	ldi	r21, 0x00	; 0
    1a66:	f1 e0       	ldi	r31, 0x01	; 1
    1a68:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <GameField+0x6>
    1a6c:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <GameField+0x7>
    1a70:	01 97       	sbiw	r24, 0x01	; 1
    1a72:	09 f0       	breq	.+2      	; 0x1a76 <Results+0x30>
    1a74:	f0 e0       	ldi	r31, 0x00	; 0
    1a76:	71 e0       	ldi	r23, 0x01	; 1
    1a78:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <GameField+0xc>
    1a7c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <GameField+0xd>
    1a80:	01 97       	sbiw	r24, 0x01	; 1
    1a82:	09 f0       	breq	.+2      	; 0x1a86 <Results+0x40>
    1a84:	70 e0       	ldi	r23, 0x00	; 0
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
    1a86:	21 e0       	ldi	r18, 0x01	; 1
    1a88:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <GameField+0x2>
    1a8c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <GameField+0x3>
    1a90:	01 97       	sbiw	r24, 0x01	; 1
    1a92:	09 f0       	breq	.+2      	; 0x1a96 <Results+0x50>
    1a94:	20 e0       	ldi	r18, 0x00	; 0
    1a96:	a1 e0       	ldi	r26, 0x01	; 1
    1a98:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <GameField+0x8>
    1a9c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <GameField+0x9>
    1aa0:	01 97       	sbiw	r24, 0x01	; 1
    1aa2:	09 f0       	breq	.+2      	; 0x1aa6 <Results+0x60>
    1aa4:	a0 e0       	ldi	r26, 0x00	; 0
    1aa6:	91 e0       	ldi	r25, 0x01	; 1
    1aa8:	00 91 1a 01 	lds	r16, 0x011A	; 0x80011a <GameField+0xe>
    1aac:	10 91 1b 01 	lds	r17, 0x011B	; 0x80011b <GameField+0xf>
    1ab0:	01 30       	cpi	r16, 0x01	; 1
    1ab2:	11 05       	cpc	r17, r1
    1ab4:	09 f0       	breq	.+2      	; 0x1ab8 <Results+0x72>
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
    1ab8:	61 e0       	ldi	r22, 0x01	; 1
    1aba:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <GameField+0x4>
    1abe:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <GameField+0x5>
    1ac2:	01 30       	cpi	r16, 0x01	; 1
    1ac4:	11 05       	cpc	r17, r1
    1ac6:	09 f0       	breq	.+2      	; 0x1aca <Results+0x84>
    1ac8:	60 e0       	ldi	r22, 0x00	; 0
    1aca:	41 e0       	ldi	r20, 0x01	; 1
    1acc:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <GameField+0xa>
    1ad0:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <GameField+0xb>
    1ad4:	01 30       	cpi	r16, 0x01	; 1
    1ad6:	11 05       	cpc	r17, r1
    1ad8:	09 f0       	breq	.+2      	; 0x1adc <Results+0x96>
    1ada:	40 e0       	ldi	r20, 0x00	; 0
    1adc:	31 e0       	ldi	r19, 0x01	; 1
    1ade:	00 91 1c 01 	lds	r16, 0x011C	; 0x80011c <GameField+0x10>
    1ae2:	10 91 1d 01 	lds	r17, 0x011D	; 0x80011d <GameField+0x11>
    1ae6:	01 30       	cpi	r16, 0x01	; 1
    1ae8:	11 05       	cpc	r17, r1
    1aea:	09 f0       	breq	.+2      	; 0x1aee <Results+0xa8>
    1aec:	30 e0       	ldi	r19, 0x00	; 0
void Results(int input)
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
    1aee:	8a 2f       	mov	r24, r26
    1af0:	82 23       	and	r24, r18
    1af2:	e8 2f       	mov	r30, r24
    1af4:	e9 23       	and	r30, r25

void Results(int input)
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
    1af6:	8f 2f       	mov	r24, r31
    1af8:	85 23       	and	r24, r21
    1afa:	87 23       	and	r24, r23
    1afc:	8e 2b       	or	r24, r30
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
    1afe:	e4 2f       	mov	r30, r20
    1b00:	e6 23       	and	r30, r22
    1b02:	e3 23       	and	r30, r19
void Results(int input)
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
    1b04:	8e 2b       	or	r24, r30
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
    1b06:	25 23       	and	r18, r21
    1b08:	26 23       	and	r18, r22
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
    1b0a:	28 2b       	or	r18, r24
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
    1b0c:	fa 23       	and	r31, r26
    1b0e:	4f 23       	and	r20, r31
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
    1b10:	24 2b       	or	r18, r20
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
    1b12:	97 23       	and	r25, r23
    1b14:	93 23       	and	r25, r19
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
    1b16:	92 2b       	or	r25, r18
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
    1b18:	5a 23       	and	r21, r26
    1b1a:	35 23       	and	r19, r21
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
		((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==1))|
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
    1b1c:	93 2b       	or	r25, r19

void Results(int input)
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
    1b1e:	19 f4       	brne	.+6      	; 0x1b26 <Results+0xe0>
    1b20:	7a 23       	and	r23, r26
		((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
    1b22:	67 23       	and	r22, r23

void Results(int input)
{
	if(input < 6)
	{
		if(((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==1))|
    1b24:	21 f0       	breq	.+8      	; 0x1b2e <Results+0xe8>
		((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==1))|
		((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==1))|
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	0e 94 97 0b 	call	0x172e	; 0x172e <WinnerPrint>
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
    1b2e:	41 e0       	ldi	r20, 0x01	; 1
    1b30:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <GameField>
    1b34:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <GameField+0x1>
    1b38:	02 97       	sbiw	r24, 0x02	; 2
    1b3a:	09 f0       	breq	.+2      	; 0x1b3e <Results+0xf8>
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	f1 e0       	ldi	r31, 0x01	; 1
    1b40:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <GameField+0x6>
    1b44:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <GameField+0x7>
    1b48:	02 97       	sbiw	r24, 0x02	; 2
    1b4a:	09 f0       	breq	.+2      	; 0x1b4e <Results+0x108>
    1b4c:	f0 e0       	ldi	r31, 0x00	; 0
    1b4e:	61 e0       	ldi	r22, 0x01	; 1
    1b50:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <GameField+0xc>
    1b54:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <GameField+0xd>
    1b58:	02 97       	sbiw	r24, 0x02	; 2
    1b5a:	09 f0       	breq	.+2      	; 0x1b5e <Results+0x118>
    1b5c:	60 e0       	ldi	r22, 0x00	; 0
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
    1b5e:	21 e0       	ldi	r18, 0x01	; 1
    1b60:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <GameField+0x2>
    1b64:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <GameField+0x3>
    1b68:	02 97       	sbiw	r24, 0x02	; 2
    1b6a:	09 f0       	breq	.+2      	; 0x1b6e <Results+0x128>
    1b6c:	20 e0       	ldi	r18, 0x00	; 0
    1b6e:	a1 e0       	ldi	r26, 0x01	; 1
    1b70:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <GameField+0x8>
    1b74:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <GameField+0x9>
    1b78:	02 97       	sbiw	r24, 0x02	; 2
    1b7a:	09 f0       	breq	.+2      	; 0x1b7e <Results+0x138>
    1b7c:	a0 e0       	ldi	r26, 0x00	; 0
    1b7e:	91 e0       	ldi	r25, 0x01	; 1
    1b80:	00 91 1a 01 	lds	r16, 0x011A	; 0x80011a <GameField+0xe>
    1b84:	10 91 1b 01 	lds	r17, 0x011B	; 0x80011b <GameField+0xf>
    1b88:	02 30       	cpi	r16, 0x02	; 2
    1b8a:	11 05       	cpc	r17, r1
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <Results+0x14a>
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
    1b90:	51 e0       	ldi	r21, 0x01	; 1
    1b92:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <GameField+0x4>
    1b96:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <GameField+0x5>
    1b9a:	02 30       	cpi	r16, 0x02	; 2
    1b9c:	11 05       	cpc	r17, r1
    1b9e:	09 f0       	breq	.+2      	; 0x1ba2 <Results+0x15c>
    1ba0:	50 e0       	ldi	r21, 0x00	; 0
    1ba2:	31 e0       	ldi	r19, 0x01	; 1
    1ba4:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <GameField+0xa>
    1ba8:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <GameField+0xb>
    1bac:	02 30       	cpi	r16, 0x02	; 2
    1bae:	11 05       	cpc	r17, r1
    1bb0:	09 f0       	breq	.+2      	; 0x1bb4 <Results+0x16e>
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	00 91 1c 01 	lds	r16, 0x011C	; 0x80011c <GameField+0x10>
    1bba:	10 91 1d 01 	lds	r17, 0x011D	; 0x80011d <GameField+0x11>
    1bbe:	02 30       	cpi	r16, 0x02	; 2
    1bc0:	11 05       	cpc	r17, r1
    1bc2:	09 f0       	breq	.+2      	; 0x1bc6 <Results+0x180>
    1bc4:	80 e0       	ldi	r24, 0x00	; 0
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
    1bc6:	7a 2f       	mov	r23, r26
    1bc8:	72 23       	and	r23, r18
    1bca:	e7 2f       	mov	r30, r23
    1bcc:	e9 23       	and	r30, r25
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
    1bce:	7f 2f       	mov	r23, r31
    1bd0:	74 23       	and	r23, r20
    1bd2:	76 23       	and	r23, r22
    1bd4:	7e 2b       	or	r23, r30
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
    1bd6:	e3 2f       	mov	r30, r19
    1bd8:	e5 23       	and	r30, r21
    1bda:	e8 23       	and	r30, r24
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
    1bdc:	7e 2b       	or	r23, r30
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
    1bde:	24 23       	and	r18, r20
    1be0:	25 23       	and	r18, r21
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
    1be2:	27 2b       	or	r18, r23
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
    1be4:	fa 23       	and	r31, r26
    1be6:	3f 23       	and	r19, r31
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
    1be8:	23 2b       	or	r18, r19
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
		((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==2))|
    1bea:	96 23       	and	r25, r22
    1bec:	98 23       	and	r25, r24
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
    1bee:	92 2b       	or	r25, r18
		((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==2))|
    1bf0:	4a 23       	and	r20, r26
    1bf2:	84 23       	and	r24, r20
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
		((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==2))|
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
		((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==2))|
    1bf4:	98 2b       	or	r25, r24
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
    1bf6:	19 f4       	brne	.+6      	; 0x1bfe <Results+0x1b8>
    1bf8:	6a 23       	and	r22, r26
		((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
		((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==2))|
		((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==2)))
    1bfa:	56 23       	and	r21, r22
		((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==1))|
		((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==1))|
		((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==1)))
		{WinnerPrint(1);}
		
		if(((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==2))|
    1bfc:	21 f0       	breq	.+8      	; 0x1c06 <Results+0x1c0>
		((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==2))|
		((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==2))|
		((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==2))|
		((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==2))|
		((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==2)))
		{WinnerPrint(2);}
    1bfe:	82 e0       	ldi	r24, 0x02	; 2
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 97 0b 	call	0x172e	; 0x172e <WinnerPrint>
		
		if(winnn == true)
    1c06:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <winnn>
    1c0a:	88 23       	and	r24, r24
    1c0c:	29 f0       	breq	.+10     	; 0x1c18 <Results+0x1d2>
		{
			fr = false;
    1c0e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
			winnn = false;
    1c12:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <winnn>
			return;
    1c16:	08 c0       	rjmp	.+16     	; 0x1c28 <Results+0x1e2>
		}
		
		if(input == 0)
    1c18:	cd 2b       	or	r28, r29
    1c1a:	31 f4       	brne	.+12     	; 0x1c28 <Results+0x1e2>
		{fr = false;
    1c1c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
			WinnerPrint(0);}
    1c20:	80 e0       	ldi	r24, 0x00	; 0
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	0e 94 97 0b 	call	0x172e	; 0x172e <WinnerPrint>
	}
}
    1c28:	df 91       	pop	r29
    1c2a:	cf 91       	pop	r28
    1c2c:	1f 91       	pop	r17
    1c2e:	0f 91       	pop	r16
    1c30:	08 95       	ret

00001c32 <ButtonProcessor>:
		}
	}
}

void ButtonProcessor(int button)
{
    1c32:	4f 92       	push	r4
    1c34:	5f 92       	push	r5
    1c36:	6f 92       	push	r6
    1c38:	7f 92       	push	r7
    1c3a:	8f 92       	push	r8
    1c3c:	9f 92       	push	r9
    1c3e:	af 92       	push	r10
    1c40:	bf 92       	push	r11
    1c42:	cf 92       	push	r12
    1c44:	df 92       	push	r13
    1c46:	ef 92       	push	r14
    1c48:	ff 92       	push	r15
    1c4a:	0f 93       	push	r16
    1c4c:	1f 93       	push	r17
    1c4e:	cf 93       	push	r28
    1c50:	df 93       	push	r29
    1c52:	ec 01       	movw	r28, r24
	uint8_t line,column;


if((PvP == false)&(player1 == false))
    1c54:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <PvP>
    1c58:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1c5c:	91 e0       	ldi	r25, 0x01	; 1
    1c5e:	98 27       	eor	r25, r24
    1c60:	29 17       	cp	r18, r25
    1c62:	08 f0       	brcs	.+2      	; 0x1c66 <ButtonProcessor+0x34>
    1c64:	d1 c6       	rjmp	.+3490   	; 0x2a08 <ButtonProcessor+0xdd6>
{
	bool endd = false;
	
	if((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==0)&(endd == false))
    1c66:	c0 91 0c 01 	lds	r28, 0x010C	; 0x80010c <GameField>
    1c6a:	d0 91 0d 01 	lds	r29, 0x010D	; 0x80010d <GameField+0x1>
    1c6e:	91 e0       	ldi	r25, 0x01	; 1
    1c70:	c2 30       	cpi	r28, 0x02	; 2
    1c72:	d1 05       	cpc	r29, r1
    1c74:	09 f0       	breq	.+2      	; 0x1c78 <ButtonProcessor+0x46>
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	ec e0       	ldi	r30, 0x0C	; 12
    1c7a:	f1 e0       	ldi	r31, 0x01	; 1
    1c7c:	26 81       	ldd	r18, Z+6	; 0x06
    1c7e:	37 81       	ldd	r19, Z+7	; 0x07
    1c80:	44 85       	ldd	r20, Z+12	; 0x0c
    1c82:	55 85       	ldd	r21, Z+13	; 0x0d
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	22 30       	cpi	r18, 0x02	; 2
    1c88:	31 05       	cpc	r19, r1
    1c8a:	09 f0       	breq	.+2      	; 0x1c8e <ButtonProcessor+0x5c>
    1c8c:	80 e0       	ldi	r24, 0x00	; 0
    1c8e:	89 23       	and	r24, r25
    1c90:	61 e0       	ldi	r22, 0x01	; 1
    1c92:	41 15       	cp	r20, r1
    1c94:	51 05       	cpc	r21, r1
    1c96:	09 f0       	breq	.+2      	; 0x1c9a <ButtonProcessor+0x68>
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	a8 2e       	mov	r10, r24
    1c9c:	a6 22       	and	r10, r22
    1c9e:	91 f0       	breq	.+36     	; 0x1cc4 <ButtonProcessor+0x92>
	{GameField[2][0] = 2;
    1ca0:	ec e0       	ldi	r30, 0x0C	; 12
    1ca2:	f1 e0       	ldi	r31, 0x01	; 1
    1ca4:	82 e0       	ldi	r24, 0x02	; 2
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	95 87       	std	Z+13, r25	; 0x0d
    1caa:	84 87       	std	Z+12, r24	; 0x0c
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][0] = 2;
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
    1cac:	a6 81       	ldd	r26, Z+6	; 0x06
    1cae:	b7 81       	ldd	r27, Z+7	; 0x07
    1cb0:	bb 24       	eor	r11, r11
    1cb2:	b3 94       	inc	r11
    1cb4:	a2 30       	cpi	r26, 0x02	; 2
    1cb6:	b1 05       	cpc	r27, r1
    1cb8:	09 f0       	breq	.+2      	; 0x1cbc <ButtonProcessor+0x8a>
    1cba:	b1 2c       	mov	r11, r1
	bool endd = false;
	
	if((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
    1cbc:	42 e0       	ldi	r20, 0x02	; 2
    1cbe:	50 e0       	ldi	r21, 0x00	; 0
{
	bool endd = false;
	
	if((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
    1cc0:	81 e0       	ldi	r24, 0x01	; 1
    1cc2:	49 c0       	rjmp	.+146    	; 0x1d56 <ButtonProcessor+0x124>
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
    1cc4:	aa 24       	eor	r10, r10
    1cc6:	a3 94       	inc	r10
    1cc8:	42 30       	cpi	r20, 0x02	; 2
    1cca:	51 05       	cpc	r21, r1
    1ccc:	09 f0       	breq	.+2      	; 0x1cd0 <ButtonProcessor+0x9e>
    1cce:	a1 2c       	mov	r10, r1
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	23 2b       	or	r18, r19
    1cd4:	09 f0       	breq	.+2      	; 0x1cd8 <ButtonProcessor+0xa6>
    1cd6:	80 e0       	ldi	r24, 0x00	; 0
    1cd8:	b8 2e       	mov	r11, r24
    1cda:	b9 22       	and	r11, r25
    1cdc:	ba 20       	and	r11, r10
    1cde:	a9 f0       	breq	.+42     	; 0x1d0a <ButtonProcessor+0xd8>
	{GameField[1][0] = 2;
    1ce0:	ec e0       	ldi	r30, 0x0C	; 12
    1ce2:	f1 e0       	ldi	r31, 0x01	; 1
    1ce4:	82 e0       	ldi	r24, 0x02	; 2
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	97 83       	std	Z+7, r25	; 0x07
    1cea:	86 83       	std	Z+6, r24	; 0x06
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
	{GameField[0][0] = 2;
	endd = true;}
	
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
    1cec:	22 81       	ldd	r18, Z+2	; 0x02
    1cee:	33 81       	ldd	r19, Z+3	; 0x03
    1cf0:	91 e0       	ldi	r25, 0x01	; 1
    1cf2:	22 30       	cpi	r18, 0x02	; 2
    1cf4:	31 05       	cpc	r19, r1
    1cf6:	09 f0       	breq	.+2      	; 0x1cfa <ButtonProcessor+0xc8>
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <GameField+0x8>
    1cfe:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <GameField+0x9>
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][0] = 2;
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
    1d02:	a2 e0       	ldi	r26, 0x02	; 2
    1d04:	b0 e0       	ldi	r27, 0x00	; 0
	if((GameField[0][0]==2)&(GameField[1][0]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][0] = 2;
	endd = true;}
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	5a c0       	rjmp	.+180    	; 0x1dbe <ButtonProcessor+0x18c>
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
    1d0a:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <GameField+0x6>
    1d0e:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <GameField+0x7>
    1d12:	bb 24       	eor	r11, r11
    1d14:	b3 94       	inc	r11
    1d16:	a2 30       	cpi	r26, 0x02	; 2
    1d18:	b1 05       	cpc	r27, r1
    1d1a:	09 f0       	breq	.+2      	; 0x1d1e <ButtonProcessor+0xec>
    1d1c:	b1 2c       	mov	r11, r1
    1d1e:	aa 20       	and	r10, r10
    1d20:	c9 f0       	breq	.+50     	; 0x1d54 <ButtonProcessor+0x122>
    1d22:	81 e0       	ldi	r24, 0x01	; 1
    1d24:	cd 2b       	or	r28, r29
    1d26:	09 f0       	breq	.+2      	; 0x1d2a <ButtonProcessor+0xf8>
    1d28:	80 e0       	ldi	r24, 0x00	; 0
    1d2a:	8b 21       	and	r24, r11
    1d2c:	99 f0       	breq	.+38     	; 0x1d54 <ButtonProcessor+0x122>
	{GameField[0][0] = 2;
    1d2e:	ec e0       	ldi	r30, 0x0C	; 12
    1d30:	f1 e0       	ldi	r31, 0x01	; 1
    1d32:	82 e0       	ldi	r24, 0x02	; 2
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	80 83       	st	Z, r24
	endd = true;}
	
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
    1d3a:	22 81       	ldd	r18, Z+2	; 0x02
    1d3c:	33 81       	ldd	r19, Z+3	; 0x03
	{GameField[2][1] = 2;
	endd = true;}
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
    1d3e:	06 84       	ldd	r0, Z+14	; 0x0e
    1d40:	f7 85       	ldd	r31, Z+15	; 0x0f
    1d42:	e0 2d       	mov	r30, r0
    1d44:	99 24       	eor	r9, r9
    1d46:	93 94       	inc	r9
    1d48:	e2 30       	cpi	r30, 0x02	; 2
    1d4a:	f1 05       	cpc	r31, r1
    1d4c:	09 f0       	breq	.+2      	; 0x1d50 <ButtonProcessor+0x11e>
    1d4e:	91 2c       	mov	r9, r1
	if((GameField[0][0]==2)&(GameField[1][0]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][0] = 2;
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
	{GameField[0][0] = 2;
	endd = true;}
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	55 c0       	rjmp	.+170    	; 0x1dfe <ButtonProcessor+0x1cc>
	uint8_t line,column;


if((PvP == false)&(player1 == false))
{
	bool endd = false;
    1d54:	80 e0       	ldi	r24, 0x00	; 0
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==2)&(GameField[2][0]==2)&(endd == false))
	{GameField[0][0] = 2;
	endd = true;}
	
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
    1d56:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <GameField+0x2>
    1d5a:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <GameField+0x3>
    1d5e:	91 e0       	ldi	r25, 0x01	; 1
    1d60:	22 30       	cpi	r18, 0x02	; 2
    1d62:	31 05       	cpc	r19, r1
    1d64:	09 f0       	breq	.+2      	; 0x1d68 <ButtonProcessor+0x136>
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <GameField+0x8>
    1d6c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <GameField+0x9>
    1d70:	e1 e0       	ldi	r30, 0x01	; 1
    1d72:	62 30       	cpi	r22, 0x02	; 2
    1d74:	71 05       	cpc	r23, r1
    1d76:	09 f0       	breq	.+2      	; 0x1d7a <ButtonProcessor+0x148>
    1d78:	e0 e0       	ldi	r30, 0x00	; 0
    1d7a:	fe 2f       	mov	r31, r30
    1d7c:	f9 23       	and	r31, r25
    1d7e:	e1 e0       	ldi	r30, 0x01	; 1
    1d80:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <GameField+0xe>
    1d84:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <GameField+0xf>
    1d88:	cd 2b       	or	r28, r29
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <ButtonProcessor+0x15c>
    1d8c:	e0 e0       	ldi	r30, 0x00	; 0
    1d8e:	ef 23       	and	r30, r31
    1d90:	8e 17       	cp	r24, r30
    1d92:	a8 f4       	brcc	.+42     	; 0x1dbe <ButtonProcessor+0x18c>
	{GameField[2][1] = 2;
    1d94:	ec e0       	ldi	r30, 0x0C	; 12
    1d96:	f1 e0       	ldi	r31, 0x01	; 1
    1d98:	82 e0       	ldi	r24, 0x02	; 2
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	97 87       	std	Z+15, r25	; 0x0f
    1d9e:	86 87       	std	Z+14, r24	; 0x0e
	endd = true;}
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][1]==0)&(GameField[1][1]==2)&(GameField[2][1]==2)&(endd == false))
    1da0:	c0 84       	ldd	r12, Z+8	; 0x08
    1da2:	d1 84       	ldd	r13, Z+9	; 0x09
    1da4:	88 24       	eor	r8, r8
    1da6:	83 94       	inc	r8
    1da8:	62 e0       	ldi	r22, 0x02	; 2
    1daa:	c6 16       	cp	r12, r22
    1dac:	d1 04       	cpc	r13, r1
    1dae:	09 f0       	breq	.+2      	; 0x1db2 <ButtonProcessor+0x180>
    1db0:	81 2c       	mov	r8, r1
	endd = true;}
	
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
    1db2:	99 24       	eor	r9, r9
    1db4:	93 94       	inc	r9
    1db6:	e2 e0       	ldi	r30, 0x02	; 2
    1db8:	f0 e0       	ldi	r31, 0x00	; 0
	{GameField[0][0] = 2;
	endd = true;}
	
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
    1dba:	81 e0       	ldi	r24, 0x01	; 1
    1dbc:	47 c0       	rjmp	.+142    	; 0x1e4c <ButtonProcessor+0x21a>
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
    1dbe:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <GameField+0xe>
    1dc2:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <GameField+0xf>
    1dc6:	99 24       	eor	r9, r9
    1dc8:	93 94       	inc	r9
    1dca:	e2 30       	cpi	r30, 0x02	; 2
    1dcc:	f1 05       	cpc	r31, r1
    1dce:	09 f0       	breq	.+2      	; 0x1dd2 <ButtonProcessor+0x1a0>
    1dd0:	91 2c       	mov	r9, r1
    1dd2:	99 21       	and	r25, r9
    1dd4:	c1 e0       	ldi	r28, 0x01	; 1
    1dd6:	67 2b       	or	r22, r23
    1dd8:	09 f0       	breq	.+2      	; 0x1ddc <ButtonProcessor+0x1aa>
    1dda:	c0 e0       	ldi	r28, 0x00	; 0
    1ddc:	9c 23       	and	r25, r28
    1dde:	89 17       	cp	r24, r25
    1de0:	70 f4       	brcc	.+28     	; 0x1dfe <ButtonProcessor+0x1cc>
	{GameField[1][1] = 2;
    1de2:	82 e0       	ldi	r24, 0x02	; 2
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <GameField+0x9>
    1dea:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <GameField+0x8>
	endd = true;}
	if((GameField[0][1]==0)&(GameField[1][1]==2)&(GameField[2][1]==2)&(endd == false))
    1dee:	88 24       	eor	r8, r8
    1df0:	83 94       	inc	r8
    1df2:	68 94       	set
    1df4:	cc 24       	eor	r12, r12
    1df6:	c1 f8       	bld	r12, 1
    1df8:	d1 2c       	mov	r13, r1
	if((GameField[0][1]==2)&(GameField[1][1]==2)&(GameField[2][1]==0)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	27 c0       	rjmp	.+78     	; 0x1e4c <ButtonProcessor+0x21a>
	if((GameField[0][1]==0)&(GameField[1][1]==2)&(GameField[2][1]==2)&(endd == false))
    1dfe:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <GameField+0x8>
    1e02:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <GameField+0x9>
    1e06:	88 24       	eor	r8, r8
    1e08:	83 94       	inc	r8
    1e0a:	92 e0       	ldi	r25, 0x02	; 2
    1e0c:	c9 16       	cp	r12, r25
    1e0e:	d1 04       	cpc	r13, r1
    1e10:	09 f0       	breq	.+2      	; 0x1e14 <ButtonProcessor+0x1e2>
    1e12:	81 2c       	mov	r8, r1
    1e14:	69 2d       	mov	r22, r9
    1e16:	68 21       	and	r22, r8
    1e18:	91 e0       	ldi	r25, 0x01	; 1
    1e1a:	23 2b       	or	r18, r19
    1e1c:	09 f0       	breq	.+2      	; 0x1e20 <ButtonProcessor+0x1ee>
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	96 23       	and	r25, r22
    1e22:	89 17       	cp	r24, r25
    1e24:	98 f4       	brcc	.+38     	; 0x1e4c <ButtonProcessor+0x21a>
	{GameField[0][1] = 2;
    1e26:	cc e0       	ldi	r28, 0x0C	; 12
    1e28:	d1 e0       	ldi	r29, 0x01	; 1
    1e2a:	82 e0       	ldi	r24, 0x02	; 2
    1e2c:	90 e0       	ldi	r25, 0x00	; 0
    1e2e:	9b 83       	std	Y+3, r25	; 0x03
    1e30:	8a 83       	std	Y+2, r24	; 0x02
	endd = true;}
	
	if((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==0)&(endd == false))
    1e32:	2c 81       	ldd	r18, Y+4	; 0x04
    1e34:	3d 81       	ldd	r19, Y+5	; 0x05
    1e36:	91 e0       	ldi	r25, 0x01	; 1
    1e38:	22 30       	cpi	r18, 0x02	; 2
    1e3a:	31 05       	cpc	r19, r1
    1e3c:	09 f0       	breq	.+2      	; 0x1e40 <ButtonProcessor+0x20e>
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <GameField+0xa>
    1e44:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <GameField+0xb>
	if((GameField[0][1]==2)&(GameField[1][1]==0)&(GameField[2][1]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][1]==0)&(GameField[1][1]==2)&(GameField[2][1]==2)&(endd == false))
	{GameField[0][1] = 2;
	endd = true;}
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	2e c0       	rjmp	.+92     	; 0x1ea8 <ButtonProcessor+0x276>
	
	if((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==0)&(endd == false))
    1e4c:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <GameField+0x4>
    1e50:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <GameField+0x5>
    1e54:	91 e0       	ldi	r25, 0x01	; 1
    1e56:	22 30       	cpi	r18, 0x02	; 2
    1e58:	31 05       	cpc	r19, r1
    1e5a:	09 f0       	breq	.+2      	; 0x1e5e <ButtonProcessor+0x22c>
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <GameField+0xa>
    1e62:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <GameField+0xb>
    1e66:	c1 e0       	ldi	r28, 0x01	; 1
    1e68:	62 30       	cpi	r22, 0x02	; 2
    1e6a:	71 05       	cpc	r23, r1
    1e6c:	09 f0       	breq	.+2      	; 0x1e70 <ButtonProcessor+0x23e>
    1e6e:	c0 e0       	ldi	r28, 0x00	; 0
    1e70:	1c 2f       	mov	r17, r28
    1e72:	19 23       	and	r17, r25
    1e74:	01 e0       	ldi	r16, 0x01	; 1
    1e76:	c0 91 1c 01 	lds	r28, 0x011C	; 0x80011c <GameField+0x10>
    1e7a:	d0 91 1d 01 	lds	r29, 0x011D	; 0x80011d <GameField+0x11>
    1e7e:	cd 2b       	or	r28, r29
    1e80:	09 f0       	breq	.+2      	; 0x1e84 <ButtonProcessor+0x252>
    1e82:	00 e0       	ldi	r16, 0x00	; 0
    1e84:	c1 2f       	mov	r28, r17
    1e86:	c0 23       	and	r28, r16
    1e88:	8c 17       	cp	r24, r28
    1e8a:	70 f4       	brcc	.+28     	; 0x1ea8 <ButtonProcessor+0x276>
	{GameField[2][2] = 2;
    1e8c:	82 e0       	ldi	r24, 0x02	; 2
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <GameField+0x11>
    1e94:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <GameField+0x10>
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][2]==0)&(GameField[2][2]==2)&(endd == false))
    1e98:	ff 24       	eor	r15, r15
    1e9a:	f3 94       	inc	r15
    1e9c:	68 94       	set
    1e9e:	44 24       	eor	r4, r4
    1ea0:	41 f8       	bld	r4, 1
    1ea2:	51 2c       	mov	r5, r1
	{GameField[0][1] = 2;
	endd = true;}
	
	if((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	1d c0       	rjmp	.+58     	; 0x1ee2 <ButtonProcessor+0x2b0>
	if((GameField[0][2]==2)&(GameField[1][2]==0)&(GameField[2][2]==2)&(endd == false))
    1ea8:	40 90 1c 01 	lds	r4, 0x011C	; 0x80011c <GameField+0x10>
    1eac:	50 90 1d 01 	lds	r5, 0x011D	; 0x80011d <GameField+0x11>
    1eb0:	ff 24       	eor	r15, r15
    1eb2:	f3 94       	inc	r15
    1eb4:	c2 e0       	ldi	r28, 0x02	; 2
    1eb6:	4c 16       	cp	r4, r28
    1eb8:	51 04       	cpc	r5, r1
    1eba:	09 f0       	breq	.+2      	; 0x1ebe <ButtonProcessor+0x28c>
    1ebc:	f1 2c       	mov	r15, r1
    1ebe:	9f 21       	and	r25, r15
    1ec0:	11 e0       	ldi	r17, 0x01	; 1
    1ec2:	67 2b       	or	r22, r23
    1ec4:	09 f0       	breq	.+2      	; 0x1ec8 <ButtonProcessor+0x296>
    1ec6:	10 e0       	ldi	r17, 0x00	; 0
    1ec8:	91 23       	and	r25, r17
    1eca:	89 17       	cp	r24, r25
    1ecc:	50 f4       	brcc	.+20     	; 0x1ee2 <ButtonProcessor+0x2b0>
	{GameField[1][2] = 2;
    1ece:	82 e0       	ldi	r24, 0x02	; 2
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <GameField+0xb>
    1ed6:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <GameField+0xa>
	endd = true;}
	if((GameField[0][2]==0)&(GameField[1][2]==2)&(GameField[2][2]==2)&(endd == false))
    1eda:	02 e0       	ldi	r16, 0x02	; 2
    1edc:	10 e0       	ldi	r17, 0x00	; 0
	if((GameField[0][2]==2)&(GameField[1][2]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][2]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[1][2] = 2;
	endd = true;}
    1ede:	81 e0       	ldi	r24, 0x01	; 1
    1ee0:	26 c0       	rjmp	.+76     	; 0x1f2e <ButtonProcessor+0x2fc>
	if((GameField[0][2]==0)&(GameField[1][2]==2)&(GameField[2][2]==2)&(endd == false))
    1ee2:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <GameField+0xa>
    1ee6:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <GameField+0xb>
    1eea:	91 e0       	ldi	r25, 0x01	; 1
    1eec:	02 30       	cpi	r16, 0x02	; 2
    1eee:	11 05       	cpc	r17, r1
    1ef0:	09 f0       	breq	.+2      	; 0x1ef4 <ButtonProcessor+0x2c2>
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	9f 21       	and	r25, r15
    1ef6:	61 e0       	ldi	r22, 0x01	; 1
    1ef8:	23 2b       	or	r18, r19
    1efa:	09 f0       	breq	.+2      	; 0x1efe <ButtonProcessor+0x2cc>
    1efc:	60 e0       	ldi	r22, 0x00	; 0
    1efe:	96 23       	and	r25, r22
    1f00:	89 17       	cp	r24, r25
    1f02:	a8 f4       	brcc	.+42     	; 0x1f2e <ButtonProcessor+0x2fc>
	{GameField[0][2] = 2;
    1f04:	8c e0       	ldi	r24, 0x0C	; 12
    1f06:	91 e0       	ldi	r25, 0x01	; 1
    1f08:	22 e0       	ldi	r18, 0x02	; 2
    1f0a:	30 e0       	ldi	r19, 0x00	; 0
    1f0c:	ec 01       	movw	r28, r24
    1f0e:	3d 83       	std	Y+5, r19	; 0x05
    1f10:	2c 83       	std	Y+4, r18	; 0x04
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==0)&(endd == false))
    1f12:	68 81       	ld	r22, Y
    1f14:	79 81       	ldd	r23, Y+1	; 0x01
    1f16:	77 24       	eor	r7, r7
    1f18:	73 94       	inc	r7
    1f1a:	62 30       	cpi	r22, 0x02	; 2
    1f1c:	71 05       	cpc	r23, r1
    1f1e:	09 f0       	breq	.+2      	; 0x1f22 <ButtonProcessor+0x2f0>
    1f20:	71 2c       	mov	r7, r1
    1f22:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <GameField+0x2>
    1f26:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <GameField+0x3>
	if((GameField[0][2]==2)&(GameField[1][2]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[1][2] = 2;
	endd = true;}
	if((GameField[0][2]==0)&(GameField[1][2]==2)&(GameField[2][2]==2)&(endd == false))
	{GameField[0][2] = 2;
	endd = true;}
    1f2a:	81 e0       	ldi	r24, 0x01	; 1
    1f2c:	2d c0       	rjmp	.+90     	; 0x1f88 <ButtonProcessor+0x356>
	
	if((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==0)&(endd == false))
    1f2e:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <GameField>
    1f32:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <GameField+0x1>
    1f36:	77 24       	eor	r7, r7
    1f38:	73 94       	inc	r7
    1f3a:	62 30       	cpi	r22, 0x02	; 2
    1f3c:	71 05       	cpc	r23, r1
    1f3e:	09 f0       	breq	.+2      	; 0x1f42 <ButtonProcessor+0x310>
    1f40:	71 2c       	mov	r7, r1
    1f42:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <GameField+0x2>
    1f46:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <GameField+0x3>
    1f4a:	91 e0       	ldi	r25, 0x01	; 1
    1f4c:	22 30       	cpi	r18, 0x02	; 2
    1f4e:	31 05       	cpc	r19, r1
    1f50:	09 f0       	breq	.+2      	; 0x1f54 <ButtonProcessor+0x322>
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	97 21       	and	r25, r7
    1f56:	66 24       	eor	r6, r6
    1f58:	63 94       	inc	r6
    1f5a:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <GameField+0x4>
    1f5e:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <GameField+0x5>
    1f62:	ef 28       	or	r14, r15
    1f64:	09 f0       	breq	.+2      	; 0x1f68 <ButtonProcessor+0x336>
    1f66:	61 2c       	mov	r6, r1
    1f68:	96 21       	and	r25, r6
    1f6a:	89 17       	cp	r24, r25
    1f6c:	68 f4       	brcc	.+26     	; 0x1f88 <ButtonProcessor+0x356>
	{GameField[0][2] = 2;
    1f6e:	82 e0       	ldi	r24, 0x02	; 2
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <GameField+0x5>
    1f76:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <GameField+0x4>
	endd = true;}
	if((GameField[0][0]==2)&(GameField[0][1]==0)&(GameField[0][2]==2)&(endd == false))
    1f7a:	91 e0       	ldi	r25, 0x01	; 1
    1f7c:	68 94       	set
    1f7e:	ee 24       	eor	r14, r14
    1f80:	e1 f8       	bld	r14, 1
    1f82:	f1 2c       	mov	r15, r1
	{GameField[0][2] = 2;
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[0][1]==2)&(GameField[0][2]==0)&(endd == false))
	{GameField[0][2] = 2;
	endd = true;}
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	1b c0       	rjmp	.+54     	; 0x1fbe <ButtonProcessor+0x38c>
	if((GameField[0][0]==2)&(GameField[0][1]==0)&(GameField[0][2]==2)&(endd == false))
    1f88:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <GameField+0x4>
    1f8c:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <GameField+0x5>
    1f90:	91 e0       	ldi	r25, 0x01	; 1
    1f92:	d2 e0       	ldi	r29, 0x02	; 2
    1f94:	ed 16       	cp	r14, r29
    1f96:	f1 04       	cpc	r15, r1
    1f98:	09 f0       	breq	.+2      	; 0x1f9c <ButtonProcessor+0x36a>
    1f9a:	90 e0       	ldi	r25, 0x00	; 0
    1f9c:	79 22       	and	r7, r25
    1f9e:	66 24       	eor	r6, r6
    1fa0:	63 94       	inc	r6
    1fa2:	23 2b       	or	r18, r19
    1fa4:	09 f0       	breq	.+2      	; 0x1fa8 <ButtonProcessor+0x376>
    1fa6:	61 2c       	mov	r6, r1
    1fa8:	76 20       	and	r7, r6
    1faa:	87 15       	cp	r24, r7
    1fac:	40 f4       	brcc	.+16     	; 0x1fbe <ButtonProcessor+0x38c>
	{GameField[0][1] = 2;
    1fae:	22 e0       	ldi	r18, 0x02	; 2
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <GameField+0x3>
    1fb6:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <GameField+0x2>
	endd = true;}
    1fba:	81 e0       	ldi	r24, 0x01	; 1
    1fbc:	1b c0       	rjmp	.+54     	; 0x1ff4 <ButtonProcessor+0x3c2>
	if((GameField[0][0]==0)&(GameField[0][1]==2)&(GameField[0][2]==2)&(endd == false))
    1fbe:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <GameField+0x2>
    1fc2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <GameField+0x3>
    1fc6:	77 24       	eor	r7, r7
    1fc8:	73 94       	inc	r7
    1fca:	22 30       	cpi	r18, 0x02	; 2
    1fcc:	31 05       	cpc	r19, r1
    1fce:	09 f0       	breq	.+2      	; 0x1fd2 <ButtonProcessor+0x3a0>
    1fd0:	71 2c       	mov	r7, r1
    1fd2:	79 22       	and	r7, r25
    1fd4:	66 24       	eor	r6, r6
    1fd6:	63 94       	inc	r6
    1fd8:	67 2b       	or	r22, r23
    1fda:	09 f0       	breq	.+2      	; 0x1fde <ButtonProcessor+0x3ac>
    1fdc:	61 2c       	mov	r6, r1
    1fde:	76 20       	and	r7, r6
    1fe0:	87 15       	cp	r24, r7
    1fe2:	40 f4       	brcc	.+16     	; 0x1ff4 <ButtonProcessor+0x3c2>
	{GameField[0][0] = 2;
    1fe4:	62 e0       	ldi	r22, 0x02	; 2
    1fe6:	70 e0       	ldi	r23, 0x00	; 0
    1fe8:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <GameField+0x1>
    1fec:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <GameField>
	endd = true;}
    1ff0:	81 e0       	ldi	r24, 0x01	; 1
    1ff2:	14 c0       	rjmp	.+40     	; 0x201c <ButtonProcessor+0x3ea>
	
	if((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==0)&(endd == false))
    1ff4:	8b 20       	and	r8, r11
    1ff6:	61 e0       	ldi	r22, 0x01	; 1
    1ff8:	01 2b       	or	r16, r17
    1ffa:	09 f0       	breq	.+2      	; 0x1ffe <ButtonProcessor+0x3cc>
    1ffc:	60 e0       	ldi	r22, 0x00	; 0
    1ffe:	86 22       	and	r8, r22
    2000:	88 15       	cp	r24, r8
    2002:	60 f4       	brcc	.+24     	; 0x201c <ButtonProcessor+0x3ea>
	{GameField[1][2] = 2;
    2004:	62 e0       	ldi	r22, 0x02	; 2
    2006:	70 e0       	ldi	r23, 0x00	; 0
    2008:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <GameField+0xb>
    200c:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <GameField+0xa>
	endd = true;}
	if((GameField[1][0]==2)&(GameField[1][1]==0)&(GameField[1][2]==2)&(endd == false))
    2010:	88 24       	eor	r8, r8
    2012:	83 94       	inc	r8
    2014:	02 e0       	ldi	r16, 0x02	; 2
    2016:	10 e0       	ldi	r17, 0x00	; 0
	{GameField[0][0] = 2;
	endd = true;}
	
	if((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==0)&(endd == false))
	{GameField[1][2] = 2;
	endd = true;}
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	1c c0       	rjmp	.+56     	; 0x2054 <ButtonProcessor+0x422>
	if((GameField[1][0]==2)&(GameField[1][1]==0)&(GameField[1][2]==2)&(endd == false))
    201c:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <GameField+0xa>
    2020:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <GameField+0xb>
    2024:	88 24       	eor	r8, r8
    2026:	83 94       	inc	r8
    2028:	02 30       	cpi	r16, 0x02	; 2
    202a:	11 05       	cpc	r17, r1
    202c:	09 f0       	breq	.+2      	; 0x2030 <ButtonProcessor+0x3fe>
    202e:	81 2c       	mov	r8, r1
    2030:	b8 20       	and	r11, r8
    2032:	61 e0       	ldi	r22, 0x01	; 1
    2034:	cd 28       	or	r12, r13
    2036:	09 f0       	breq	.+2      	; 0x203a <ButtonProcessor+0x408>
    2038:	60 e0       	ldi	r22, 0x00	; 0
    203a:	b6 22       	and	r11, r22
    203c:	8b 15       	cp	r24, r11
    203e:	50 f4       	brcc	.+20     	; 0x2054 <ButtonProcessor+0x422>
	{GameField[1][1] = 2;
    2040:	62 e0       	ldi	r22, 0x02	; 2
    2042:	70 e0       	ldi	r23, 0x00	; 0
    2044:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <GameField+0x9>
    2048:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <GameField+0x8>
	endd = true;}
	if((GameField[1][0]==0)&(GameField[1][1]==2)&(GameField[1][2]==2)&(endd == false))
    204c:	dd 24       	eor	r13, r13
    204e:	d3 94       	inc	r13
	if((GameField[1][0]==2)&(GameField[1][1]==2)&(GameField[1][2]==0)&(endd == false))
	{GameField[1][2] = 2;
	endd = true;}
	if((GameField[1][0]==2)&(GameField[1][1]==0)&(GameField[1][2]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	1b c0       	rjmp	.+54     	; 0x208a <ButtonProcessor+0x458>
	if((GameField[1][0]==0)&(GameField[1][1]==2)&(GameField[1][2]==2)&(endd == false))
    2054:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <GameField+0x8>
    2058:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <GameField+0x9>
    205c:	dd 24       	eor	r13, r13
    205e:	d3 94       	inc	r13
    2060:	62 30       	cpi	r22, 0x02	; 2
    2062:	71 05       	cpc	r23, r1
    2064:	09 f0       	breq	.+2      	; 0x2068 <ButtonProcessor+0x436>
    2066:	d1 2c       	mov	r13, r1
    2068:	8d 20       	and	r8, r13
    206a:	cc 24       	eor	r12, r12
    206c:	c3 94       	inc	r12
    206e:	ab 2b       	or	r26, r27
    2070:	09 f0       	breq	.+2      	; 0x2074 <ButtonProcessor+0x442>
    2072:	c1 2c       	mov	r12, r1
    2074:	8c 20       	and	r8, r12
    2076:	88 15       	cp	r24, r8
    2078:	40 f4       	brcc	.+16     	; 0x208a <ButtonProcessor+0x458>
	{GameField[1][0] = 2;
    207a:	a2 e0       	ldi	r26, 0x02	; 2
    207c:	b0 e0       	ldi	r27, 0x00	; 0
    207e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <GameField+0x7>
    2082:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <GameField+0x6>
	endd = true;}
    2086:	81 e0       	ldi	r24, 0x01	; 1
    2088:	13 c0       	rjmp	.+38     	; 0x20b0 <ButtonProcessor+0x47e>
	
	if((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==0)&(endd == false))
    208a:	9a 20       	and	r9, r10
    208c:	a1 e0       	ldi	r26, 0x01	; 1
    208e:	45 28       	or	r4, r5
    2090:	09 f0       	breq	.+2      	; 0x2094 <ButtonProcessor+0x462>
    2092:	a0 e0       	ldi	r26, 0x00	; 0
    2094:	9a 22       	and	r9, r26
    2096:	89 15       	cp	r24, r9
    2098:	58 f4       	brcc	.+22     	; 0x20b0 <ButtonProcessor+0x47e>
	{GameField[2][2] = 2;
    209a:	e2 e0       	ldi	r30, 0x02	; 2
    209c:	f0 e0       	ldi	r31, 0x00	; 0
    209e:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <GameField+0x11>
    20a2:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <GameField+0x10>
	endd = true;}
	if((GameField[2][0]==2)&(GameField[2][1]==0)&(GameField[2][2]==2)&(endd == false))
    20a6:	d1 e0       	ldi	r29, 0x01	; 1
    20a8:	a2 e0       	ldi	r26, 0x02	; 2
    20aa:	b0 e0       	ldi	r27, 0x00	; 0
	{GameField[1][0] = 2;
	endd = true;}
	
	if((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
    20ac:	81 e0       	ldi	r24, 0x01	; 1
    20ae:	24 c0       	rjmp	.+72     	; 0x20f8 <ButtonProcessor+0x4c6>
	if((GameField[2][0]==2)&(GameField[2][1]==0)&(GameField[2][2]==2)&(endd == false))
    20b0:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <GameField+0x10>
    20b4:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <GameField+0x11>
    20b8:	d1 e0       	ldi	r29, 0x01	; 1
    20ba:	a2 30       	cpi	r26, 0x02	; 2
    20bc:	b1 05       	cpc	r27, r1
    20be:	09 f0       	breq	.+2      	; 0x20c2 <ButtonProcessor+0x490>
    20c0:	d0 e0       	ldi	r29, 0x00	; 0
    20c2:	ad 22       	and	r10, r29
    20c4:	c1 e0       	ldi	r28, 0x01	; 1
    20c6:	ef 2b       	or	r30, r31
    20c8:	09 f0       	breq	.+2      	; 0x20cc <ButtonProcessor+0x49a>
    20ca:	c0 e0       	ldi	r28, 0x00	; 0
    20cc:	ac 22       	and	r10, r28
    20ce:	8a 15       	cp	r24, r10
    20d0:	98 f4       	brcc	.+38     	; 0x20f8 <ButtonProcessor+0x4c6>
	{GameField[2][1] = 2;
    20d2:	ec e0       	ldi	r30, 0x0C	; 12
    20d4:	f1 e0       	ldi	r31, 0x01	; 1
    20d6:	42 e0       	ldi	r20, 0x02	; 2
    20d8:	50 e0       	ldi	r21, 0x00	; 0
    20da:	57 87       	std	Z+15, r21	; 0x0f
    20dc:	46 87       	std	Z+14, r20	; 0x0e
	endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==2)&(GameField[2][2]==2)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
    20de:	40 81       	ld	r20, Z
    20e0:	51 81       	ldd	r21, Z+1	; 0x01
    20e2:	c1 e0       	ldi	r28, 0x01	; 1
    20e4:	42 30       	cpi	r20, 0x02	; 2
    20e6:	51 05       	cpc	r21, r1
    20e8:	09 f0       	breq	.+2      	; 0x20ec <ButtonProcessor+0x4ba>
    20ea:	c0 e0       	ldi	r28, 0x00	; 0
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[2][0]==2)&(GameField[2][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==2)&(GameField[2][2]==2)&(endd == false))
    20ec:	68 94       	set
    20ee:	88 24       	eor	r8, r8
    20f0:	81 f8       	bld	r8, 1
    20f2:	91 2c       	mov	r9, r1
	if((GameField[2][0]==2)&(GameField[2][1]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[2][0]==2)&(GameField[2][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	4e c0       	rjmp	.+156    	; 0x2194 <ButtonProcessor+0x562>
	if((GameField[2][0]==0)&(GameField[2][1]==2)&(GameField[2][2]==2)&(endd == false))
    20f8:	80 90 1a 01 	lds	r8, 0x011A	; 0x80011a <GameField+0xe>
    20fc:	90 90 1b 01 	lds	r9, 0x011B	; 0x80011b <GameField+0xf>
    2100:	c1 e0       	ldi	r28, 0x01	; 1
    2102:	e2 e0       	ldi	r30, 0x02	; 2
    2104:	8e 16       	cp	r8, r30
    2106:	91 04       	cpc	r9, r1
    2108:	09 f0       	breq	.+2      	; 0x210c <ButtonProcessor+0x4da>
    210a:	c0 e0       	ldi	r28, 0x00	; 0
    210c:	cd 23       	and	r28, r29
    210e:	d1 e0       	ldi	r29, 0x01	; 1
    2110:	45 2b       	or	r20, r21
    2112:	09 f0       	breq	.+2      	; 0x2116 <ButtonProcessor+0x4e4>
    2114:	d0 e0       	ldi	r29, 0x00	; 0
    2116:	cd 23       	and	r28, r29
    2118:	8c 17       	cp	r24, r28
    211a:	b0 f4       	brcc	.+44     	; 0x2148 <ButtonProcessor+0x516>
	{GameField[2][0] = 2;
    211c:	ac e0       	ldi	r26, 0x0C	; 12
    211e:	b1 e0       	ldi	r27, 0x01	; 1
    2120:	42 e0       	ldi	r20, 0x02	; 2
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	1d 96       	adiw	r26, 0x0d	; 13
    2126:	5c 93       	st	X, r21
    2128:	4e 93       	st	-X, r20
    212a:	1c 97       	sbiw	r26, 0x0c	; 12
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
    212c:	4d 91       	ld	r20, X+
    212e:	5c 91       	ld	r21, X
    2130:	11 97       	sbiw	r26, 0x01	; 1
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
    2132:	50 96       	adiw	r26, 0x10	; 16
    2134:	0d 90       	ld	r0, X+
    2136:	bc 91       	ld	r27, X
    2138:	a0 2d       	mov	r26, r0
    213a:	d1 e0       	ldi	r29, 0x01	; 1
    213c:	a2 30       	cpi	r26, 0x02	; 2
    213e:	b1 05       	cpc	r27, r1
    2140:	09 f0       	breq	.+2      	; 0x2144 <ButtonProcessor+0x512>
    2142:	d0 e0       	ldi	r29, 0x00	; 0
	if((GameField[2][0]==2)&(GameField[2][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[2][1] = 2;
	endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==2)&(GameField[2][2]==2)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	42 c0       	rjmp	.+132    	; 0x21cc <ButtonProcessor+0x59a>
	
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
    2148:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <GameField>
    214c:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <GameField+0x1>
    2150:	c1 e0       	ldi	r28, 0x01	; 1
    2152:	42 30       	cpi	r20, 0x02	; 2
    2154:	51 05       	cpc	r21, r1
    2156:	09 f0       	breq	.+2      	; 0x215a <ButtonProcessor+0x528>
    2158:	c0 e0       	ldi	r28, 0x00	; 0
    215a:	dc 22       	and	r13, r28
    215c:	d1 e0       	ldi	r29, 0x01	; 1
    215e:	ab 2b       	or	r26, r27
    2160:	09 f0       	breq	.+2      	; 0x2164 <ButtonProcessor+0x532>
    2162:	d0 e0       	ldi	r29, 0x00	; 0
    2164:	dd 22       	and	r13, r29
    2166:	8d 15       	cp	r24, r13
    2168:	a8 f4       	brcc	.+42     	; 0x2194 <ButtonProcessor+0x562>
	{GameField[2][2] = 2;
    216a:	ac e0       	ldi	r26, 0x0C	; 12
    216c:	b1 e0       	ldi	r27, 0x01	; 1
    216e:	42 e0       	ldi	r20, 0x02	; 2
    2170:	50 e0       	ldi	r21, 0x00	; 0
    2172:	51 96       	adiw	r26, 0x11	; 17
    2174:	5c 93       	st	X, r21
    2176:	4e 93       	st	-X, r20
    2178:	50 97       	sbiw	r26, 0x10	; 16
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==2)&(GameField[2][2]==2)&(endd == false))
    217a:	18 96       	adiw	r26, 0x08	; 8
    217c:	6d 91       	ld	r22, X+
    217e:	7c 91       	ld	r23, X
    2180:	19 97       	sbiw	r26, 0x09	; 9
    2182:	c1 e0       	ldi	r28, 0x01	; 1
    2184:	62 30       	cpi	r22, 0x02	; 2
    2186:	71 05       	cpc	r23, r1
    2188:	09 f0       	breq	.+2      	; 0x218c <ButtonProcessor+0x55a>
    218a:	c0 e0       	ldi	r28, 0x00	; 0
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
    218c:	a2 e0       	ldi	r26, 0x02	; 2
    218e:	b0 e0       	ldi	r27, 0x00	; 0
	{GameField[2][0] = 2;
	endd = true;}
	
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	3e c0       	rjmp	.+124    	; 0x2210 <ButtonProcessor+0x5de>
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
    2194:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <GameField+0x10>
    2198:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <GameField+0x11>
    219c:	d1 e0       	ldi	r29, 0x01	; 1
    219e:	a2 30       	cpi	r26, 0x02	; 2
    21a0:	b1 05       	cpc	r27, r1
    21a2:	09 f0       	breq	.+2      	; 0x21a6 <ButtonProcessor+0x574>
    21a4:	d0 e0       	ldi	r29, 0x00	; 0
    21a6:	cd 23       	and	r28, r29
    21a8:	dd 24       	eor	r13, r13
    21aa:	d3 94       	inc	r13
    21ac:	67 2b       	or	r22, r23
    21ae:	09 f0       	breq	.+2      	; 0x21b2 <ButtonProcessor+0x580>
    21b0:	d1 2c       	mov	r13, r1
    21b2:	cd 21       	and	r28, r13
    21b4:	8c 17       	cp	r24, r28
    21b6:	50 f4       	brcc	.+20     	; 0x21cc <ButtonProcessor+0x59a>
	{GameField[1][1] = 2;
    21b8:	42 e0       	ldi	r20, 0x02	; 2
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	50 93 15 01 	sts	0x0115, r21	; 0x800115 <GameField+0x9>
    21c0:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <GameField+0x8>
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==2)&(GameField[2][2]==2)&(endd == false))
    21c4:	62 e0       	ldi	r22, 0x02	; 2
    21c6:	70 e0       	ldi	r23, 0x00	; 0
	if((GameField[0][0]==2)&(GameField[1][1]==2)&(GameField[2][2]==0)&(endd == false))
	{GameField[2][2] = 2;
	endd = true;}
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	3b c0       	rjmp	.+118    	; 0x2242 <ButtonProcessor+0x610>
	if((GameField[0][0]==0)&(GameField[1][1]==2)&(GameField[2][2]==2)&(endd == false))
    21cc:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <GameField+0x8>
    21d0:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <GameField+0x9>
    21d4:	c1 e0       	ldi	r28, 0x01	; 1
    21d6:	62 30       	cpi	r22, 0x02	; 2
    21d8:	71 05       	cpc	r23, r1
    21da:	09 f0       	breq	.+2      	; 0x21de <ButtonProcessor+0x5ac>
    21dc:	c0 e0       	ldi	r28, 0x00	; 0
    21de:	dc 23       	and	r29, r28
    21e0:	dd 24       	eor	r13, r13
    21e2:	d3 94       	inc	r13
    21e4:	45 2b       	or	r20, r21
    21e6:	09 f0       	breq	.+2      	; 0x21ea <ButtonProcessor+0x5b8>
    21e8:	d1 2c       	mov	r13, r1
    21ea:	dd 21       	and	r29, r13
    21ec:	8d 17       	cp	r24, r29
    21ee:	80 f4       	brcc	.+32     	; 0x2210 <ButtonProcessor+0x5de>
	{GameField[0][0] = 2;
    21f0:	cc e0       	ldi	r28, 0x0C	; 12
    21f2:	d1 e0       	ldi	r29, 0x01	; 1
    21f4:	82 e0       	ldi	r24, 0x02	; 2
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	99 83       	std	Y+1, r25	; 0x01
    21fa:	88 83       	st	Y, r24
	endd = true;}
	
	if((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
    21fc:	4c 85       	ldd	r20, Y+12	; 0x0c
    21fe:	5d 85       	ldd	r21, Y+13	; 0x0d
    2200:	dd 24       	eor	r13, r13
    2202:	d3 94       	inc	r13
    2204:	42 30       	cpi	r20, 0x02	; 2
    2206:	51 05       	cpc	r21, r1
    2208:	09 f0       	breq	.+2      	; 0x220c <ButtonProcessor+0x5da>
    220a:	d1 2c       	mov	r13, r1
	if((GameField[0][0]==2)&(GameField[1][1]==0)&(GameField[2][2]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==2)&(GameField[2][2]==2)&(endd == false))
	{GameField[0][0] = 2;
	endd = true;}
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	41 c0       	rjmp	.+130    	; 0x2292 <ButtonProcessor+0x660>
	
	if((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==0)&(endd == false))
    2210:	c9 23       	and	r28, r25
    2212:	41 e0       	ldi	r20, 0x01	; 1
    2214:	c0 90 18 01 	lds	r12, 0x0118	; 0x800118 <GameField+0xc>
    2218:	d0 90 19 01 	lds	r13, 0x0119	; 0x800119 <GameField+0xd>
    221c:	cd 28       	or	r12, r13
    221e:	09 f0       	breq	.+2      	; 0x2222 <ButtonProcessor+0x5f0>
    2220:	40 e0       	ldi	r20, 0x00	; 0
    2222:	c4 23       	and	r28, r20
    2224:	8c 17       	cp	r24, r28
    2226:	68 f4       	brcc	.+26     	; 0x2242 <ButtonProcessor+0x610>
	{GameField[2][0] = 2;
    2228:	cc e0       	ldi	r28, 0x0C	; 12
    222a:	d1 e0       	ldi	r29, 0x01	; 1
    222c:	82 e0       	ldi	r24, 0x02	; 2
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	9d 87       	std	Y+13, r25	; 0x0d
    2232:	8c 87       	std	Y+12, r24	; 0x0c
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][2]==0)&(GameField[1][1]==2)&(GameField[2][0]==2)&(endd == false))
    2234:	08 84       	ldd	r0, Y+8	; 0x08
    2236:	d9 85       	ldd	r29, Y+9	; 0x09
    2238:	c0 2d       	mov	r28, r0
	endd = true;}
	
	if((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
    223a:	42 e0       	ldi	r20, 0x02	; 2
    223c:	50 e0       	ldi	r21, 0x00	; 0
	{GameField[0][0] = 2;
	endd = true;}
	
	if((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	4c c0       	rjmp	.+152    	; 0x22da <ButtonProcessor+0x6a8>
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
    2242:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <GameField+0xc>
    2246:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <GameField+0xd>
    224a:	dd 24       	eor	r13, r13
    224c:	d3 94       	inc	r13
    224e:	42 30       	cpi	r20, 0x02	; 2
    2250:	51 05       	cpc	r21, r1
    2252:	09 f0       	breq	.+2      	; 0x2256 <ButtonProcessor+0x624>
    2254:	d1 2c       	mov	r13, r1
    2256:	9d 21       	and	r25, r13
    2258:	c1 e0       	ldi	r28, 0x01	; 1
    225a:	67 2b       	or	r22, r23
    225c:	09 f0       	breq	.+2      	; 0x2260 <ButtonProcessor+0x62e>
    225e:	c0 e0       	ldi	r28, 0x00	; 0
    2260:	9c 23       	and	r25, r28
    2262:	89 17       	cp	r24, r25
    2264:	b0 f4       	brcc	.+44     	; 0x2292 <ButtonProcessor+0x660>
	{GameField[1][1] = 2;
    2266:	cc e0       	ldi	r28, 0x0C	; 12
    2268:	d1 e0       	ldi	r29, 0x01	; 1
    226a:	82 e0       	ldi	r24, 0x02	; 2
    226c:	90 e0       	ldi	r25, 0x00	; 0
    226e:	99 87       	std	Y+9, r25	; 0x09
    2270:	88 87       	std	Y+8, r24	; 0x08
	if((GameField[0][2]==0)&(GameField[1][1]==2)&(GameField[2][0]==2)&(endd == false))
	{GameField[0][2] = 2;
	endd = true;}
	
	
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
    2272:	e8 80       	ld	r14, Y
    2274:	f9 80       	ldd	r15, Y+1	; 0x01
    2276:	91 e0       	ldi	r25, 0x01	; 1
    2278:	f1 e0       	ldi	r31, 0x01	; 1
    227a:	ef 16       	cp	r14, r31
    227c:	f1 04       	cpc	r15, r1
    227e:	09 f0       	breq	.+2      	; 0x2282 <ButtonProcessor+0x650>
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <GameField+0x6>
    2286:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <GameField+0x7>
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][2]==0)&(GameField[1][1]==2)&(GameField[2][0]==2)&(endd == false))
    228a:	c2 e0       	ldi	r28, 0x02	; 2
    228c:	d0 e0       	ldi	r29, 0x00	; 0
	if((GameField[0][2]==2)&(GameField[1][1]==2)&(GameField[2][0]==0)&(endd == false))
	{GameField[2][0] = 2;
	endd = true;}
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
    228e:	81 e0       	ldi	r24, 0x01	; 1
    2290:	56 c0       	rjmp	.+172    	; 0x233e <ButtonProcessor+0x70c>
	if((GameField[0][2]==0)&(GameField[1][1]==2)&(GameField[2][0]==2)&(endd == false))
    2292:	c0 91 14 01 	lds	r28, 0x0114	; 0x800114 <GameField+0x8>
    2296:	d0 91 15 01 	lds	r29, 0x0115	; 0x800115 <GameField+0x9>
    229a:	91 e0       	ldi	r25, 0x01	; 1
    229c:	c2 30       	cpi	r28, 0x02	; 2
    229e:	d1 05       	cpc	r29, r1
    22a0:	09 f0       	breq	.+2      	; 0x22a4 <ButtonProcessor+0x672>
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	d9 22       	and	r13, r25
    22a6:	91 e0       	ldi	r25, 0x01	; 1
    22a8:	ef 28       	or	r14, r15
    22aa:	09 f0       	breq	.+2      	; 0x22ae <ButtonProcessor+0x67c>
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	9d 21       	and	r25, r13
    22b0:	89 17       	cp	r24, r25
    22b2:	98 f4       	brcc	.+38     	; 0x22da <ButtonProcessor+0x6a8>
	{GameField[0][2] = 2;
    22b4:	8c e0       	ldi	r24, 0x0C	; 12
    22b6:	91 e0       	ldi	r25, 0x01	; 1
    22b8:	42 e0       	ldi	r20, 0x02	; 2
    22ba:	50 e0       	ldi	r21, 0x00	; 0
    22bc:	fc 01       	movw	r30, r24
    22be:	55 83       	std	Z+5, r21	; 0x05
    22c0:	44 83       	std	Z+4, r20	; 0x04
	endd = true;}
	
	
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
    22c2:	e0 80       	ld	r14, Z
    22c4:	f1 80       	ldd	r15, Z+1	; 0x01
		{GameField[2][0] = 2;
		endd = true;}
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
    22c6:	44 85       	ldd	r20, Z+12	; 0x0c
    22c8:	55 85       	ldd	r21, Z+13	; 0x0d
    22ca:	bb 24       	eor	r11, r11
    22cc:	b3 94       	inc	r11
    22ce:	41 30       	cpi	r20, 0x01	; 1
    22d0:	51 05       	cpc	r21, r1
    22d2:	09 f0       	breq	.+2      	; 0x22d6 <ButtonProcessor+0x6a4>
    22d4:	b1 2c       	mov	r11, r1
	if((GameField[0][2]==2)&(GameField[1][1]==0)&(GameField[2][0]==2)&(endd == false))
	{GameField[1][1] = 2;
	endd = true;}
	if((GameField[0][2]==0)&(GameField[1][1]==2)&(GameField[2][0]==2)&(endd == false))
	{GameField[0][2] = 2;
	endd = true;}
    22d6:	81 e0       	ldi	r24, 0x01	; 1
    22d8:	50 c0       	rjmp	.+160    	; 0x237a <ButtonProcessor+0x748>
	
	
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
    22da:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <GameField>
    22de:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <GameField+0x1>
    22e2:	91 e0       	ldi	r25, 0x01	; 1
    22e4:	f1 e0       	ldi	r31, 0x01	; 1
    22e6:	ef 16       	cp	r14, r31
    22e8:	f1 04       	cpc	r15, r1
    22ea:	09 f0       	breq	.+2      	; 0x22ee <ButtonProcessor+0x6bc>
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <GameField+0x6>
    22f2:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <GameField+0x7>
    22f6:	dd 24       	eor	r13, r13
    22f8:	d3 94       	inc	r13
    22fa:	61 30       	cpi	r22, 0x01	; 1
    22fc:	71 05       	cpc	r23, r1
    22fe:	09 f0       	breq	.+2      	; 0x2302 <ButtonProcessor+0x6d0>
    2300:	d1 2c       	mov	r13, r1
    2302:	cd 2c       	mov	r12, r13
    2304:	c9 22       	and	r12, r25
    2306:	dd 24       	eor	r13, r13
    2308:	d3 94       	inc	r13
    230a:	45 2b       	or	r20, r21
    230c:	09 f0       	breq	.+2      	; 0x2310 <ButtonProcessor+0x6de>
    230e:	d1 2c       	mov	r13, r1
    2310:	dc 20       	and	r13, r12
    2312:	8d 15       	cp	r24, r13
    2314:	a0 f4       	brcc	.+40     	; 0x233e <ButtonProcessor+0x70c>
		{GameField[2][0] = 2;
    2316:	8c e0       	ldi	r24, 0x0C	; 12
    2318:	91 e0       	ldi	r25, 0x01	; 1
    231a:	42 e0       	ldi	r20, 0x02	; 2
    231c:	50 e0       	ldi	r21, 0x00	; 0
    231e:	fc 01       	movw	r30, r24
    2320:	55 87       	std	Z+13, r21	; 0x0d
    2322:	44 87       	std	Z+12, r20	; 0x0c
		endd = true;}
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
		{GameField[1][0] = 2;
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==1)&(GameField[2][0]==1)&(endd == false))
    2324:	66 81       	ldd	r22, Z+6	; 0x06
    2326:	77 81       	ldd	r23, Z+7	; 0x07
    2328:	aa 24       	eor	r10, r10
    232a:	a3 94       	inc	r10
    232c:	61 30       	cpi	r22, 0x01	; 1
    232e:	71 05       	cpc	r23, r1
    2330:	09 f0       	breq	.+2      	; 0x2334 <ButtonProcessor+0x702>
    2332:	a1 2c       	mov	r10, r1
	
	
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
		endd = true;}
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
    2334:	b1 2c       	mov	r11, r1
    2336:	42 e0       	ldi	r20, 0x02	; 2
    2338:	50 e0       	ldi	r21, 0x00	; 0
	endd = true;}
	
	
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
		endd = true;}
    233a:	81 e0       	ldi	r24, 0x01	; 1
    233c:	3f c0       	rjmp	.+126    	; 0x23bc <ButtonProcessor+0x78a>
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
    233e:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <GameField+0xc>
    2342:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <GameField+0xd>
    2346:	bb 24       	eor	r11, r11
    2348:	b3 94       	inc	r11
    234a:	41 30       	cpi	r20, 0x01	; 1
    234c:	51 05       	cpc	r21, r1
    234e:	09 f0       	breq	.+2      	; 0x2352 <ButtonProcessor+0x720>
    2350:	b1 2c       	mov	r11, r1
    2352:	9b 21       	and	r25, r11
    2354:	dd 24       	eor	r13, r13
    2356:	d3 94       	inc	r13
    2358:	67 2b       	or	r22, r23
    235a:	09 f0       	breq	.+2      	; 0x235e <ButtonProcessor+0x72c>
    235c:	d1 2c       	mov	r13, r1
    235e:	9d 21       	and	r25, r13
    2360:	89 17       	cp	r24, r25
    2362:	58 f4       	brcc	.+22     	; 0x237a <ButtonProcessor+0x748>
		{GameField[1][0] = 2;
    2364:	82 e0       	ldi	r24, 0x02	; 2
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <GameField+0x7>
    236c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <GameField+0x6>
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==1)&(GameField[2][0]==1)&(endd == false))
    2370:	a1 2c       	mov	r10, r1
    2372:	62 e0       	ldi	r22, 0x02	; 2
    2374:	70 e0       	ldi	r23, 0x00	; 0
	if((GameField[0][0]==1)&(GameField[1][0]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
		endd = true;}
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
		{GameField[1][0] = 2;
			endd = true;}
    2376:	81 e0       	ldi	r24, 0x01	; 1
    2378:	21 c0       	rjmp	.+66     	; 0x23bc <ButtonProcessor+0x78a>
	if((GameField[0][0]==0)&(GameField[1][0]==1)&(GameField[2][0]==1)&(endd == false))
    237a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <GameField+0x6>
    237e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <GameField+0x7>
    2382:	aa 24       	eor	r10, r10
    2384:	a3 94       	inc	r10
    2386:	61 30       	cpi	r22, 0x01	; 1
    2388:	71 05       	cpc	r23, r1
    238a:	09 f0       	breq	.+2      	; 0x238e <ButtonProcessor+0x75c>
    238c:	a1 2c       	mov	r10, r1
    238e:	db 2c       	mov	r13, r11
    2390:	da 20       	and	r13, r10
    2392:	91 e0       	ldi	r25, 0x01	; 1
    2394:	ef 28       	or	r14, r15
    2396:	09 f0       	breq	.+2      	; 0x239a <ButtonProcessor+0x768>
    2398:	90 e0       	ldi	r25, 0x00	; 0
    239a:	9d 21       	and	r25, r13
    239c:	89 17       	cp	r24, r25
    239e:	70 f4       	brcc	.+28     	; 0x23bc <ButtonProcessor+0x78a>
		{GameField[0][0] = 2;
    23a0:	82 e0       	ldi	r24, 0x02	; 2
    23a2:	90 e0       	ldi	r25, 0x00	; 0
    23a4:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <GameField+0x1>
    23a8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <GameField>
			endd = true;}
			
	if((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==0)&(endd == false))
    23ac:	ff 24       	eor	r15, r15
    23ae:	f3 94       	inc	r15
    23b0:	21 30       	cpi	r18, 0x01	; 1
    23b2:	31 05       	cpc	r19, r1
    23b4:	09 f0       	breq	.+2      	; 0x23b8 <ButtonProcessor+0x786>
    23b6:	f1 2c       	mov	r15, r1
	if((GameField[0][0]==1)&(GameField[1][0]==0)&(GameField[2][0]==1)&(endd == false))
		{GameField[1][0] = 2;
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][0]==1)&(GameField[2][0]==1)&(endd == false))
		{GameField[0][0] = 2;
			endd = true;}
    23b8:	81 e0       	ldi	r24, 0x01	; 1
    23ba:	21 c0       	rjmp	.+66     	; 0x23fe <ButtonProcessor+0x7cc>
			
	if((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==0)&(endd == false))
    23bc:	ff 24       	eor	r15, r15
    23be:	f3 94       	inc	r15
    23c0:	21 30       	cpi	r18, 0x01	; 1
    23c2:	31 05       	cpc	r19, r1
    23c4:	09 f0       	breq	.+2      	; 0x23c8 <ButtonProcessor+0x796>
    23c6:	f1 2c       	mov	r15, r1
    23c8:	91 e0       	ldi	r25, 0x01	; 1
    23ca:	c1 30       	cpi	r28, 0x01	; 1
    23cc:	d1 05       	cpc	r29, r1
    23ce:	09 f0       	breq	.+2      	; 0x23d2 <ButtonProcessor+0x7a0>
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	9f 21       	and	r25, r15
    23d4:	ee 24       	eor	r14, r14
    23d6:	e3 94       	inc	r14
    23d8:	89 28       	or	r8, r9
    23da:	09 f0       	breq	.+2      	; 0x23de <ButtonProcessor+0x7ac>
    23dc:	e1 2c       	mov	r14, r1
    23de:	9e 21       	and	r25, r14
    23e0:	89 17       	cp	r24, r25
    23e2:	68 f4       	brcc	.+26     	; 0x23fe <ButtonProcessor+0x7cc>
		{GameField[2][1] = 2;
    23e4:	82 e0       	ldi	r24, 0x02	; 2
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <GameField+0xf>
    23ec:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <GameField+0xe>
			endd = true;}
	if((GameField[0][1]==1)&(GameField[1][1]==0)&(GameField[2][1]==1)&(endd == false))
    23f0:	90 e0       	ldi	r25, 0x00	; 0
    23f2:	68 94       	set
    23f4:	44 24       	eor	r4, r4
    23f6:	41 f8       	bld	r4, 1
    23f8:	51 2c       	mov	r5, r1
		{GameField[0][0] = 2;
			endd = true;}
			
	if((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==0)&(endd == false))
		{GameField[2][1] = 2;
			endd = true;}
    23fa:	81 e0       	ldi	r24, 0x01	; 1
    23fc:	1e c0       	rjmp	.+60     	; 0x243a <ButtonProcessor+0x808>
	if((GameField[0][1]==1)&(GameField[1][1]==0)&(GameField[2][1]==1)&(endd == false))
    23fe:	40 90 1a 01 	lds	r4, 0x011A	; 0x80011a <GameField+0xe>
    2402:	50 90 1b 01 	lds	r5, 0x011B	; 0x80011b <GameField+0xf>
    2406:	91 e0       	ldi	r25, 0x01	; 1
    2408:	f1 e0       	ldi	r31, 0x01	; 1
    240a:	4f 16       	cp	r4, r31
    240c:	51 04       	cpc	r5, r1
    240e:	09 f0       	breq	.+2      	; 0x2412 <ButtonProcessor+0x7e0>
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	f9 22       	and	r15, r25
    2414:	ee 24       	eor	r14, r14
    2416:	e3 94       	inc	r14
    2418:	cd 2b       	or	r28, r29
    241a:	09 f0       	breq	.+2      	; 0x241e <ButtonProcessor+0x7ec>
    241c:	e1 2c       	mov	r14, r1
    241e:	fe 20       	and	r15, r14
    2420:	8f 15       	cp	r24, r15
    2422:	58 f4       	brcc	.+22     	; 0x243a <ButtonProcessor+0x808>
		{GameField[1][1] = 2;
    2424:	22 e0       	ldi	r18, 0x02	; 2
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <GameField+0x9>
    242c:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <GameField+0x8>
			endd = true;}
	if((GameField[0][1]==0)&(GameField[1][1]==1)&(GameField[2][1]==1)&(endd == false))
    2430:	81 2c       	mov	r8, r1
    2432:	c2 e0       	ldi	r28, 0x02	; 2
    2434:	d0 e0       	ldi	r29, 0x00	; 0
	if((GameField[0][1]==1)&(GameField[1][1]==1)&(GameField[2][1]==0)&(endd == false))
		{GameField[2][1] = 2;
			endd = true;}
	if((GameField[0][1]==1)&(GameField[1][1]==0)&(GameField[2][1]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
    2436:	81 e0       	ldi	r24, 0x01	; 1
    2438:	28 c0       	rjmp	.+80     	; 0x248a <ButtonProcessor+0x858>
	if((GameField[0][1]==0)&(GameField[1][1]==1)&(GameField[2][1]==1)&(endd == false))
    243a:	c0 91 14 01 	lds	r28, 0x0114	; 0x800114 <GameField+0x8>
    243e:	d0 91 15 01 	lds	r29, 0x0115	; 0x800115 <GameField+0x9>
    2442:	88 24       	eor	r8, r8
    2444:	83 94       	inc	r8
    2446:	c1 30       	cpi	r28, 0x01	; 1
    2448:	d1 05       	cpc	r29, r1
    244a:	09 f0       	breq	.+2      	; 0x244e <ButtonProcessor+0x81c>
    244c:	81 2c       	mov	r8, r1
    244e:	e9 2e       	mov	r14, r25
    2450:	e8 20       	and	r14, r8
    2452:	ff 24       	eor	r15, r15
    2454:	f3 94       	inc	r15
    2456:	23 2b       	or	r18, r19
    2458:	09 f0       	breq	.+2      	; 0x245c <ButtonProcessor+0x82a>
    245a:	f1 2c       	mov	r15, r1
    245c:	fe 20       	and	r15, r14
    245e:	8f 15       	cp	r24, r15
    2460:	a0 f4       	brcc	.+40     	; 0x248a <ButtonProcessor+0x858>
		{GameField[0][1] = 2;
    2462:	ac e0       	ldi	r26, 0x0C	; 12
    2464:	b1 e0       	ldi	r27, 0x01	; 1
    2466:	22 e0       	ldi	r18, 0x02	; 2
    2468:	30 e0       	ldi	r19, 0x00	; 0
    246a:	13 96       	adiw	r26, 0x03	; 3
    246c:	3c 93       	st	X, r19
    246e:	2e 93       	st	-X, r18
    2470:	12 97       	sbiw	r26, 0x02	; 2
			endd = true;}
	
	if((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==0)&(endd == false))
    2472:	14 96       	adiw	r26, 0x04	; 4
    2474:	2d 91       	ld	r18, X+
    2476:	3c 91       	ld	r19, X
    2478:	15 97       	sbiw	r26, 0x05	; 5
    247a:	ff 24       	eor	r15, r15
    247c:	f3 94       	inc	r15
    247e:	21 30       	cpi	r18, 0x01	; 1
    2480:	31 05       	cpc	r19, r1
    2482:	09 f0       	breq	.+2      	; 0x2486 <ButtonProcessor+0x854>
    2484:	f1 2c       	mov	r15, r1
	if((GameField[0][1]==1)&(GameField[1][1]==0)&(GameField[2][1]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
	if((GameField[0][1]==0)&(GameField[1][1]==1)&(GameField[2][1]==1)&(endd == false))
		{GameField[0][1] = 2;
			endd = true;}
    2486:	81 e0       	ldi	r24, 0x01	; 1
    2488:	22 c0       	rjmp	.+68     	; 0x24ce <ButtonProcessor+0x89c>
	
	if((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==0)&(endd == false))
    248a:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <GameField+0x4>
    248e:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <GameField+0x5>
    2492:	ff 24       	eor	r15, r15
    2494:	f3 94       	inc	r15
    2496:	21 30       	cpi	r18, 0x01	; 1
    2498:	31 05       	cpc	r19, r1
    249a:	09 f0       	breq	.+2      	; 0x249e <ButtonProcessor+0x86c>
    249c:	f1 2c       	mov	r15, r1
    249e:	dd 24       	eor	r13, r13
    24a0:	d3 94       	inc	r13
    24a2:	01 30       	cpi	r16, 0x01	; 1
    24a4:	11 05       	cpc	r17, r1
    24a6:	09 f0       	breq	.+2      	; 0x24aa <ButtonProcessor+0x878>
    24a8:	d1 2c       	mov	r13, r1
    24aa:	ee 24       	eor	r14, r14
    24ac:	e3 94       	inc	r14
    24ae:	ab 2b       	or	r26, r27
    24b0:	09 f0       	breq	.+2      	; 0x24b4 <ButtonProcessor+0x882>
    24b2:	e1 2c       	mov	r14, r1
    24b4:	ed 20       	and	r14, r13
    24b6:	ef 20       	and	r14, r15
    24b8:	8e 15       	cp	r24, r14
    24ba:	48 f4       	brcc	.+18     	; 0x24ce <ButtonProcessor+0x89c>
		{GameField[2][2] = 2;
    24bc:	a2 e0       	ldi	r26, 0x02	; 2
    24be:	b0 e0       	ldi	r27, 0x00	; 0
    24c0:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <GameField+0x11>
    24c4:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <GameField+0x10>
			endd = true;}
	if((GameField[0][2]==1)&(GameField[1][2]==0)&(GameField[2][2]==1)&(endd == false))
    24c8:	e1 2c       	mov	r14, r1
		{GameField[0][1] = 2;
			endd = true;}
	
	if((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
    24ca:	81 e0       	ldi	r24, 0x01	; 1
    24cc:	1d c0       	rjmp	.+58     	; 0x2508 <ButtonProcessor+0x8d6>
	if((GameField[0][2]==1)&(GameField[1][2]==0)&(GameField[2][2]==1)&(endd == false))
    24ce:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <GameField+0x10>
    24d2:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <GameField+0x11>
    24d6:	ee 24       	eor	r14, r14
    24d8:	e3 94       	inc	r14
    24da:	a1 30       	cpi	r26, 0x01	; 1
    24dc:	b1 05       	cpc	r27, r1
    24de:	09 f0       	breq	.+2      	; 0x24e2 <ButtonProcessor+0x8b0>
    24e0:	e1 2c       	mov	r14, r1
    24e2:	fe 20       	and	r15, r14
    24e4:	dd 24       	eor	r13, r13
    24e6:	d3 94       	inc	r13
    24e8:	01 2b       	or	r16, r17
    24ea:	09 f0       	breq	.+2      	; 0x24ee <ButtonProcessor+0x8bc>
    24ec:	d1 2c       	mov	r13, r1
    24ee:	fd 20       	and	r15, r13
    24f0:	8f 15       	cp	r24, r15
    24f2:	50 f4       	brcc	.+20     	; 0x2508 <ButtonProcessor+0x8d6>
		{GameField[1][2] = 2;
    24f4:	22 e0       	ldi	r18, 0x02	; 2
    24f6:	30 e0       	ldi	r19, 0x00	; 0
    24f8:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <GameField+0xb>
    24fc:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <GameField+0xa>
			endd = true;}
	if((GameField[0][2]==0)&(GameField[1][2]==1)&(GameField[2][2]==1)&(endd == false))
    2500:	02 e0       	ldi	r16, 0x02	; 2
    2502:	10 e0       	ldi	r17, 0x00	; 0
	if((GameField[0][2]==1)&(GameField[1][2]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[0][2]==1)&(GameField[1][2]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[1][2] = 2;
			endd = true;}
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	2a c0       	rjmp	.+84     	; 0x255c <ButtonProcessor+0x92a>
	if((GameField[0][2]==0)&(GameField[1][2]==1)&(GameField[2][2]==1)&(endd == false))
    2508:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <GameField+0xa>
    250c:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <GameField+0xb>
    2510:	ff 24       	eor	r15, r15
    2512:	f3 94       	inc	r15
    2514:	01 30       	cpi	r16, 0x01	; 1
    2516:	11 05       	cpc	r17, r1
    2518:	09 f0       	breq	.+2      	; 0x251c <ButtonProcessor+0x8ea>
    251a:	f1 2c       	mov	r15, r1
    251c:	fe 20       	and	r15, r14
    251e:	ee 24       	eor	r14, r14
    2520:	e3 94       	inc	r14
    2522:	23 2b       	or	r18, r19
    2524:	09 f0       	breq	.+2      	; 0x2528 <ButtonProcessor+0x8f6>
    2526:	e1 2c       	mov	r14, r1
    2528:	fe 20       	and	r15, r14
    252a:	8f 15       	cp	r24, r15
    252c:	b8 f4       	brcc	.+46     	; 0x255c <ButtonProcessor+0x92a>
		{GameField[0][2] = 2;
    252e:	2c e0       	ldi	r18, 0x0C	; 12
    2530:	31 e0       	ldi	r19, 0x01	; 1
    2532:	68 94       	set
    2534:	ee 24       	eor	r14, r14
    2536:	e1 f8       	bld	r14, 1
    2538:	f1 2c       	mov	r15, r1
    253a:	f9 01       	movw	r30, r18
    253c:	f5 82       	std	Z+5, r15	; 0x05
    253e:	e4 82       	std	Z+4, r14	; 0x04
			endd = true;}
	
	if((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==0)&(endd == false))
    2540:	20 81       	ld	r18, Z
    2542:	31 81       	ldd	r19, Z+1	; 0x01
    2544:	77 24       	eor	r7, r7
    2546:	73 94       	inc	r7
    2548:	21 30       	cpi	r18, 0x01	; 1
    254a:	31 05       	cpc	r19, r1
    254c:	09 f0       	breq	.+2      	; 0x2550 <ButtonProcessor+0x91e>
    254e:	71 2c       	mov	r7, r1
    2550:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <GameField+0x2>
    2554:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <GameField+0x3>
	if((GameField[0][2]==1)&(GameField[1][2]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[1][2] = 2;
			endd = true;}
	if((GameField[0][2]==0)&(GameField[1][2]==1)&(GameField[2][2]==1)&(endd == false))
		{GameField[0][2] = 2;
			endd = true;}
    2558:	81 e0       	ldi	r24, 0x01	; 1
    255a:	33 c0       	rjmp	.+102    	; 0x25c2 <ButtonProcessor+0x990>
	
	if((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==0)&(endd == false))
    255c:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <GameField>
    2560:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <GameField+0x1>
    2564:	77 24       	eor	r7, r7
    2566:	73 94       	inc	r7
    2568:	21 30       	cpi	r18, 0x01	; 1
    256a:	31 05       	cpc	r19, r1
    256c:	09 f0       	breq	.+2      	; 0x2570 <ButtonProcessor+0x93e>
    256e:	71 2c       	mov	r7, r1
    2570:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <GameField+0x2>
    2574:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <GameField+0x3>
    2578:	dd 24       	eor	r13, r13
    257a:	d3 94       	inc	r13
    257c:	f1 e0       	ldi	r31, 0x01	; 1
    257e:	ef 16       	cp	r14, r31
    2580:	f1 04       	cpc	r15, r1
    2582:	09 f0       	breq	.+2      	; 0x2586 <ButtonProcessor+0x954>
    2584:	d1 2c       	mov	r13, r1
    2586:	9d 2c       	mov	r9, r13
    2588:	97 20       	and	r9, r7
    258a:	66 24       	eor	r6, r6
    258c:	63 94       	inc	r6
    258e:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <GameField+0x4>
    2592:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <GameField+0x5>
    2596:	cd 28       	or	r12, r13
    2598:	09 f0       	breq	.+2      	; 0x259c <ButtonProcessor+0x96a>
    259a:	61 2c       	mov	r6, r1
    259c:	d9 2c       	mov	r13, r9
    259e:	d6 20       	and	r13, r6
    25a0:	8d 15       	cp	r24, r13
    25a2:	78 f4       	brcc	.+30     	; 0x25c2 <ButtonProcessor+0x990>
		{GameField[0][2] = 2;
    25a4:	68 94       	set
    25a6:	ee 24       	eor	r14, r14
    25a8:	e1 f8       	bld	r14, 1
    25aa:	f1 2c       	mov	r15, r1
    25ac:	f0 92 11 01 	sts	0x0111, r15	; 0x800111 <GameField+0x5>
    25b0:	e0 92 10 01 	sts	0x0110, r14	; 0x800110 <GameField+0x4>
			endd = true;}
	if((GameField[0][0]==1)&(GameField[0][1]==0)&(GameField[0][2]==1)&(endd == false))
    25b4:	91 2c       	mov	r9, r1
    25b6:	68 94       	set
    25b8:	cc 24       	eor	r12, r12
    25ba:	c1 f8       	bld	r12, 1
    25bc:	d1 2c       	mov	r13, r1
		{GameField[0][2] = 2;
			endd = true;}
	
	if((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==0)&(endd == false))
		{GameField[0][2] = 2;
			endd = true;}
    25be:	81 e0       	ldi	r24, 0x01	; 1
    25c0:	20 c0       	rjmp	.+64     	; 0x2602 <ButtonProcessor+0x9d0>
	if((GameField[0][0]==1)&(GameField[0][1]==0)&(GameField[0][2]==1)&(endd == false))
    25c2:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <GameField+0x4>
    25c6:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <GameField+0x5>
    25ca:	99 24       	eor	r9, r9
    25cc:	93 94       	inc	r9
    25ce:	e1 e0       	ldi	r30, 0x01	; 1
    25d0:	ce 16       	cp	r12, r30
    25d2:	d1 04       	cpc	r13, r1
    25d4:	09 f0       	breq	.+2      	; 0x25d8 <ButtonProcessor+0x9a6>
    25d6:	91 2c       	mov	r9, r1
    25d8:	79 20       	and	r7, r9
    25da:	66 24       	eor	r6, r6
    25dc:	63 94       	inc	r6
    25de:	ef 28       	or	r14, r15
    25e0:	09 f0       	breq	.+2      	; 0x25e4 <ButtonProcessor+0x9b2>
    25e2:	61 2c       	mov	r6, r1
    25e4:	76 20       	and	r7, r6
    25e6:	87 15       	cp	r24, r7
    25e8:	60 f4       	brcc	.+24     	; 0x2602 <ButtonProcessor+0x9d0>
		{GameField[0][1] = 2;
    25ea:	22 e0       	ldi	r18, 0x02	; 2
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <GameField+0x3>
    25f2:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <GameField+0x2>
			endd = true;}
	if((GameField[0][0]==0)&(GameField[0][1]==1)&(GameField[0][2]==1)&(endd == false))
    25f6:	68 94       	set
    25f8:	ee 24       	eor	r14, r14
    25fa:	e1 f8       	bld	r14, 1
    25fc:	f1 2c       	mov	r15, r1
	if((GameField[0][0]==1)&(GameField[0][1]==1)&(GameField[0][2]==0)&(endd == false))
		{GameField[0][2] = 2;
			endd = true;}
	if((GameField[0][0]==1)&(GameField[0][1]==0)&(GameField[0][2]==1)&(endd == false))
		{GameField[0][1] = 2;
			endd = true;}
    25fe:	81 e0       	ldi	r24, 0x01	; 1
    2600:	1c c0       	rjmp	.+56     	; 0x263a <ButtonProcessor+0xa08>
	if((GameField[0][0]==0)&(GameField[0][1]==1)&(GameField[0][2]==1)&(endd == false))
    2602:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <GameField+0x2>
    2606:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <GameField+0x3>
    260a:	77 24       	eor	r7, r7
    260c:	73 94       	inc	r7
    260e:	f1 e0       	ldi	r31, 0x01	; 1
    2610:	ef 16       	cp	r14, r31
    2612:	f1 04       	cpc	r15, r1
    2614:	09 f0       	breq	.+2      	; 0x2618 <ButtonProcessor+0x9e6>
    2616:	71 2c       	mov	r7, r1
    2618:	79 20       	and	r7, r9
    261a:	66 24       	eor	r6, r6
    261c:	63 94       	inc	r6
    261e:	23 2b       	or	r18, r19
    2620:	09 f0       	breq	.+2      	; 0x2624 <ButtonProcessor+0x9f2>
    2622:	61 2c       	mov	r6, r1
    2624:	76 20       	and	r7, r6
    2626:	87 15       	cp	r24, r7
    2628:	40 f4       	brcc	.+16     	; 0x263a <ButtonProcessor+0xa08>
		{GameField[0][0] = 2;
    262a:	22 e0       	ldi	r18, 0x02	; 2
    262c:	30 e0       	ldi	r19, 0x00	; 0
    262e:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <GameField+0x1>
    2632:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <GameField>
			endd = true;}
    2636:	81 e0       	ldi	r24, 0x01	; 1
    2638:	11 c0       	rjmp	.+34     	; 0x265c <ButtonProcessor+0xa2a>
	
	if((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==0)&(endd == false))
    263a:	8a 20       	and	r8, r10
    263c:	21 e0       	ldi	r18, 0x01	; 1
    263e:	01 2b       	or	r16, r17
    2640:	09 f0       	breq	.+2      	; 0x2644 <ButtonProcessor+0xa12>
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	82 22       	and	r8, r18
    2646:	88 15       	cp	r24, r8
    2648:	48 f4       	brcc	.+18     	; 0x265c <ButtonProcessor+0xa2a>
		{GameField[1][2] = 2;
    264a:	22 e0       	ldi	r18, 0x02	; 2
    264c:	30 e0       	ldi	r19, 0x00	; 0
    264e:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <GameField+0xb>
    2652:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <GameField+0xa>
			endd = true;}
	if((GameField[1][0]==1)&(GameField[1][1]==0)&(GameField[1][2]==1)&(endd == false))
    2656:	10 e0       	ldi	r17, 0x00	; 0
		{GameField[0][0] = 2;
			endd = true;}
	
	if((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==0)&(endd == false))
		{GameField[1][2] = 2;
			endd = true;}
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	1c c0       	rjmp	.+56     	; 0x2694 <ButtonProcessor+0xa62>
	if((GameField[1][0]==1)&(GameField[1][1]==0)&(GameField[1][2]==1)&(endd == false))
    265c:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <GameField+0xa>
    2660:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <GameField+0xb>
    2664:	11 e0       	ldi	r17, 0x01	; 1
    2666:	21 30       	cpi	r18, 0x01	; 1
    2668:	31 05       	cpc	r19, r1
    266a:	09 f0       	breq	.+2      	; 0x266e <ButtonProcessor+0xa3c>
    266c:	10 e0       	ldi	r17, 0x00	; 0
    266e:	a1 22       	and	r10, r17
    2670:	01 e0       	ldi	r16, 0x01	; 1
    2672:	cd 2b       	or	r28, r29
    2674:	09 f0       	breq	.+2      	; 0x2678 <ButtonProcessor+0xa46>
    2676:	00 e0       	ldi	r16, 0x00	; 0
    2678:	a0 22       	and	r10, r16
    267a:	8a 15       	cp	r24, r10
    267c:	58 f4       	brcc	.+22     	; 0x2694 <ButtonProcessor+0xa62>
		{GameField[1][1] = 2;
    267e:	62 e0       	ldi	r22, 0x02	; 2
    2680:	70 e0       	ldi	r23, 0x00	; 0
    2682:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <GameField+0x9>
    2686:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <GameField+0x8>
			endd = true;}
	if((GameField[1][0]==0)&(GameField[1][1]==1)&(GameField[1][2]==1)&(endd == false))
    268a:	00 e0       	ldi	r16, 0x00	; 0
    268c:	c2 e0       	ldi	r28, 0x02	; 2
    268e:	d0 e0       	ldi	r29, 0x00	; 0
	if((GameField[1][0]==1)&(GameField[1][1]==1)&(GameField[1][2]==0)&(endd == false))
		{GameField[1][2] = 2;
			endd = true;}
	if((GameField[1][0]==1)&(GameField[1][1]==0)&(GameField[1][2]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
    2690:	81 e0       	ldi	r24, 0x01	; 1
    2692:	1a c0       	rjmp	.+52     	; 0x26c8 <ButtonProcessor+0xa96>
	if((GameField[1][0]==0)&(GameField[1][1]==1)&(GameField[1][2]==1)&(endd == false))
    2694:	c0 91 14 01 	lds	r28, 0x0114	; 0x800114 <GameField+0x8>
    2698:	d0 91 15 01 	lds	r29, 0x0115	; 0x800115 <GameField+0x9>
    269c:	01 e0       	ldi	r16, 0x01	; 1
    269e:	c1 30       	cpi	r28, 0x01	; 1
    26a0:	d1 05       	cpc	r29, r1
    26a2:	09 f0       	breq	.+2      	; 0x26a6 <ButtonProcessor+0xa74>
    26a4:	00 e0       	ldi	r16, 0x00	; 0
    26a6:	10 23       	and	r17, r16
    26a8:	aa 24       	eor	r10, r10
    26aa:	a3 94       	inc	r10
    26ac:	67 2b       	or	r22, r23
    26ae:	09 f0       	breq	.+2      	; 0x26b2 <ButtonProcessor+0xa80>
    26b0:	a1 2c       	mov	r10, r1
    26b2:	1a 21       	and	r17, r10
    26b4:	81 17       	cp	r24, r17
    26b6:	40 f4       	brcc	.+16     	; 0x26c8 <ButtonProcessor+0xa96>
		{GameField[1][0] = 2;
    26b8:	82 e0       	ldi	r24, 0x02	; 2
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <GameField+0x7>
    26c0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <GameField+0x6>
			endd = true;}
    26c4:	81 e0       	ldi	r24, 0x01	; 1
    26c6:	13 c0       	rjmp	.+38     	; 0x26ee <ButtonProcessor+0xabc>
			
	if((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==0)&(endd == false))
    26c8:	9b 21       	and	r25, r11
    26ca:	61 e0       	ldi	r22, 0x01	; 1
    26cc:	ab 2b       	or	r26, r27
    26ce:	09 f0       	breq	.+2      	; 0x26d2 <ButtonProcessor+0xaa0>
    26d0:	60 e0       	ldi	r22, 0x00	; 0
    26d2:	96 23       	and	r25, r22
    26d4:	89 17       	cp	r24, r25
    26d6:	58 f4       	brcc	.+22     	; 0x26ee <ButtonProcessor+0xabc>
		{GameField[2][2] = 2;
    26d8:	82 e0       	ldi	r24, 0x02	; 2
    26da:	90 e0       	ldi	r25, 0x00	; 0
    26dc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <GameField+0x11>
    26e0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <GameField+0x10>
			endd = true;}
	if((GameField[2][0]==1)&(GameField[2][1]==0)&(GameField[2][2]==1)&(endd == false))
    26e4:	a0 e0       	ldi	r26, 0x00	; 0
    26e6:	62 e0       	ldi	r22, 0x02	; 2
    26e8:	70 e0       	ldi	r23, 0x00	; 0
		{GameField[1][0] = 2;
			endd = true;}
			
	if((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
    26ea:	81 e0       	ldi	r24, 0x01	; 1
    26ec:	22 c0       	rjmp	.+68     	; 0x2732 <ButtonProcessor+0xb00>
	if((GameField[2][0]==1)&(GameField[2][1]==0)&(GameField[2][2]==1)&(endd == false))
    26ee:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <GameField+0x10>
    26f2:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <GameField+0x11>
    26f6:	a1 e0       	ldi	r26, 0x01	; 1
    26f8:	61 30       	cpi	r22, 0x01	; 1
    26fa:	71 05       	cpc	r23, r1
    26fc:	09 f0       	breq	.+2      	; 0x2700 <ButtonProcessor+0xace>
    26fe:	a0 e0       	ldi	r26, 0x00	; 0
    2700:	ba 22       	and	r11, r26
    2702:	91 e0       	ldi	r25, 0x01	; 1
    2704:	45 28       	or	r4, r5
    2706:	09 f0       	breq	.+2      	; 0x270a <ButtonProcessor+0xad8>
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	b9 22       	and	r11, r25
    270c:	8b 15       	cp	r24, r11
    270e:	88 f4       	brcc	.+34     	; 0x2732 <ButtonProcessor+0xb00>
		{GameField[2][1] = 2;
    2710:	ec e0       	ldi	r30, 0x0C	; 12
    2712:	f1 e0       	ldi	r31, 0x01	; 1
    2714:	82 e0       	ldi	r24, 0x02	; 2
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	97 87       	std	Z+15, r25	; 0x0f
    271a:	86 87       	std	Z+14, r24	; 0x0e
			endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==1)&(GameField[2][2]==1)&(endd == false))
		{GameField[2][0] = 2;
			endd = true;}
			
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
    271c:	40 81       	ld	r20, Z
    271e:	51 81       	ldd	r21, Z+1	; 0x01
    2720:	91 e0       	ldi	r25, 0x01	; 1
    2722:	41 30       	cpi	r20, 0x01	; 1
    2724:	51 05       	cpc	r21, r1
    2726:	09 f0       	breq	.+2      	; 0x272a <ButtonProcessor+0xaf8>
    2728:	90 e0       	ldi	r25, 0x00	; 0
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[2][0]==1)&(GameField[2][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[2][1] = 2;
			endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==1)&(GameField[2][2]==1)&(endd == false))
    272a:	e2 e0       	ldi	r30, 0x02	; 2
    272c:	f0 e0       	ldi	r31, 0x00	; 0
	if((GameField[2][0]==1)&(GameField[2][1]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[2][0]==1)&(GameField[2][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[2][1] = 2;
			endd = true;}
    272e:	81 e0       	ldi	r24, 0x01	; 1
    2730:	4d c0       	rjmp	.+154    	; 0x27cc <ButtonProcessor+0xb9a>
	if((GameField[2][0]==0)&(GameField[2][1]==1)&(GameField[2][2]==1)&(endd == false))
    2732:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <GameField+0xe>
    2736:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <GameField+0xf>
    273a:	91 e0       	ldi	r25, 0x01	; 1
    273c:	e1 30       	cpi	r30, 0x01	; 1
    273e:	f1 05       	cpc	r31, r1
    2740:	09 f0       	breq	.+2      	; 0x2744 <ButtonProcessor+0xb12>
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	9a 23       	and	r25, r26
    2746:	a1 e0       	ldi	r26, 0x01	; 1
    2748:	45 2b       	or	r20, r21
    274a:	09 f0       	breq	.+2      	; 0x274e <ButtonProcessor+0xb1c>
    274c:	a0 e0       	ldi	r26, 0x00	; 0
    274e:	9a 23       	and	r25, r26
    2750:	89 17       	cp	r24, r25
    2752:	b0 f4       	brcc	.+44     	; 0x2780 <ButtonProcessor+0xb4e>
		{GameField[2][0] = 2;
    2754:	ac e0       	ldi	r26, 0x0C	; 12
    2756:	b1 e0       	ldi	r27, 0x01	; 1
    2758:	82 e0       	ldi	r24, 0x02	; 2
    275a:	90 e0       	ldi	r25, 0x00	; 0
    275c:	1d 96       	adiw	r26, 0x0d	; 13
    275e:	9c 93       	st	X, r25
    2760:	8e 93       	st	-X, r24
    2762:	1c 97       	sbiw	r26, 0x0c	; 12
			endd = true;}
			
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
    2764:	4d 91       	ld	r20, X+
    2766:	5c 91       	ld	r21, X
    2768:	11 97       	sbiw	r26, 0x01	; 1
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
    276a:	50 96       	adiw	r26, 0x10	; 16
    276c:	6d 91       	ld	r22, X+
    276e:	7c 91       	ld	r23, X
    2770:	51 97       	sbiw	r26, 0x11	; 17
    2772:	11 e0       	ldi	r17, 0x01	; 1
    2774:	61 30       	cpi	r22, 0x01	; 1
    2776:	71 05       	cpc	r23, r1
    2778:	09 f0       	breq	.+2      	; 0x277c <ButtonProcessor+0xb4a>
    277a:	10 e0       	ldi	r17, 0x00	; 0
	if((GameField[2][0]==1)&(GameField[2][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[2][1] = 2;
			endd = true;}
	if((GameField[2][0]==0)&(GameField[2][1]==1)&(GameField[2][2]==1)&(endd == false))
		{GameField[2][0] = 2;
			endd = true;}
    277c:	81 e0       	ldi	r24, 0x01	; 1
    277e:	41 c0       	rjmp	.+130    	; 0x2802 <ButtonProcessor+0xbd0>
			
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
    2780:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <GameField>
    2784:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <GameField+0x1>
    2788:	91 e0       	ldi	r25, 0x01	; 1
    278a:	41 30       	cpi	r20, 0x01	; 1
    278c:	51 05       	cpc	r21, r1
    278e:	09 f0       	breq	.+2      	; 0x2792 <ButtonProcessor+0xb60>
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	09 23       	and	r16, r25
    2794:	a1 e0       	ldi	r26, 0x01	; 1
    2796:	67 2b       	or	r22, r23
    2798:	09 f0       	breq	.+2      	; 0x279c <ButtonProcessor+0xb6a>
    279a:	a0 e0       	ldi	r26, 0x00	; 0
    279c:	0a 23       	and	r16, r26
    279e:	80 17       	cp	r24, r16
    27a0:	a8 f4       	brcc	.+42     	; 0x27cc <ButtonProcessor+0xb9a>
		{GameField[2][2] = 2;
    27a2:	ac e0       	ldi	r26, 0x0C	; 12
    27a4:	b1 e0       	ldi	r27, 0x01	; 1
    27a6:	82 e0       	ldi	r24, 0x02	; 2
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	51 96       	adiw	r26, 0x11	; 17
    27ac:	9c 93       	st	X, r25
    27ae:	8e 93       	st	-X, r24
    27b0:	50 97       	sbiw	r26, 0x10	; 16
			endd = true;}
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==1)&(GameField[2][2]==1)&(endd == false))
    27b2:	18 96       	adiw	r26, 0x08	; 8
    27b4:	0d 90       	ld	r0, X+
    27b6:	bc 91       	ld	r27, X
    27b8:	a0 2d       	mov	r26, r0
    27ba:	91 e0       	ldi	r25, 0x01	; 1
    27bc:	a1 30       	cpi	r26, 0x01	; 1
    27be:	b1 05       	cpc	r27, r1
    27c0:	09 f0       	breq	.+2      	; 0x27c4 <ButtonProcessor+0xb92>
    27c2:	90 e0       	ldi	r25, 0x00	; 0
			endd = true;}
			
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
    27c4:	62 e0       	ldi	r22, 0x02	; 2
    27c6:	70 e0       	ldi	r23, 0x00	; 0
		{GameField[2][0] = 2;
			endd = true;}
			
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
    27c8:	81 e0       	ldi	r24, 0x01	; 1
    27ca:	3e c0       	rjmp	.+124    	; 0x2848 <ButtonProcessor+0xc16>
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
    27cc:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <GameField+0x10>
    27d0:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <GameField+0x11>
    27d4:	11 e0       	ldi	r17, 0x01	; 1
    27d6:	61 30       	cpi	r22, 0x01	; 1
    27d8:	71 05       	cpc	r23, r1
    27da:	09 f0       	breq	.+2      	; 0x27de <ButtonProcessor+0xbac>
    27dc:	10 e0       	ldi	r17, 0x00	; 0
    27de:	91 23       	and	r25, r17
    27e0:	a1 e0       	ldi	r26, 0x01	; 1
    27e2:	cd 2b       	or	r28, r29
    27e4:	09 f0       	breq	.+2      	; 0x27e8 <ButtonProcessor+0xbb6>
    27e6:	a0 e0       	ldi	r26, 0x00	; 0
    27e8:	9a 23       	and	r25, r26
    27ea:	89 17       	cp	r24, r25
    27ec:	50 f4       	brcc	.+20     	; 0x2802 <ButtonProcessor+0xbd0>
		{GameField[1][1] = 2;
    27ee:	82 e0       	ldi	r24, 0x02	; 2
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <GameField+0x9>
    27f6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <GameField+0x8>
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==1)&(GameField[2][2]==1)&(endd == false))
    27fa:	a2 e0       	ldi	r26, 0x02	; 2
    27fc:	b0 e0       	ldi	r27, 0x00	; 0
	if((GameField[0][0]==1)&(GameField[1][1]==1)&(GameField[2][2]==0)&(endd == false))
		{GameField[2][2] = 2;
			endd = true;}
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
    27fe:	81 e0       	ldi	r24, 0x01	; 1
    2800:	3f c0       	rjmp	.+126    	; 0x2880 <ButtonProcessor+0xc4e>
	if((GameField[0][0]==0)&(GameField[1][1]==1)&(GameField[2][2]==1)&(endd == false))
    2802:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <GameField+0x8>
    2806:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <GameField+0x9>
    280a:	91 e0       	ldi	r25, 0x01	; 1
    280c:	a1 30       	cpi	r26, 0x01	; 1
    280e:	b1 05       	cpc	r27, r1
    2810:	09 f0       	breq	.+2      	; 0x2814 <ButtonProcessor+0xbe2>
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	19 23       	and	r17, r25
    2816:	c1 e0       	ldi	r28, 0x01	; 1
    2818:	45 2b       	or	r20, r21
    281a:	09 f0       	breq	.+2      	; 0x281e <ButtonProcessor+0xbec>
    281c:	c0 e0       	ldi	r28, 0x00	; 0
    281e:	1c 23       	and	r17, r28
    2820:	81 17       	cp	r24, r17
    2822:	90 f4       	brcc	.+36     	; 0x2848 <ButtonProcessor+0xc16>
		{GameField[0][0] = 2;
    2824:	ac e0       	ldi	r26, 0x0C	; 12
    2826:	b1 e0       	ldi	r27, 0x01	; 1
    2828:	82 e0       	ldi	r24, 0x02	; 2
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	11 96       	adiw	r26, 0x01	; 1
    282e:	9c 93       	st	X, r25
    2830:	8e 93       	st	-X, r24
			endd = true;}
			
	if((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
			endd = true;}
	if((GameField[0][2]==1)&(GameField[1][1]==0)&(GameField[2][0]==1)&(endd == false))
    2832:	1c 96       	adiw	r26, 0x0c	; 12
    2834:	4d 91       	ld	r20, X+
    2836:	5c 91       	ld	r21, X
    2838:	1d 97       	sbiw	r26, 0x0d	; 13
    283a:	91 e0       	ldi	r25, 0x01	; 1
    283c:	41 30       	cpi	r20, 0x01	; 1
    283e:	51 05       	cpc	r21, r1
    2840:	09 f0       	breq	.+2      	; 0x2844 <ButtonProcessor+0xc12>
    2842:	90 e0       	ldi	r25, 0x00	; 0
	if((GameField[0][0]==1)&(GameField[1][1]==0)&(GameField[2][2]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
	if((GameField[0][0]==0)&(GameField[1][1]==1)&(GameField[2][2]==1)&(endd == false))
		{GameField[0][0] = 2;
			endd = true;}
    2844:	81 e0       	ldi	r24, 0x01	; 1
    2846:	35 c0       	rjmp	.+106    	; 0x28b2 <ButtonProcessor+0xc80>
			
	if((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==0)&(endd == false))
    2848:	99 21       	and	r25, r9
    284a:	41 e0       	ldi	r20, 0x01	; 1
    284c:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <GameField+0xc>
    2850:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <GameField+0xd>
    2854:	cd 2b       	or	r28, r29
    2856:	09 f0       	breq	.+2      	; 0x285a <ButtonProcessor+0xc28>
    2858:	40 e0       	ldi	r20, 0x00	; 0
    285a:	94 23       	and	r25, r20
    285c:	89 17       	cp	r24, r25
    285e:	80 f4       	brcc	.+32     	; 0x2880 <ButtonProcessor+0xc4e>
		{GameField[2][0] = 2;
    2860:	ac e0       	ldi	r26, 0x0C	; 12
    2862:	b1 e0       	ldi	r27, 0x01	; 1
    2864:	82 e0       	ldi	r24, 0x02	; 2
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	1d 96       	adiw	r26, 0x0d	; 13
    286a:	9c 93       	st	X, r25
    286c:	8e 93       	st	-X, r24
    286e:	1c 97       	sbiw	r26, 0x0c	; 12
			endd = true;}
	if((GameField[0][2]==1)&(GameField[1][1]==0)&(GameField[2][0]==1)&(endd == false))
		{GameField[1][1] = 2;
			endd = true;}
	if((GameField[0][2]==0)&(GameField[1][1]==1)&(GameField[2][0]==1)&(endd == false))
    2870:	18 96       	adiw	r26, 0x08	; 8
    2872:	0d 90       	ld	r0, X+
    2874:	bc 91       	ld	r27, X
    2876:	a0 2d       	mov	r26, r0
			endd = true;}
			
	if((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
			endd = true;}
	if((GameField[0][2]==1)&(GameField[1][1]==0)&(GameField[2][0]==1)&(endd == false))
    2878:	42 e0       	ldi	r20, 0x02	; 2
    287a:	50 e0       	ldi	r21, 0x00	; 0
		{GameField[0][0] = 2;
			endd = true;}
			
	if((GameField[0][2]==1)&(GameField[1][1]==1)&(GameField[2][0]==0)&(endd == false))
		{GameField[2][0] = 2;
			endd = true;}
    287c:	81 e0       	ldi	r24, 0x01	; 1
    287e:	32 c0       	rjmp	.+100    	; 0x28e4 <ButtonProcessor+0xcb2>
	if((GameField[0][2]==1)&(GameField[1][1]==0)&(GameField[2][0]==1)&(endd == false))
    2880:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <GameField+0xc>
    2884:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <GameField+0xd>
    2888:	91 e0       	ldi	r25, 0x01	; 1
    288a:	41 30       	cpi	r20, 0x01	; 1
    288c:	51 05       	cpc	r21, r1
    288e:	09 f0       	breq	.+2      	; 0x2892 <ButtonProcessor+0xc60>
    2890:	90 e0       	ldi	r25, 0x00	; 0
    2892:	99 22       	and	r9, r25
    2894:	c1 e0       	ldi	r28, 0x01	; 1
    2896:	ab 2b       	or	r26, r27
    2898:	09 f0       	breq	.+2      	; 0x289c <ButtonProcessor+0xc6a>
    289a:	c0 e0       	ldi	r28, 0x00	; 0
    289c:	9c 22       	and	r9, r28
    289e:	89 15       	cp	r24, r9
    28a0:	40 f4       	brcc	.+16     	; 0x28b2 <ButtonProcessor+0xc80>
		{GameField[1][1] = 2;
    28a2:	82 e0       	ldi	r24, 0x02	; 2
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <GameField+0x9>
    28aa:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <GameField+0x8>
			endd = true;}
    28ae:	81 e0       	ldi	r24, 0x01	; 1
    28b0:	27 c0       	rjmp	.+78     	; 0x2900 <ButtonProcessor+0xcce>
	if((GameField[0][2]==0)&(GameField[1][1]==1)&(GameField[2][0]==1)&(endd == false))
    28b2:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <GameField+0x8>
    28b6:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <GameField+0x9>
    28ba:	c1 e0       	ldi	r28, 0x01	; 1
    28bc:	a1 30       	cpi	r26, 0x01	; 1
    28be:	b1 05       	cpc	r27, r1
    28c0:	09 f0       	breq	.+2      	; 0x28c4 <ButtonProcessor+0xc92>
    28c2:	c0 e0       	ldi	r28, 0x00	; 0
    28c4:	9c 23       	and	r25, r28
    28c6:	c1 e0       	ldi	r28, 0x01	; 1
    28c8:	cd 28       	or	r12, r13
    28ca:	09 f0       	breq	.+2      	; 0x28ce <ButtonProcessor+0xc9c>
    28cc:	c0 e0       	ldi	r28, 0x00	; 0
    28ce:	c9 23       	and	r28, r25
    28d0:	8c 17       	cp	r24, r28
    28d2:	40 f4       	brcc	.+16     	; 0x28e4 <ButtonProcessor+0xcb2>
		{GameField[0][2] = 2;
    28d4:	82 e0       	ldi	r24, 0x02	; 2
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <GameField+0x5>
    28dc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <GameField+0x4>
			endd = true;}
    28e0:	81 e0       	ldi	r24, 0x01	; 1
    28e2:	20 c0       	rjmp	.+64     	; 0x2924 <ButtonProcessor+0xcf2>
	
	
	if((GameField[1][1] == 0)&(endd == false))
    28e4:	91 e0       	ldi	r25, 0x01	; 1
    28e6:	ab 2b       	or	r26, r27
    28e8:	09 f0       	breq	.+2      	; 0x28ec <ButtonProcessor+0xcba>
    28ea:	90 e0       	ldi	r25, 0x00	; 0
    28ec:	89 17       	cp	r24, r25
    28ee:	40 f4       	brcc	.+16     	; 0x2900 <ButtonProcessor+0xcce>
	{GameField[1][1] = 2;
    28f0:	82 e0       	ldi	r24, 0x02	; 2
    28f2:	90 e0       	ldi	r25, 0x00	; 0
    28f4:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <GameField+0x9>
    28f8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <GameField+0x8>
		endd = true;}
    28fc:	81 e0       	ldi	r24, 0x01	; 1
    28fe:	20 c0       	rjmp	.+64     	; 0x2940 <ButtonProcessor+0xd0e>
		
	if((GameField[0][0] == 0)&(endd == false))
    2900:	91 e0       	ldi	r25, 0x01	; 1
    2902:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <GameField>
    2906:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <GameField+0x1>
    290a:	ab 2b       	or	r26, r27
    290c:	09 f0       	breq	.+2      	; 0x2910 <ButtonProcessor+0xcde>
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	89 17       	cp	r24, r25
    2912:	40 f4       	brcc	.+16     	; 0x2924 <ButtonProcessor+0xcf2>
	{GameField[0][0] = 2;
    2914:	82 e0       	ldi	r24, 0x02	; 2
    2916:	90 e0       	ldi	r25, 0x00	; 0
    2918:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <GameField+0x1>
    291c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <GameField>
		endd = true;}
    2920:	81 e0       	ldi	r24, 0x01	; 1
    2922:	20 c0       	rjmp	.+64     	; 0x2964 <ButtonProcessor+0xd32>
		
	if((GameField[2][2] == 0)&(endd == false))
    2924:	91 e0       	ldi	r25, 0x01	; 1
    2926:	67 2b       	or	r22, r23
    2928:	09 f0       	breq	.+2      	; 0x292c <ButtonProcessor+0xcfa>
    292a:	90 e0       	ldi	r25, 0x00	; 0
    292c:	89 17       	cp	r24, r25
    292e:	40 f4       	brcc	.+16     	; 0x2940 <ButtonProcessor+0xd0e>
	{GameField[2][2] = 2;
    2930:	82 e0       	ldi	r24, 0x02	; 2
    2932:	90 e0       	ldi	r25, 0x00	; 0
    2934:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <GameField+0x11>
    2938:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <GameField+0x10>
		endd = true;}
    293c:	81 e0       	ldi	r24, 0x01	; 1
    293e:	20 c0       	rjmp	.+64     	; 0x2980 <ButtonProcessor+0xd4e>
		
	if((GameField[0][2] == 0)&(endd == false))
    2940:	91 e0       	ldi	r25, 0x01	; 1
    2942:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <GameField+0x4>
    2946:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <GameField+0x5>
    294a:	67 2b       	or	r22, r23
    294c:	09 f0       	breq	.+2      	; 0x2950 <ButtonProcessor+0xd1e>
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	89 17       	cp	r24, r25
    2952:	40 f4       	brcc	.+16     	; 0x2964 <ButtonProcessor+0xd32>
	{GameField[0][2] = 2;
    2954:	82 e0       	ldi	r24, 0x02	; 2
    2956:	90 e0       	ldi	r25, 0x00	; 0
    2958:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <GameField+0x5>
    295c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <GameField+0x4>
		endd = true;}
    2960:	81 e0       	ldi	r24, 0x01	; 1
    2962:	20 c0       	rjmp	.+64     	; 0x29a4 <ButtonProcessor+0xd72>
		
	if((GameField[0][1] == 0)&(endd == false))
    2964:	91 e0       	ldi	r25, 0x01	; 1
    2966:	ef 28       	or	r14, r15
    2968:	09 f0       	breq	.+2      	; 0x296c <ButtonProcessor+0xd3a>
    296a:	90 e0       	ldi	r25, 0x00	; 0
    296c:	89 17       	cp	r24, r25
    296e:	40 f4       	brcc	.+16     	; 0x2980 <ButtonProcessor+0xd4e>
		{GameField[0][1] = 2;
    2970:	82 e0       	ldi	r24, 0x02	; 2
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <GameField+0x3>
    2978:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <GameField+0x2>
		endd = true;}
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	1f c0       	rjmp	.+62     	; 0x29be <ButtonProcessor+0xd8c>
		
	if((GameField[1][0] == 0)&(endd == false))
    2980:	91 e0       	ldi	r25, 0x01	; 1
    2982:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <GameField+0x6>
    2986:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <GameField+0x7>
    298a:	67 2b       	or	r22, r23
    298c:	09 f0       	breq	.+2      	; 0x2990 <ButtonProcessor+0xd5e>
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	89 17       	cp	r24, r25
    2992:	40 f4       	brcc	.+16     	; 0x29a4 <ButtonProcessor+0xd72>
		{GameField[1][0] = 2;
    2994:	82 e0       	ldi	r24, 0x02	; 2
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <GameField+0x7>
    299c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <GameField+0x6>
		endd = true;}
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	1a c0       	rjmp	.+52     	; 0x29d8 <ButtonProcessor+0xda6>
		
	if((GameField[2][0] == 0)&(endd == false))
    29a4:	91 e0       	ldi	r25, 0x01	; 1
    29a6:	45 2b       	or	r20, r21
    29a8:	09 f0       	breq	.+2      	; 0x29ac <ButtonProcessor+0xd7a>
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	89 17       	cp	r24, r25
    29ae:	38 f4       	brcc	.+14     	; 0x29be <ButtonProcessor+0xd8c>
		{GameField[2][0] = 2;
    29b0:	82 e0       	ldi	r24, 0x02	; 2
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <GameField+0xd>
    29b8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <GameField+0xc>
    29bc:	19 c0       	rjmp	.+50     	; 0x29f0 <ButtonProcessor+0xdbe>
		endd = true;}
		
	if((GameField[1][2] == 0)&(endd == false))
    29be:	91 e0       	ldi	r25, 0x01	; 1
    29c0:	23 2b       	or	r18, r19
    29c2:	09 f0       	breq	.+2      	; 0x29c6 <ButtonProcessor+0xd94>
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	89 17       	cp	r24, r25
    29c8:	38 f4       	brcc	.+14     	; 0x29d8 <ButtonProcessor+0xda6>
		{GameField[1][2] = 2;
    29ca:	82 e0       	ldi	r24, 0x02	; 2
    29cc:	90 e0       	ldi	r25, 0x00	; 0
    29ce:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <GameField+0xb>
    29d2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <GameField+0xa>
    29d6:	0c c0       	rjmp	.+24     	; 0x29f0 <ButtonProcessor+0xdbe>
		endd = true;}
		
	if((GameField[2][1] == 0)&(endd == false))
    29d8:	91 e0       	ldi	r25, 0x01	; 1
    29da:	ef 2b       	or	r30, r31
    29dc:	09 f0       	breq	.+2      	; 0x29e0 <ButtonProcessor+0xdae>
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	89 17       	cp	r24, r25
    29e2:	30 f4       	brcc	.+12     	; 0x29f0 <ButtonProcessor+0xdbe>
		{GameField[2][1] = 2;
    29e4:	82 e0       	ldi	r24, 0x02	; 2
    29e6:	90 e0       	ldi	r25, 0x00	; 0
    29e8:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <GameField+0xf>
    29ec:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <GameField+0xe>
		endd = true;}
	
	
		player1 = true;
    29f0:	81 e0       	ldi	r24, 0x01	; 1
    29f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		MatZeros--;
    29f6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <MatZeros>
    29fa:	81 50       	subi	r24, 0x01	; 1
    29fc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <MatZeros>
		Results(MatZeros);
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <Results>

	return;
    2a06:	81 c0       	rjmp	.+258    	; 0x2b0a <ButtonProcessor+0xed8>
}


	if(player1 == true)
    2a08:	88 23       	and	r24, r24
    2a0a:	09 f4       	brne	.+2      	; 0x2a0e <ButtonProcessor+0xddc>
    2a0c:	43 c0       	rjmp	.+134    	; 0x2a94 <ButtonProcessor+0xe62>
	{
		if(button == 0){
    2a0e:	20 97       	sbiw	r28, 0x00	; 0
    2a10:	09 f4       	brne	.+2      	; 0x2a14 <ButtonProcessor+0xde2>
    2a12:	7b c0       	rjmp	.+246    	; 0x2b0a <ButtonProcessor+0xed8>
		return;}
		if(button < 10)
    2a14:	ca 30       	cpi	r28, 0x0A	; 10
    2a16:	d1 05       	cpc	r29, r1
    2a18:	14 f4       	brge	.+4      	; 0x2a1e <ButtonProcessor+0xdec>
		{
			line = 3;
			column = button - 6;
    2a1a:	1c 2f       	mov	r17, r28
    2a1c:	16 50       	subi	r17, 0x06	; 6
		}
		if(button < 7)
    2a1e:	c7 30       	cpi	r28, 0x07	; 7
    2a20:	d1 05       	cpc	r29, r1
    2a22:	24 f4       	brge	.+8      	; 0x2a2c <ButtonProcessor+0xdfa>
		{
			line = 2;
			column = button - 3;
    2a24:	1c 2f       	mov	r17, r28
    2a26:	13 50       	subi	r17, 0x03	; 3
			line = 3;
			column = button - 6;
		}
		if(button < 7)
		{
			line = 2;
    2a28:	02 e0       	ldi	r16, 0x02	; 2
    2a2a:	01 c0       	rjmp	.+2      	; 0x2a2e <ButtonProcessor+0xdfc>
    2a2c:	03 e0       	ldi	r16, 0x03	; 3
			column = button - 3;
		}
		if(button < 4)
    2a2e:	c4 30       	cpi	r28, 0x04	; 4
    2a30:	d1 05       	cpc	r29, r1
    2a32:	14 f4       	brge	.+4      	; 0x2a38 <ButtonProcessor+0xe06>
		{
			line = 1;
			column = button;
    2a34:	1c 2f       	mov	r17, r28
			line = 2;
			column = button - 3;
		}
		if(button < 4)
		{
			line = 1;
    2a36:	01 e0       	ldi	r16, 0x01	; 1
			column = button;
		}	
		if(GameField[line-1][column-1] == 0)
    2a38:	80 2f       	mov	r24, r16
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	01 97       	sbiw	r24, 0x01	; 1
    2a3e:	21 2f       	mov	r18, r17
    2a40:	30 e0       	ldi	r19, 0x00	; 0
    2a42:	21 50       	subi	r18, 0x01	; 1
    2a44:	31 09       	sbc	r19, r1
    2a46:	dc 01       	movw	r26, r24
    2a48:	aa 0f       	add	r26, r26
    2a4a:	bb 1f       	adc	r27, r27
    2a4c:	a8 0f       	add	r26, r24
    2a4e:	b9 1f       	adc	r27, r25
    2a50:	a2 0f       	add	r26, r18
    2a52:	b3 1f       	adc	r27, r19
    2a54:	aa 0f       	add	r26, r26
    2a56:	bb 1f       	adc	r27, r27
    2a58:	a4 5f       	subi	r26, 0xF4	; 244
    2a5a:	be 4f       	sbci	r27, 0xFE	; 254
    2a5c:	4d 91       	ld	r20, X+
    2a5e:	5c 91       	ld	r21, X
    2a60:	11 97       	sbiw	r26, 0x01	; 1
    2a62:	45 2b       	or	r20, r21
    2a64:	09 f0       	breq	.+2      	; 0x2a68 <ButtonProcessor+0xe36>
    2a66:	51 c0       	rjmp	.+162    	; 0x2b0a <ButtonProcessor+0xed8>
		{
			GameField[line-1][column-1] = 1;
    2a68:	fd 01       	movw	r30, r26
    2a6a:	81 e0       	ldi	r24, 0x01	; 1
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	80 83       	st	Z, r24
			player1 = false;
    2a72:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
			MatZeros--;
    2a76:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <MatZeros>
    2a7a:	81 50       	subi	r24, 0x01	; 1
    2a7c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <MatZeros>
			Results(MatZeros);
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <Results>
			
		}			

	}
	if((player1 == false)&(PvP == true))
    2a86:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
    2a8a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <PvP>
    2a8e:	98 17       	cp	r25, r24
    2a90:	28 f0       	brcs	.+10     	; 0x2a9c <ButtonProcessor+0xe6a>
    2a92:	3b c0       	rjmp	.+118    	; 0x2b0a <ButtonProcessor+0xed8>
    2a94:	22 23       	and	r18, r18
    2a96:	c9 f1       	breq	.+114    	; 0x2b0a <ButtonProcessor+0xed8>
	{
		if(button == 0){
    2a98:	20 97       	sbiw	r28, 0x00	; 0
    2a9a:	b9 f1       	breq	.+110    	; 0x2b0a <ButtonProcessor+0xed8>
		return;}
		if(button < 10)
    2a9c:	ca 30       	cpi	r28, 0x0A	; 10
    2a9e:	d1 05       	cpc	r29, r1
    2aa0:	1c f4       	brge	.+6      	; 0x2aa8 <ButtonProcessor+0xe76>
		{
			line = 3;
			column = button - 6;
    2aa2:	1c 2f       	mov	r17, r28
    2aa4:	16 50       	subi	r17, 0x06	; 6
	{
		if(button == 0){
		return;}
		if(button < 10)
		{
			line = 3;
    2aa6:	03 e0       	ldi	r16, 0x03	; 3
			column = button - 6;
		}
		if(button < 7)
    2aa8:	c7 30       	cpi	r28, 0x07	; 7
    2aaa:	d1 05       	cpc	r29, r1
    2aac:	1c f4       	brge	.+6      	; 0x2ab4 <ButtonProcessor+0xe82>
		{
			line = 2;
			column = button - 3;
    2aae:	1c 2f       	mov	r17, r28
    2ab0:	13 50       	subi	r17, 0x03	; 3
			line = 3;
			column = button - 6;
		}
		if(button < 7)
		{
			line = 2;
    2ab2:	02 e0       	ldi	r16, 0x02	; 2
			column = button - 3;
		}
		if(button < 4)
    2ab4:	c4 30       	cpi	r28, 0x04	; 4
    2ab6:	d1 05       	cpc	r29, r1
    2ab8:	14 f4       	brge	.+4      	; 0x2abe <ButtonProcessor+0xe8c>
		{
			line = 1;
			column = button;
    2aba:	1c 2f       	mov	r17, r28
			line = 2;
			column = button - 3;
		}
		if(button < 4)
		{
			line = 1;
    2abc:	01 e0       	ldi	r16, 0x01	; 1
			column = button;
		}
		if(GameField[line-1][column-1] == 0)
    2abe:	e0 2f       	mov	r30, r16
    2ac0:	f0 e0       	ldi	r31, 0x00	; 0
    2ac2:	31 97       	sbiw	r30, 0x01	; 1
    2ac4:	81 2f       	mov	r24, r17
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	01 97       	sbiw	r24, 0x01	; 1
    2aca:	df 01       	movw	r26, r30
    2acc:	aa 0f       	add	r26, r26
    2ace:	bb 1f       	adc	r27, r27
    2ad0:	ae 0f       	add	r26, r30
    2ad2:	bf 1f       	adc	r27, r31
    2ad4:	a8 0f       	add	r26, r24
    2ad6:	b9 1f       	adc	r27, r25
    2ad8:	aa 0f       	add	r26, r26
    2ada:	bb 1f       	adc	r27, r27
    2adc:	a4 5f       	subi	r26, 0xF4	; 244
    2ade:	be 4f       	sbci	r27, 0xFE	; 254
    2ae0:	2d 91       	ld	r18, X+
    2ae2:	3c 91       	ld	r19, X
    2ae4:	11 97       	sbiw	r26, 0x01	; 1
    2ae6:	23 2b       	or	r18, r19
    2ae8:	81 f4       	brne	.+32     	; 0x2b0a <ButtonProcessor+0xed8>
		{
			GameField[line-1][column-1] = 2;
    2aea:	fd 01       	movw	r30, r26
    2aec:	82 e0       	ldi	r24, 0x02	; 2
    2aee:	90 e0       	ldi	r25, 0x00	; 0
    2af0:	91 83       	std	Z+1, r25	; 0x01
    2af2:	80 83       	st	Z, r24
			player1 = true;
    2af4:	81 e0       	ldi	r24, 0x01	; 1
    2af6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			MatZeros--;
    2afa:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <MatZeros>
    2afe:	81 50       	subi	r24, 0x01	; 1
    2b00:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <MatZeros>
			Results(MatZeros);
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <Results>
		}
		
	}
	else{return;}
}
    2b0a:	df 91       	pop	r29
    2b0c:	cf 91       	pop	r28
    2b0e:	1f 91       	pop	r17
    2b10:	0f 91       	pop	r16
    2b12:	ff 90       	pop	r15
    2b14:	ef 90       	pop	r14
    2b16:	df 90       	pop	r13
    2b18:	cf 90       	pop	r12
    2b1a:	bf 90       	pop	r11
    2b1c:	af 90       	pop	r10
    2b1e:	9f 90       	pop	r9
    2b20:	8f 90       	pop	r8
    2b22:	7f 90       	pop	r7
    2b24:	6f 90       	pop	r6
    2b26:	5f 90       	pop	r5
    2b28:	4f 90       	pop	r4
    2b2a:	08 95       	ret

00002b2c <about>:
		LCD_Sent_Byte(buffer,DATA);
	}
}

void about()											//Clear LCD,fill RAM LCD by empty bytes
{
    2b2c:	0f 93       	push	r16
    2b2e:	1f 93       	push	r17
    2b30:	cf 93       	push	r28
    2b32:	df 93       	push	r29
	char buffer;
	LCD_Set_Cordinates(0,0);
    2b34:	60 e0       	ldi	r22, 0x00	; 0
    2b36:	70 e0       	ldi	r23, 0x00	; 0
    2b38:	80 e0       	ldi	r24, 0x00	; 0
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    2b40:	ca ee       	ldi	r28, 0xEA	; 234
    2b42:	d1 e0       	ldi	r29, 0x01	; 1
    2b44:	0a e2       	ldi	r16, 0x2A	; 42
    2b46:	15 e0       	ldi	r17, 0x05	; 5
	for(int smbl = 0; smbl < 832; smbl++)
	{
		buffer = pgm_read_byte(&(About[smbl]));
    2b48:	fe 01       	movw	r30, r28
    2b4a:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    2b4c:	61 e0       	ldi	r22, 0x01	; 1
    2b4e:	70 e0       	ldi	r23, 0x00	; 0
    2b50:	90 e0       	ldi	r25, 0x00	; 0
    2b52:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    2b56:	21 96       	adiw	r28, 0x01	; 1

void about()											//Clear LCD,fill RAM LCD by empty bytes
{
	char buffer;
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 832; smbl++)
    2b58:	c0 17       	cp	r28, r16
    2b5a:	d1 07       	cpc	r29, r17
    2b5c:	a9 f7       	brne	.-22     	; 0x2b48 <about+0x1c>
	{
		buffer = pgm_read_byte(&(About[smbl]));
		LCD_Sent_Byte(buffer,DATA);
	}
    2b5e:	df 91       	pop	r29
    2b60:	cf 91       	pop	r28
    2b62:	1f 91       	pop	r17
    2b64:	0f 91       	pop	r16
    2b66:	08 95       	ret

00002b68 <Menu>:
}

void Menu()
{
M:
	fr = false;
    2b68:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
    2b6c:	2f ef       	ldi	r18, 0xFF	; 255
    2b6e:	89 e6       	ldi	r24, 0x69	; 105
    2b70:	98 e1       	ldi	r25, 0x18	; 24
    2b72:	21 50       	subi	r18, 0x01	; 1
    2b74:	80 40       	sbci	r24, 0x00	; 0
    2b76:	90 40       	sbci	r25, 0x00	; 0
    2b78:	e1 f7       	brne	.-8      	; 0x2b72 <Menu+0xa>
    2b7a:	00 c0       	rjmp	.+0      	; 0x2b7c <Menu+0x14>
    2b7c:	00 00       	nop
	_delay_ms(1000);
	LCD_Menu();
    2b7e:	0e 94 02 0a 	call	0x1404	; 0x1404 <LCD_Menu>
	int btn = 0;
	while(1)
	{
		btn = Check_ButtMat3x3();
    2b82:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <Check_ButtMat3x3>
		if(btn == 1)
    2b86:	81 30       	cpi	r24, 0x01	; 1
    2b88:	91 05       	cpc	r25, r1
    2b8a:	21 f4       	brne	.+8      	; 0x2b94 <Menu+0x2c>
		{
			PvP = true;
    2b8c:	81 e0       	ldi	r24, 0x01	; 1
    2b8e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <PvP>
			return;			
    2b92:	08 95       	ret
		}
		if(btn == 2)
    2b94:	82 30       	cpi	r24, 0x02	; 2
    2b96:	91 05       	cpc	r25, r1
    2b98:	19 f4       	brne	.+6      	; 0x2ba0 <Menu+0x38>
		{
			PvP = false;
    2b9a:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <PvP>
			return;		
    2b9e:	08 95       	ret
		}
		if(btn == 3)
    2ba0:	03 97       	sbiw	r24, 0x03	; 3
    2ba2:	79 f7       	brne	.-34     	; 0x2b82 <Menu+0x1a>
		{
			about();			
    2ba4:	0e 94 96 15 	call	0x2b2c	; 0x2b2c <about>
    2ba8:	2f ef       	ldi	r18, 0xFF	; 255
    2baa:	81 e1       	ldi	r24, 0x11	; 17
    2bac:	9a e7       	ldi	r25, 0x7A	; 122
    2bae:	21 50       	subi	r18, 0x01	; 1
    2bb0:	80 40       	sbci	r24, 0x00	; 0
    2bb2:	90 40       	sbci	r25, 0x00	; 0
    2bb4:	e1 f7       	brne	.-8      	; 0x2bae <Menu+0x46>
    2bb6:	00 c0       	rjmp	.+0      	; 0x2bb8 <Menu+0x50>
    2bb8:	00 00       	nop
    2bba:	d6 cf       	rjmp	.-84     	; 0x2b68 <Menu>

00002bbc <MCU_Init>:
int8_t Check_ButtMat3x3(void);
void Timer0_Init(void);

void MCU_Init()														//Initialization MCU
{
	DDRD = 0x03;													//Set PORTD on output
    2bbc:	83 e0       	ldi	r24, 0x03	; 3
    2bbe:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xff;													//Set PORTB on output
    2bc0:	8f ef       	ldi	r24, 0xFF	; 255
    2bc2:	84 b9       	out	0x04, r24	; 4
	MatrixDDR = 0x00;
    2bc4:	17 b8       	out	0x07, r1	; 7
	MatrixDDR |= (1 << Coloum1)|(1 << Coloum2)|(1 << Coloum3);
    2bc6:	87 b1       	in	r24, 0x07	; 7
    2bc8:	87 60       	ori	r24, 0x07	; 7
    2bca:	87 b9       	out	0x07, r24	; 7
	
	SPCR |= (1 << SPE)|(1 << MSTR)|(1 << SPR0);						//setting SPI
    2bcc:	8c b5       	in	r24, 0x2c	; 44
    2bce:	81 65       	ori	r24, 0x51	; 81
    2bd0:	8c bd       	out	0x2c, r24	; 44
	
	asm("sei");														//SREG = (1 << I), global interrapt is enable
    2bd2:	78 94       	sei
    2bd4:	08 95       	ret

00002bd6 <Timer0_Init>:
}

void Timer0_Init()
{
		TCCR0B |= (1 << CS01)|(1 << CS00);								//Timer 0 prescaler on 1024, interrupt 30 per second
    2bd6:	85 b5       	in	r24, 0x25	; 37
    2bd8:	83 60       	ori	r24, 0x03	; 3
    2bda:	85 bd       	out	0x25, r24	; 37
		TIMSK0 |= (1 << TOIE0);											//Timer 0 interrupt enable
    2bdc:	ee e6       	ldi	r30, 0x6E	; 110
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	80 81       	ld	r24, Z
    2be2:	81 60       	ori	r24, 0x01	; 1
    2be4:	80 83       	st	Z, r24
    2be6:	08 95       	ret

00002be8 <Check_ButtMat3x3>:
}

int8_t Check_ButtMat3x3(void)
{
	SetColoum1
    2be8:	40 9a       	sbi	0x08, 0	; 8
    2bea:	8f e0       	ldi	r24, 0x0F	; 15
    2bec:	97 e2       	ldi	r25, 0x27	; 39
    2bee:	01 97       	sbiw	r24, 0x01	; 1
    2bf0:	f1 f7       	brne	.-4      	; 0x2bee <Check_ButtMat3x3+0x6>
    2bf2:	00 c0       	rjmp	.+0      	; 0x2bf4 <Check_ButtMat3x3+0xc>
    2bf4:	00 00       	nop
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
    2bf6:	33 99       	sbic	0x06, 3	; 6
    2bf8:	22 c0       	rjmp	.+68     	; 0x2c3e <Check_ButtMat3x3+0x56>
	{
		return(7);
	}
	if(MatrixPin & (1 << Line2))
    2bfa:	34 99       	sbic	0x06, 4	; 6
    2bfc:	22 c0       	rjmp	.+68     	; 0x2c42 <Check_ButtMat3x3+0x5a>
	{
		return(8);
	}
	if(MatrixPin & (1 << Line3))
    2bfe:	35 99       	sbic	0x06, 5	; 6
    2c00:	22 c0       	rjmp	.+68     	; 0x2c46 <Check_ButtMat3x3+0x5e>
	{
		return(9);
	}
	DisColoum1
    2c02:	40 98       	cbi	0x08, 0	; 8
	
	SetColoum2
    2c04:	41 9a       	sbi	0x08, 1	; 8
    2c06:	8f e0       	ldi	r24, 0x0F	; 15
    2c08:	97 e2       	ldi	r25, 0x27	; 39
    2c0a:	01 97       	sbiw	r24, 0x01	; 1
    2c0c:	f1 f7       	brne	.-4      	; 0x2c0a <Check_ButtMat3x3+0x22>
    2c0e:	00 c0       	rjmp	.+0      	; 0x2c10 <Check_ButtMat3x3+0x28>
    2c10:	00 00       	nop
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
    2c12:	33 99       	sbic	0x06, 3	; 6
    2c14:	1a c0       	rjmp	.+52     	; 0x2c4a <Check_ButtMat3x3+0x62>
	{
		return(4);
	}
	if(MatrixPin & (1 << Line2))
    2c16:	34 99       	sbic	0x06, 4	; 6
    2c18:	1a c0       	rjmp	.+52     	; 0x2c4e <Check_ButtMat3x3+0x66>
	{
		return(5);
	}
	if(MatrixPin & (1 << Line3))
    2c1a:	35 99       	sbic	0x06, 5	; 6
    2c1c:	1a c0       	rjmp	.+52     	; 0x2c52 <Check_ButtMat3x3+0x6a>
	{
		return(6);
	}
	DisColoum2
    2c1e:	41 98       	cbi	0x08, 1	; 8
	
	SetColoum3
    2c20:	42 9a       	sbi	0x08, 2	; 8
    2c22:	8f e0       	ldi	r24, 0x0F	; 15
    2c24:	97 e2       	ldi	r25, 0x27	; 39
    2c26:	01 97       	sbiw	r24, 0x01	; 1
    2c28:	f1 f7       	brne	.-4      	; 0x2c26 <Check_ButtMat3x3+0x3e>
    2c2a:	00 c0       	rjmp	.+0      	; 0x2c2c <Check_ButtMat3x3+0x44>
    2c2c:	00 00       	nop
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
    2c2e:	33 99       	sbic	0x06, 3	; 6
    2c30:	12 c0       	rjmp	.+36     	; 0x2c56 <Check_ButtMat3x3+0x6e>
	{
		return(1);
	}
	if(MatrixPin & (1 << Line2))
    2c32:	34 99       	sbic	0x06, 4	; 6
    2c34:	12 c0       	rjmp	.+36     	; 0x2c5a <Check_ButtMat3x3+0x72>
	{
		return(2);
	}
	if(MatrixPin & (1 << Line3))
    2c36:	35 99       	sbic	0x06, 5	; 6
    2c38:	12 c0       	rjmp	.+36     	; 0x2c5e <Check_ButtMat3x3+0x76>
	{
		return(3);
	}
	DisColoum3
    2c3a:	42 98       	cbi	0x08, 2	; 8
    2c3c:	08 95       	ret
{
	SetColoum1
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
	{
		return(7);
    2c3e:	87 e0       	ldi	r24, 0x07	; 7
    2c40:	08 95       	ret
	}
	if(MatrixPin & (1 << Line2))
	{
		return(8);
    2c42:	88 e0       	ldi	r24, 0x08	; 8
    2c44:	08 95       	ret
	}
	if(MatrixPin & (1 << Line3))
	{
		return(9);
    2c46:	89 e0       	ldi	r24, 0x09	; 9
    2c48:	08 95       	ret
	
	SetColoum2
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
	{
		return(4);
    2c4a:	84 e0       	ldi	r24, 0x04	; 4
    2c4c:	08 95       	ret
	}
	if(MatrixPin & (1 << Line2))
	{
		return(5);
    2c4e:	85 e0       	ldi	r24, 0x05	; 5
    2c50:	08 95       	ret
	}
	if(MatrixPin & (1 << Line3))
	{
		return(6);
    2c52:	86 e0       	ldi	r24, 0x06	; 6
    2c54:	08 95       	ret
	
	SetColoum3
	_delay_ms(5);
	if(MatrixPin & (1 << Line1))
	{
		return(1);
    2c56:	81 e0       	ldi	r24, 0x01	; 1
    2c58:	08 95       	ret
	}
	if(MatrixPin & (1 << Line2))
	{
		return(2);
    2c5a:	82 e0       	ldi	r24, 0x02	; 2
    2c5c:	08 95       	ret
	}
	if(MatrixPin & (1 << Line3))
	{
		return(3);
    2c5e:	83 e0       	ldi	r24, 0x03	; 3
	}
	DisColoum3
}
    2c60:	08 95       	ret

00002c62 <__vector_16>:

ISR (TIMER0_OVF_vect)
{
    2c62:	1f 92       	push	r1
    2c64:	0f 92       	push	r0
    2c66:	0f b6       	in	r0, 0x3f	; 63
    2c68:	0f 92       	push	r0
    2c6a:	11 24       	eor	r1, r1
    2c6c:	2f 93       	push	r18
    2c6e:	3f 93       	push	r19
    2c70:	4f 93       	push	r20
    2c72:	5f 93       	push	r21
    2c74:	6f 93       	push	r22
    2c76:	7f 93       	push	r23
    2c78:	8f 93       	push	r24
    2c7a:	9f 93       	push	r25
    2c7c:	af 93       	push	r26
    2c7e:	bf 93       	push	r27
    2c80:	ef 93       	push	r30
    2c82:	ff 93       	push	r31
	ButtonProcessor(0);
    2c84:	80 e0       	ldi	r24, 0x00	; 0
    2c86:	90 e0       	ldi	r25, 0x00	; 0
    2c88:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <ButtonProcessor>
	BuildScreen();
    2c8c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <BuildScreen>
	int x = Check_ButtMat3x3();
    2c90:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <Check_ButtMat3x3>
	ButtonProcessor(x);
    2c94:	08 2e       	mov	r0, r24
    2c96:	00 0c       	add	r0, r0
    2c98:	99 0b       	sbc	r25, r25
    2c9a:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <ButtonProcessor>
}
    2c9e:	ff 91       	pop	r31
    2ca0:	ef 91       	pop	r30
    2ca2:	bf 91       	pop	r27
    2ca4:	af 91       	pop	r26
    2ca6:	9f 91       	pop	r25
    2ca8:	8f 91       	pop	r24
    2caa:	7f 91       	pop	r23
    2cac:	6f 91       	pop	r22
    2cae:	5f 91       	pop	r21
    2cb0:	4f 91       	pop	r20
    2cb2:	3f 91       	pop	r19
    2cb4:	2f 91       	pop	r18
    2cb6:	0f 90       	pop	r0
    2cb8:	0f be       	out	0x3f, r0	; 63
    2cba:	0f 90       	pop	r0
    2cbc:	1f 90       	pop	r1
    2cbe:	18 95       	reti

00002cc0 <main>:


int main(void)
{
	MCU_Init();
    2cc0:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <MCU_Init>
	LCD_Init();
    2cc4:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <LCD_Init>
	LCD_SCL();
    2cc8:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <LCD_SCL>
	LCD_Start();
    2ccc:	0e 94 c6 09 	call	0x138c	; 0x138c <LCD_Start>
    2cd0:	2f ef       	ldi	r18, 0xFF	; 255
    2cd2:	87 ea       	ldi	r24, 0xA7	; 167
    2cd4:	91 e6       	ldi	r25, 0x61	; 97
    2cd6:	21 50       	subi	r18, 0x01	; 1
    2cd8:	80 40       	sbci	r24, 0x00	; 0
    2cda:	90 40       	sbci	r25, 0x00	; 0
    2cdc:	e1 f7       	brne	.-8      	; 0x2cd6 <main+0x16>
    2cde:	00 c0       	rjmp	.+0      	; 0x2ce0 <main+0x20>
    2ce0:	00 00       	nop
	_delay_ms(4000);
	LCD_Name();
    2ce2:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <LCD_Name>
    2ce6:	2f ef       	ldi	r18, 0xFF	; 255
    2ce8:	87 ea       	ldi	r24, 0xA7	; 167
    2cea:	91 e6       	ldi	r25, 0x61	; 97
    2cec:	21 50       	subi	r18, 0x01	; 1
    2cee:	80 40       	sbci	r24, 0x00	; 0
    2cf0:	90 40       	sbci	r25, 0x00	; 0
    2cf2:	e1 f7       	brne	.-8      	; 0x2cec <main+0x2c>
    2cf4:	00 c0       	rjmp	.+0      	; 0x2cf6 <main+0x36>
    2cf6:	00 00       	nop
	_delay_ms(4000);
	Menu();
    2cf8:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <Menu>
    2cfc:	2f ef       	ldi	r18, 0xFF	; 255
    2cfe:	84 e3       	ldi	r24, 0x34	; 52
    2d00:	9c e0       	ldi	r25, 0x0C	; 12
    2d02:	21 50       	subi	r18, 0x01	; 1
    2d04:	80 40       	sbci	r24, 0x00	; 0
    2d06:	90 40       	sbci	r25, 0x00	; 0
    2d08:	e1 f7       	brne	.-8      	; 0x2d02 <main+0x42>
    2d0a:	00 c0       	rjmp	.+0      	; 0x2d0c <main+0x4c>
    2d0c:	00 00       	nop
	_delay_ms(500);
	LCD_SCL();
    2d0e:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <LCD_SCL>
	Timer0_Init();
    2d12:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <Timer0_Init>
	while(1){}
    2d16:	ff cf       	rjmp	.-2      	; 0x2d16 <main+0x56>

00002d18 <LCD_Sent_Byte>:
	LCD_Sent_Byte(0x0C,COMMAND);
}

void LCD_Sent_Byte(int byte,int status)					//sent 1 byte in LCD by hardware SPI 
{
	if (status == COMMAND)SentCOMMAND
    2d18:	67 2b       	or	r22, r23
    2d1a:	11 f4       	brne	.+4      	; 0x2d20 <LCD_Sent_Byte+0x8>
    2d1c:	58 98       	cbi	0x0b, 0	; 11
    2d1e:	01 c0       	rjmp	.+2      	; 0x2d22 <LCD_Sent_Byte+0xa>
	else SentDATA
    2d20:	58 9a       	sbi	0x0b, 0	; 11
	STROBEOFF
    2d22:	59 98       	cbi	0x0b, 1	; 11
	SPDR = byte;
    2d24:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
    2d26:	0d b4       	in	r0, 0x2d	; 45
    2d28:	07 fe       	sbrs	r0, 7
    2d2a:	fd cf       	rjmp	.-6      	; 0x2d26 <LCD_Sent_Byte+0xe>
	STROBEON
    2d2c:	59 9a       	sbi	0x0b, 1	; 11
    2d2e:	08 95       	ret

00002d30 <LCD_Reset>:
}

void LCD_Reset()										//Reset LCD, RAM LCD after reset, not set, need clear
{
	RESETLow
    2d30:	5a 98       	cbi	0x0b, 2	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2d32:	82 e0       	ldi	r24, 0x02	; 2
    2d34:	8a 95       	dec	r24
    2d36:	f1 f7       	brne	.-4      	; 0x2d34 <LCD_Reset+0x4>
    2d38:	00 c0       	rjmp	.+0      	; 0x2d3a <LCD_Reset+0xa>
	_delay_us(1);
	RESETHigh
    2d3a:	5a 9a       	sbi	0x0b, 2	; 11
	STROBEON
    2d3c:	59 9a       	sbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2d3e:	8f ec       	ldi	r24, 0xCF	; 207
    2d40:	97 e0       	ldi	r25, 0x07	; 7
    2d42:	01 97       	sbiw	r24, 0x01	; 1
    2d44:	f1 f7       	brne	.-4      	; 0x2d42 <LCD_Reset+0x12>
    2d46:	00 c0       	rjmp	.+0      	; 0x2d48 <LCD_Reset+0x18>
    2d48:	00 00       	nop
    2d4a:	08 95       	ret

00002d4c <LCD_Init>:
};		//
																

void LCD_Init()											//Initial. LCD
{
	LCD_Reset();
    2d4c:	0e 94 98 16 	call	0x2d30	; 0x2d30 <LCD_Reset>
	LCD_Sent_Byte(0x21,COMMAND);
    2d50:	60 e0       	ldi	r22, 0x00	; 0
    2d52:	70 e0       	ldi	r23, 0x00	; 0
    2d54:	81 e2       	ldi	r24, 0x21	; 33
    2d56:	90 e0       	ldi	r25, 0x00	; 0
    2d58:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x09,COMMAND);
    2d5c:	60 e0       	ldi	r22, 0x00	; 0
    2d5e:	70 e0       	ldi	r23, 0x00	; 0
    2d60:	89 e0       	ldi	r24, 0x09	; 9
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0xE0,COMMAND);
    2d68:	60 e0       	ldi	r22, 0x00	; 0
    2d6a:	70 e0       	ldi	r23, 0x00	; 0
    2d6c:	80 ee       	ldi	r24, 0xE0	; 224
    2d6e:	90 e0       	ldi	r25, 0x00	; 0
    2d70:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x15,COMMAND);
    2d74:	60 e0       	ldi	r22, 0x00	; 0
    2d76:	70 e0       	ldi	r23, 0x00	; 0
    2d78:	85 e1       	ldi	r24, 0x15	; 21
    2d7a:	90 e0       	ldi	r25, 0x00	; 0
    2d7c:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x06,COMMAND);
    2d80:	60 e0       	ldi	r22, 0x00	; 0
    2d82:	70 e0       	ldi	r23, 0x00	; 0
    2d84:	86 e0       	ldi	r24, 0x06	; 6
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x20,COMMAND);
    2d8c:	60 e0       	ldi	r22, 0x00	; 0
    2d8e:	70 e0       	ldi	r23, 0x00	; 0
    2d90:	80 e2       	ldi	r24, 0x20	; 32
    2d92:	90 e0       	ldi	r25, 0x00	; 0
    2d94:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x0C,COMMAND);
    2d98:	60 e0       	ldi	r22, 0x00	; 0
    2d9a:	70 e0       	ldi	r23, 0x00	; 0
    2d9c:	8c e0       	ldi	r24, 0x0C	; 12
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    2da4:	08 95       	ret

00002da6 <LCD_Set_Cordinates>:
	STROBEON
	_delay_ms(1);
}

void LCD_Set_Cordinates(int YY,int XX)
{
    2da6:	cf 93       	push	r28
    2da8:	df 93       	push	r29
    2daa:	eb 01       	movw	r28, r22
	LCD_Sent_Byte(0x40+YY,COMMAND);
    2dac:	60 e0       	ldi	r22, 0x00	; 0
    2dae:	70 e0       	ldi	r23, 0x00	; 0
    2db0:	80 5c       	subi	r24, 0xC0	; 192
    2db2:	9f 4f       	sbci	r25, 0xFF	; 255
    2db4:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
	LCD_Sent_Byte(0x80+XX,COMMAND);
    2db8:	60 e0       	ldi	r22, 0x00	; 0
    2dba:	70 e0       	ldi	r23, 0x00	; 0
    2dbc:	ce 01       	movw	r24, r28
    2dbe:	80 58       	subi	r24, 0x80	; 128
    2dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc2:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    2dc6:	8f e0       	ldi	r24, 0x0F	; 15
    2dc8:	97 e2       	ldi	r25, 0x27	; 39
    2dca:	01 97       	sbiw	r24, 0x01	; 1
    2dcc:	f1 f7       	brne	.-4      	; 0x2dca <LCD_Set_Cordinates+0x24>
    2dce:	00 c0       	rjmp	.+0      	; 0x2dd0 <LCD_Set_Cordinates+0x2a>
    2dd0:	00 00       	nop
	_delay_ms(5);
}
    2dd2:	df 91       	pop	r29
    2dd4:	cf 91       	pop	r28
    2dd6:	08 95       	ret

00002dd8 <LCD_SCL>:

void LCD_SCL()											//Clear LCD,fill RAM LCD by empty bytes
{
    2dd8:	cf 93       	push	r28
    2dda:	df 93       	push	r29
	LCD_Set_Cordinates(0,0);
    2ddc:	60 e0       	ldi	r22, 0x00	; 0
    2dde:	70 e0       	ldi	r23, 0x00	; 0
    2de0:	80 e0       	ldi	r24, 0x00	; 0
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <LCD_Set_Cordinates>
    2de8:	c0 e3       	ldi	r28, 0x30	; 48
    2dea:	d3 e0       	ldi	r29, 0x03	; 3
	for(int smbl = 0; smbl < 816; smbl++)
	{
		LCD_Sent_Byte(0,DATA);
    2dec:	61 e0       	ldi	r22, 0x01	; 1
    2dee:	70 e0       	ldi	r23, 0x00	; 0
    2df0:	80 e0       	ldi	r24, 0x00	; 0
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
    2df8:	21 97       	sbiw	r28, 0x01	; 1
}

void LCD_SCL()											//Clear LCD,fill RAM LCD by empty bytes
{
	LCD_Set_Cordinates(0,0);
	for(int smbl = 0; smbl < 816; smbl++)
    2dfa:	c1 f7       	brne	.-16     	; 0x2dec <LCD_SCL+0x14>
	{
		LCD_Sent_Byte(0,DATA);
	}
}
    2dfc:	df 91       	pop	r29
    2dfe:	cf 91       	pop	r28
    2e00:	08 95       	ret

00002e02 <LCD_print>:

void LCD_print(int symbol)								//Print symbol on LCD, need division symbols for one is main cycle
{														//Use symbols from Flash ROM
    2e02:	0f 93       	push	r16
    2e04:	1f 93       	push	r17
    2e06:	cf 93       	push	r28
    2e08:	df 93       	push	r29
    2e0a:	8c 01       	movw	r16, r24
    2e0c:	00 0f       	add	r16, r16
    2e0e:	11 1f       	adc	r17, r17
    2e10:	00 0f       	add	r16, r16
    2e12:	11 1f       	adc	r17, r17
    2e14:	80 0f       	add	r24, r16
    2e16:	91 1f       	adc	r25, r17
														//Need using "pgmspase.h" library
	
	int buffer;											 
	for(int part = 0; part < 5; part++)
    2e18:	c0 e0       	ldi	r28, 0x00	; 0
    2e1a:	d0 e0       	ldi	r29, 0x00	; 0
    2e1c:	8c 01       	movw	r16, r24
    2e1e:	00 5a       	subi	r16, 0xA0	; 160
    2e20:	11 09       	sbc	r17, r1
    2e22:	f8 01       	movw	r30, r16
    2e24:	ec 0f       	add	r30, r28
    2e26:	fd 1f       	adc	r31, r29
    2e28:	e6 52       	subi	r30, 0x26	; 38
    2e2a:	fe 4e       	sbci	r31, 0xEE	; 238
	{
		buffer = pgm_read_byte(&(Symbols[symbol-32][part]));
    2e2c:	84 91       	lpm	r24, Z
		LCD_Sent_Byte(buffer,DATA);
    2e2e:	61 e0       	ldi	r22, 0x01	; 1
    2e30:	70 e0       	ldi	r23, 0x00	; 0
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
void LCD_print(int symbol)								//Print symbol on LCD, need division symbols for one is main cycle
{														//Use symbols from Flash ROM
														//Need using "pgmspase.h" library
	
	int buffer;											 
	for(int part = 0; part < 5; part++)
    2e38:	21 96       	adiw	r28, 0x01	; 1
    2e3a:	c5 30       	cpi	r28, 0x05	; 5
    2e3c:	d1 05       	cpc	r29, r1
    2e3e:	89 f7       	brne	.-30     	; 0x2e22 <LCD_print+0x20>
	{
		buffer = pgm_read_byte(&(Symbols[symbol-32][part]));
		LCD_Sent_Byte(buffer,DATA);
	}
	LCD_Sent_Byte(0,DATA);
    2e40:	61 e0       	ldi	r22, 0x01	; 1
    2e42:	70 e0       	ldi	r23, 0x00	; 0
    2e44:	80 e0       	ldi	r24, 0x00	; 0
    2e46:	90 e0       	ldi	r25, 0x00	; 0
    2e48:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <LCD_Sent_Byte>
}
    2e4c:	df 91       	pop	r29
    2e4e:	cf 91       	pop	r28
    2e50:	1f 91       	pop	r17
    2e52:	0f 91       	pop	r16
    2e54:	08 95       	ret

00002e56 <sprintf>:
    2e56:	ae e0       	ldi	r26, 0x0E	; 14
    2e58:	b0 e0       	ldi	r27, 0x00	; 0
    2e5a:	e1 e3       	ldi	r30, 0x31	; 49
    2e5c:	f7 e1       	ldi	r31, 0x17	; 23
    2e5e:	0c 94 da 19 	jmp	0x33b4	; 0x33b4 <__prologue_saves__+0x1c>
    2e62:	0d 89       	ldd	r16, Y+21	; 0x15
    2e64:	1e 89       	ldd	r17, Y+22	; 0x16
    2e66:	86 e0       	ldi	r24, 0x06	; 6
    2e68:	8c 83       	std	Y+4, r24	; 0x04
    2e6a:	1a 83       	std	Y+2, r17	; 0x02
    2e6c:	09 83       	std	Y+1, r16	; 0x01
    2e6e:	8f ef       	ldi	r24, 0xFF	; 255
    2e70:	9f e7       	ldi	r25, 0x7F	; 127
    2e72:	9e 83       	std	Y+6, r25	; 0x06
    2e74:	8d 83       	std	Y+5, r24	; 0x05
    2e76:	ae 01       	movw	r20, r28
    2e78:	47 5e       	subi	r20, 0xE7	; 231
    2e7a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e7c:	6f 89       	ldd	r22, Y+23	; 0x17
    2e7e:	78 8d       	ldd	r23, Y+24	; 0x18
    2e80:	ce 01       	movw	r24, r28
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	0e 94 4e 17 	call	0x2e9c	; 0x2e9c <vfprintf>
    2e88:	2f 81       	ldd	r18, Y+7	; 0x07
    2e8a:	38 85       	ldd	r19, Y+8	; 0x08
    2e8c:	f8 01       	movw	r30, r16
    2e8e:	e2 0f       	add	r30, r18
    2e90:	f3 1f       	adc	r31, r19
    2e92:	10 82       	st	Z, r1
    2e94:	2e 96       	adiw	r28, 0x0e	; 14
    2e96:	e4 e0       	ldi	r30, 0x04	; 4
    2e98:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__epilogue_restores__+0x1c>

00002e9c <vfprintf>:
    2e9c:	ac e0       	ldi	r26, 0x0C	; 12
    2e9e:	b0 e0       	ldi	r27, 0x00	; 0
    2ea0:	e4 e5       	ldi	r30, 0x54	; 84
    2ea2:	f7 e1       	ldi	r31, 0x17	; 23
    2ea4:	0c 94 cc 19 	jmp	0x3398	; 0x3398 <__prologue_saves__>
    2ea8:	7c 01       	movw	r14, r24
    2eaa:	6b 01       	movw	r12, r22
    2eac:	8a 01       	movw	r16, r20
    2eae:	fc 01       	movw	r30, r24
    2eb0:	17 82       	std	Z+7, r1	; 0x07
    2eb2:	16 82       	std	Z+6, r1	; 0x06
    2eb4:	83 81       	ldd	r24, Z+3	; 0x03
    2eb6:	81 ff       	sbrs	r24, 1
    2eb8:	bd c1       	rjmp	.+890    	; 0x3234 <vfprintf+0x398>
    2eba:	ce 01       	movw	r24, r28
    2ebc:	01 96       	adiw	r24, 0x01	; 1
    2ebe:	4c 01       	movw	r8, r24
    2ec0:	f7 01       	movw	r30, r14
    2ec2:	93 81       	ldd	r25, Z+3	; 0x03
    2ec4:	f6 01       	movw	r30, r12
    2ec6:	93 fd       	sbrc	r25, 3
    2ec8:	85 91       	lpm	r24, Z+
    2eca:	93 ff       	sbrs	r25, 3
    2ecc:	81 91       	ld	r24, Z+
    2ece:	6f 01       	movw	r12, r30
    2ed0:	88 23       	and	r24, r24
    2ed2:	09 f4       	brne	.+2      	; 0x2ed6 <vfprintf+0x3a>
    2ed4:	ab c1       	rjmp	.+854    	; 0x322c <vfprintf+0x390>
    2ed6:	85 32       	cpi	r24, 0x25	; 37
    2ed8:	39 f4       	brne	.+14     	; 0x2ee8 <vfprintf+0x4c>
    2eda:	93 fd       	sbrc	r25, 3
    2edc:	85 91       	lpm	r24, Z+
    2ede:	93 ff       	sbrs	r25, 3
    2ee0:	81 91       	ld	r24, Z+
    2ee2:	6f 01       	movw	r12, r30
    2ee4:	85 32       	cpi	r24, 0x25	; 37
    2ee6:	29 f4       	brne	.+10     	; 0x2ef2 <vfprintf+0x56>
    2ee8:	b7 01       	movw	r22, r14
    2eea:	90 e0       	ldi	r25, 0x00	; 0
    2eec:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    2ef0:	e7 cf       	rjmp	.-50     	; 0x2ec0 <vfprintf+0x24>
    2ef2:	51 2c       	mov	r5, r1
    2ef4:	31 2c       	mov	r3, r1
    2ef6:	20 e0       	ldi	r18, 0x00	; 0
    2ef8:	20 32       	cpi	r18, 0x20	; 32
    2efa:	a0 f4       	brcc	.+40     	; 0x2f24 <vfprintf+0x88>
    2efc:	8b 32       	cpi	r24, 0x2B	; 43
    2efe:	69 f0       	breq	.+26     	; 0x2f1a <vfprintf+0x7e>
    2f00:	30 f4       	brcc	.+12     	; 0x2f0e <vfprintf+0x72>
    2f02:	80 32       	cpi	r24, 0x20	; 32
    2f04:	59 f0       	breq	.+22     	; 0x2f1c <vfprintf+0x80>
    2f06:	83 32       	cpi	r24, 0x23	; 35
    2f08:	69 f4       	brne	.+26     	; 0x2f24 <vfprintf+0x88>
    2f0a:	20 61       	ori	r18, 0x10	; 16
    2f0c:	2c c0       	rjmp	.+88     	; 0x2f66 <vfprintf+0xca>
    2f0e:	8d 32       	cpi	r24, 0x2D	; 45
    2f10:	39 f0       	breq	.+14     	; 0x2f20 <vfprintf+0x84>
    2f12:	80 33       	cpi	r24, 0x30	; 48
    2f14:	39 f4       	brne	.+14     	; 0x2f24 <vfprintf+0x88>
    2f16:	21 60       	ori	r18, 0x01	; 1
    2f18:	26 c0       	rjmp	.+76     	; 0x2f66 <vfprintf+0xca>
    2f1a:	22 60       	ori	r18, 0x02	; 2
    2f1c:	24 60       	ori	r18, 0x04	; 4
    2f1e:	23 c0       	rjmp	.+70     	; 0x2f66 <vfprintf+0xca>
    2f20:	28 60       	ori	r18, 0x08	; 8
    2f22:	21 c0       	rjmp	.+66     	; 0x2f66 <vfprintf+0xca>
    2f24:	27 fd       	sbrc	r18, 7
    2f26:	27 c0       	rjmp	.+78     	; 0x2f76 <vfprintf+0xda>
    2f28:	30 ed       	ldi	r19, 0xD0	; 208
    2f2a:	38 0f       	add	r19, r24
    2f2c:	3a 30       	cpi	r19, 0x0A	; 10
    2f2e:	78 f4       	brcc	.+30     	; 0x2f4e <vfprintf+0xb2>
    2f30:	26 ff       	sbrs	r18, 6
    2f32:	06 c0       	rjmp	.+12     	; 0x2f40 <vfprintf+0xa4>
    2f34:	fa e0       	ldi	r31, 0x0A	; 10
    2f36:	5f 9e       	mul	r5, r31
    2f38:	30 0d       	add	r19, r0
    2f3a:	11 24       	eor	r1, r1
    2f3c:	53 2e       	mov	r5, r19
    2f3e:	13 c0       	rjmp	.+38     	; 0x2f66 <vfprintf+0xca>
    2f40:	8a e0       	ldi	r24, 0x0A	; 10
    2f42:	38 9e       	mul	r3, r24
    2f44:	30 0d       	add	r19, r0
    2f46:	11 24       	eor	r1, r1
    2f48:	33 2e       	mov	r3, r19
    2f4a:	20 62       	ori	r18, 0x20	; 32
    2f4c:	0c c0       	rjmp	.+24     	; 0x2f66 <vfprintf+0xca>
    2f4e:	8e 32       	cpi	r24, 0x2E	; 46
    2f50:	21 f4       	brne	.+8      	; 0x2f5a <vfprintf+0xbe>
    2f52:	26 fd       	sbrc	r18, 6
    2f54:	6b c1       	rjmp	.+726    	; 0x322c <vfprintf+0x390>
    2f56:	20 64       	ori	r18, 0x40	; 64
    2f58:	06 c0       	rjmp	.+12     	; 0x2f66 <vfprintf+0xca>
    2f5a:	8c 36       	cpi	r24, 0x6C	; 108
    2f5c:	11 f4       	brne	.+4      	; 0x2f62 <vfprintf+0xc6>
    2f5e:	20 68       	ori	r18, 0x80	; 128
    2f60:	02 c0       	rjmp	.+4      	; 0x2f66 <vfprintf+0xca>
    2f62:	88 36       	cpi	r24, 0x68	; 104
    2f64:	41 f4       	brne	.+16     	; 0x2f76 <vfprintf+0xda>
    2f66:	f6 01       	movw	r30, r12
    2f68:	93 fd       	sbrc	r25, 3
    2f6a:	85 91       	lpm	r24, Z+
    2f6c:	93 ff       	sbrs	r25, 3
    2f6e:	81 91       	ld	r24, Z+
    2f70:	6f 01       	movw	r12, r30
    2f72:	81 11       	cpse	r24, r1
    2f74:	c1 cf       	rjmp	.-126    	; 0x2ef8 <vfprintf+0x5c>
    2f76:	98 2f       	mov	r25, r24
    2f78:	9f 7d       	andi	r25, 0xDF	; 223
    2f7a:	95 54       	subi	r25, 0x45	; 69
    2f7c:	93 30       	cpi	r25, 0x03	; 3
    2f7e:	28 f4       	brcc	.+10     	; 0x2f8a <vfprintf+0xee>
    2f80:	0c 5f       	subi	r16, 0xFC	; 252
    2f82:	1f 4f       	sbci	r17, 0xFF	; 255
    2f84:	ff e3       	ldi	r31, 0x3F	; 63
    2f86:	f9 83       	std	Y+1, r31	; 0x01
    2f88:	0d c0       	rjmp	.+26     	; 0x2fa4 <vfprintf+0x108>
    2f8a:	83 36       	cpi	r24, 0x63	; 99
    2f8c:	31 f0       	breq	.+12     	; 0x2f9a <vfprintf+0xfe>
    2f8e:	83 37       	cpi	r24, 0x73	; 115
    2f90:	71 f0       	breq	.+28     	; 0x2fae <vfprintf+0x112>
    2f92:	83 35       	cpi	r24, 0x53	; 83
    2f94:	09 f0       	breq	.+2      	; 0x2f98 <vfprintf+0xfc>
    2f96:	5b c0       	rjmp	.+182    	; 0x304e <vfprintf+0x1b2>
    2f98:	22 c0       	rjmp	.+68     	; 0x2fde <vfprintf+0x142>
    2f9a:	f8 01       	movw	r30, r16
    2f9c:	80 81       	ld	r24, Z
    2f9e:	89 83       	std	Y+1, r24	; 0x01
    2fa0:	0e 5f       	subi	r16, 0xFE	; 254
    2fa2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fa4:	44 24       	eor	r4, r4
    2fa6:	43 94       	inc	r4
    2fa8:	51 2c       	mov	r5, r1
    2faa:	54 01       	movw	r10, r8
    2fac:	15 c0       	rjmp	.+42     	; 0x2fd8 <vfprintf+0x13c>
    2fae:	38 01       	movw	r6, r16
    2fb0:	f2 e0       	ldi	r31, 0x02	; 2
    2fb2:	6f 0e       	add	r6, r31
    2fb4:	71 1c       	adc	r7, r1
    2fb6:	f8 01       	movw	r30, r16
    2fb8:	a0 80       	ld	r10, Z
    2fba:	b1 80       	ldd	r11, Z+1	; 0x01
    2fbc:	26 ff       	sbrs	r18, 6
    2fbe:	03 c0       	rjmp	.+6      	; 0x2fc6 <vfprintf+0x12a>
    2fc0:	65 2d       	mov	r22, r5
    2fc2:	70 e0       	ldi	r23, 0x00	; 0
    2fc4:	02 c0       	rjmp	.+4      	; 0x2fca <vfprintf+0x12e>
    2fc6:	6f ef       	ldi	r22, 0xFF	; 255
    2fc8:	7f ef       	ldi	r23, 0xFF	; 255
    2fca:	c5 01       	movw	r24, r10
    2fcc:	2c 87       	std	Y+12, r18	; 0x0c
    2fce:	0e 94 2b 19 	call	0x3256	; 0x3256 <strnlen>
    2fd2:	2c 01       	movw	r4, r24
    2fd4:	83 01       	movw	r16, r6
    2fd6:	2c 85       	ldd	r18, Y+12	; 0x0c
    2fd8:	2f 77       	andi	r18, 0x7F	; 127
    2fda:	22 2e       	mov	r2, r18
    2fdc:	17 c0       	rjmp	.+46     	; 0x300c <vfprintf+0x170>
    2fde:	38 01       	movw	r6, r16
    2fe0:	f2 e0       	ldi	r31, 0x02	; 2
    2fe2:	6f 0e       	add	r6, r31
    2fe4:	71 1c       	adc	r7, r1
    2fe6:	f8 01       	movw	r30, r16
    2fe8:	a0 80       	ld	r10, Z
    2fea:	b1 80       	ldd	r11, Z+1	; 0x01
    2fec:	26 ff       	sbrs	r18, 6
    2fee:	03 c0       	rjmp	.+6      	; 0x2ff6 <vfprintf+0x15a>
    2ff0:	65 2d       	mov	r22, r5
    2ff2:	70 e0       	ldi	r23, 0x00	; 0
    2ff4:	02 c0       	rjmp	.+4      	; 0x2ffa <vfprintf+0x15e>
    2ff6:	6f ef       	ldi	r22, 0xFF	; 255
    2ff8:	7f ef       	ldi	r23, 0xFF	; 255
    2ffa:	c5 01       	movw	r24, r10
    2ffc:	2c 87       	std	Y+12, r18	; 0x0c
    2ffe:	0e 94 20 19 	call	0x3240	; 0x3240 <strnlen_P>
    3002:	2c 01       	movw	r4, r24
    3004:	2c 85       	ldd	r18, Y+12	; 0x0c
    3006:	20 68       	ori	r18, 0x80	; 128
    3008:	22 2e       	mov	r2, r18
    300a:	83 01       	movw	r16, r6
    300c:	23 fc       	sbrc	r2, 3
    300e:	1b c0       	rjmp	.+54     	; 0x3046 <vfprintf+0x1aa>
    3010:	83 2d       	mov	r24, r3
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	48 16       	cp	r4, r24
    3016:	59 06       	cpc	r5, r25
    3018:	b0 f4       	brcc	.+44     	; 0x3046 <vfprintf+0x1aa>
    301a:	b7 01       	movw	r22, r14
    301c:	80 e2       	ldi	r24, 0x20	; 32
    301e:	90 e0       	ldi	r25, 0x00	; 0
    3020:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    3024:	3a 94       	dec	r3
    3026:	f4 cf       	rjmp	.-24     	; 0x3010 <vfprintf+0x174>
    3028:	f5 01       	movw	r30, r10
    302a:	27 fc       	sbrc	r2, 7
    302c:	85 91       	lpm	r24, Z+
    302e:	27 fe       	sbrs	r2, 7
    3030:	81 91       	ld	r24, Z+
    3032:	5f 01       	movw	r10, r30
    3034:	b7 01       	movw	r22, r14
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    303c:	31 10       	cpse	r3, r1
    303e:	3a 94       	dec	r3
    3040:	f1 e0       	ldi	r31, 0x01	; 1
    3042:	4f 1a       	sub	r4, r31
    3044:	51 08       	sbc	r5, r1
    3046:	41 14       	cp	r4, r1
    3048:	51 04       	cpc	r5, r1
    304a:	71 f7       	brne	.-36     	; 0x3028 <vfprintf+0x18c>
    304c:	e5 c0       	rjmp	.+458    	; 0x3218 <vfprintf+0x37c>
    304e:	84 36       	cpi	r24, 0x64	; 100
    3050:	11 f0       	breq	.+4      	; 0x3056 <vfprintf+0x1ba>
    3052:	89 36       	cpi	r24, 0x69	; 105
    3054:	39 f5       	brne	.+78     	; 0x30a4 <vfprintf+0x208>
    3056:	f8 01       	movw	r30, r16
    3058:	27 ff       	sbrs	r18, 7
    305a:	07 c0       	rjmp	.+14     	; 0x306a <vfprintf+0x1ce>
    305c:	60 81       	ld	r22, Z
    305e:	71 81       	ldd	r23, Z+1	; 0x01
    3060:	82 81       	ldd	r24, Z+2	; 0x02
    3062:	93 81       	ldd	r25, Z+3	; 0x03
    3064:	0c 5f       	subi	r16, 0xFC	; 252
    3066:	1f 4f       	sbci	r17, 0xFF	; 255
    3068:	08 c0       	rjmp	.+16     	; 0x307a <vfprintf+0x1de>
    306a:	60 81       	ld	r22, Z
    306c:	71 81       	ldd	r23, Z+1	; 0x01
    306e:	07 2e       	mov	r0, r23
    3070:	00 0c       	add	r0, r0
    3072:	88 0b       	sbc	r24, r24
    3074:	99 0b       	sbc	r25, r25
    3076:	0e 5f       	subi	r16, 0xFE	; 254
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	2f 76       	andi	r18, 0x6F	; 111
    307c:	72 2e       	mov	r7, r18
    307e:	97 ff       	sbrs	r25, 7
    3080:	09 c0       	rjmp	.+18     	; 0x3094 <vfprintf+0x1f8>
    3082:	90 95       	com	r25
    3084:	80 95       	com	r24
    3086:	70 95       	com	r23
    3088:	61 95       	neg	r22
    308a:	7f 4f       	sbci	r23, 0xFF	; 255
    308c:	8f 4f       	sbci	r24, 0xFF	; 255
    308e:	9f 4f       	sbci	r25, 0xFF	; 255
    3090:	20 68       	ori	r18, 0x80	; 128
    3092:	72 2e       	mov	r7, r18
    3094:	2a e0       	ldi	r18, 0x0A	; 10
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	a4 01       	movw	r20, r8
    309a:	0e 94 6e 19 	call	0x32dc	; 0x32dc <__ultoa_invert>
    309e:	a8 2e       	mov	r10, r24
    30a0:	a8 18       	sub	r10, r8
    30a2:	44 c0       	rjmp	.+136    	; 0x312c <vfprintf+0x290>
    30a4:	85 37       	cpi	r24, 0x75	; 117
    30a6:	29 f4       	brne	.+10     	; 0x30b2 <vfprintf+0x216>
    30a8:	2f 7e       	andi	r18, 0xEF	; 239
    30aa:	b2 2e       	mov	r11, r18
    30ac:	2a e0       	ldi	r18, 0x0A	; 10
    30ae:	30 e0       	ldi	r19, 0x00	; 0
    30b0:	25 c0       	rjmp	.+74     	; 0x30fc <vfprintf+0x260>
    30b2:	f2 2f       	mov	r31, r18
    30b4:	f9 7f       	andi	r31, 0xF9	; 249
    30b6:	bf 2e       	mov	r11, r31
    30b8:	8f 36       	cpi	r24, 0x6F	; 111
    30ba:	c1 f0       	breq	.+48     	; 0x30ec <vfprintf+0x250>
    30bc:	18 f4       	brcc	.+6      	; 0x30c4 <vfprintf+0x228>
    30be:	88 35       	cpi	r24, 0x58	; 88
    30c0:	79 f0       	breq	.+30     	; 0x30e0 <vfprintf+0x244>
    30c2:	b4 c0       	rjmp	.+360    	; 0x322c <vfprintf+0x390>
    30c4:	80 37       	cpi	r24, 0x70	; 112
    30c6:	19 f0       	breq	.+6      	; 0x30ce <vfprintf+0x232>
    30c8:	88 37       	cpi	r24, 0x78	; 120
    30ca:	21 f0       	breq	.+8      	; 0x30d4 <vfprintf+0x238>
    30cc:	af c0       	rjmp	.+350    	; 0x322c <vfprintf+0x390>
    30ce:	2f 2f       	mov	r18, r31
    30d0:	20 61       	ori	r18, 0x10	; 16
    30d2:	b2 2e       	mov	r11, r18
    30d4:	b4 fe       	sbrs	r11, 4
    30d6:	0d c0       	rjmp	.+26     	; 0x30f2 <vfprintf+0x256>
    30d8:	8b 2d       	mov	r24, r11
    30da:	84 60       	ori	r24, 0x04	; 4
    30dc:	b8 2e       	mov	r11, r24
    30de:	09 c0       	rjmp	.+18     	; 0x30f2 <vfprintf+0x256>
    30e0:	24 ff       	sbrs	r18, 4
    30e2:	0a c0       	rjmp	.+20     	; 0x30f8 <vfprintf+0x25c>
    30e4:	9f 2f       	mov	r25, r31
    30e6:	96 60       	ori	r25, 0x06	; 6
    30e8:	b9 2e       	mov	r11, r25
    30ea:	06 c0       	rjmp	.+12     	; 0x30f8 <vfprintf+0x25c>
    30ec:	28 e0       	ldi	r18, 0x08	; 8
    30ee:	30 e0       	ldi	r19, 0x00	; 0
    30f0:	05 c0       	rjmp	.+10     	; 0x30fc <vfprintf+0x260>
    30f2:	20 e1       	ldi	r18, 0x10	; 16
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	02 c0       	rjmp	.+4      	; 0x30fc <vfprintf+0x260>
    30f8:	20 e1       	ldi	r18, 0x10	; 16
    30fa:	32 e0       	ldi	r19, 0x02	; 2
    30fc:	f8 01       	movw	r30, r16
    30fe:	b7 fe       	sbrs	r11, 7
    3100:	07 c0       	rjmp	.+14     	; 0x3110 <vfprintf+0x274>
    3102:	60 81       	ld	r22, Z
    3104:	71 81       	ldd	r23, Z+1	; 0x01
    3106:	82 81       	ldd	r24, Z+2	; 0x02
    3108:	93 81       	ldd	r25, Z+3	; 0x03
    310a:	0c 5f       	subi	r16, 0xFC	; 252
    310c:	1f 4f       	sbci	r17, 0xFF	; 255
    310e:	06 c0       	rjmp	.+12     	; 0x311c <vfprintf+0x280>
    3110:	60 81       	ld	r22, Z
    3112:	71 81       	ldd	r23, Z+1	; 0x01
    3114:	80 e0       	ldi	r24, 0x00	; 0
    3116:	90 e0       	ldi	r25, 0x00	; 0
    3118:	0e 5f       	subi	r16, 0xFE	; 254
    311a:	1f 4f       	sbci	r17, 0xFF	; 255
    311c:	a4 01       	movw	r20, r8
    311e:	0e 94 6e 19 	call	0x32dc	; 0x32dc <__ultoa_invert>
    3122:	a8 2e       	mov	r10, r24
    3124:	a8 18       	sub	r10, r8
    3126:	fb 2d       	mov	r31, r11
    3128:	ff 77       	andi	r31, 0x7F	; 127
    312a:	7f 2e       	mov	r7, r31
    312c:	76 fe       	sbrs	r7, 6
    312e:	0b c0       	rjmp	.+22     	; 0x3146 <vfprintf+0x2aa>
    3130:	37 2d       	mov	r19, r7
    3132:	3e 7f       	andi	r19, 0xFE	; 254
    3134:	a5 14       	cp	r10, r5
    3136:	50 f4       	brcc	.+20     	; 0x314c <vfprintf+0x2b0>
    3138:	74 fe       	sbrs	r7, 4
    313a:	0a c0       	rjmp	.+20     	; 0x3150 <vfprintf+0x2b4>
    313c:	72 fc       	sbrc	r7, 2
    313e:	08 c0       	rjmp	.+16     	; 0x3150 <vfprintf+0x2b4>
    3140:	37 2d       	mov	r19, r7
    3142:	3e 7e       	andi	r19, 0xEE	; 238
    3144:	05 c0       	rjmp	.+10     	; 0x3150 <vfprintf+0x2b4>
    3146:	ba 2c       	mov	r11, r10
    3148:	37 2d       	mov	r19, r7
    314a:	03 c0       	rjmp	.+6      	; 0x3152 <vfprintf+0x2b6>
    314c:	ba 2c       	mov	r11, r10
    314e:	01 c0       	rjmp	.+2      	; 0x3152 <vfprintf+0x2b6>
    3150:	b5 2c       	mov	r11, r5
    3152:	34 ff       	sbrs	r19, 4
    3154:	0d c0       	rjmp	.+26     	; 0x3170 <vfprintf+0x2d4>
    3156:	fe 01       	movw	r30, r28
    3158:	ea 0d       	add	r30, r10
    315a:	f1 1d       	adc	r31, r1
    315c:	80 81       	ld	r24, Z
    315e:	80 33       	cpi	r24, 0x30	; 48
    3160:	11 f4       	brne	.+4      	; 0x3166 <vfprintf+0x2ca>
    3162:	39 7e       	andi	r19, 0xE9	; 233
    3164:	09 c0       	rjmp	.+18     	; 0x3178 <vfprintf+0x2dc>
    3166:	32 ff       	sbrs	r19, 2
    3168:	06 c0       	rjmp	.+12     	; 0x3176 <vfprintf+0x2da>
    316a:	b3 94       	inc	r11
    316c:	b3 94       	inc	r11
    316e:	04 c0       	rjmp	.+8      	; 0x3178 <vfprintf+0x2dc>
    3170:	83 2f       	mov	r24, r19
    3172:	86 78       	andi	r24, 0x86	; 134
    3174:	09 f0       	breq	.+2      	; 0x3178 <vfprintf+0x2dc>
    3176:	b3 94       	inc	r11
    3178:	33 fd       	sbrc	r19, 3
    317a:	13 c0       	rjmp	.+38     	; 0x31a2 <vfprintf+0x306>
    317c:	30 ff       	sbrs	r19, 0
    317e:	06 c0       	rjmp	.+12     	; 0x318c <vfprintf+0x2f0>
    3180:	5a 2c       	mov	r5, r10
    3182:	b3 14       	cp	r11, r3
    3184:	18 f4       	brcc	.+6      	; 0x318c <vfprintf+0x2f0>
    3186:	53 0c       	add	r5, r3
    3188:	5b 18       	sub	r5, r11
    318a:	b3 2c       	mov	r11, r3
    318c:	b3 14       	cp	r11, r3
    318e:	68 f4       	brcc	.+26     	; 0x31aa <vfprintf+0x30e>
    3190:	b7 01       	movw	r22, r14
    3192:	80 e2       	ldi	r24, 0x20	; 32
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	3c 87       	std	Y+12, r19	; 0x0c
    3198:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    319c:	b3 94       	inc	r11
    319e:	3c 85       	ldd	r19, Y+12	; 0x0c
    31a0:	f5 cf       	rjmp	.-22     	; 0x318c <vfprintf+0x2f0>
    31a2:	b3 14       	cp	r11, r3
    31a4:	10 f4       	brcc	.+4      	; 0x31aa <vfprintf+0x30e>
    31a6:	3b 18       	sub	r3, r11
    31a8:	01 c0       	rjmp	.+2      	; 0x31ac <vfprintf+0x310>
    31aa:	31 2c       	mov	r3, r1
    31ac:	34 ff       	sbrs	r19, 4
    31ae:	12 c0       	rjmp	.+36     	; 0x31d4 <vfprintf+0x338>
    31b0:	b7 01       	movw	r22, r14
    31b2:	80 e3       	ldi	r24, 0x30	; 48
    31b4:	90 e0       	ldi	r25, 0x00	; 0
    31b6:	3c 87       	std	Y+12, r19	; 0x0c
    31b8:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    31bc:	3c 85       	ldd	r19, Y+12	; 0x0c
    31be:	32 ff       	sbrs	r19, 2
    31c0:	17 c0       	rjmp	.+46     	; 0x31f0 <vfprintf+0x354>
    31c2:	31 fd       	sbrc	r19, 1
    31c4:	03 c0       	rjmp	.+6      	; 0x31cc <vfprintf+0x330>
    31c6:	88 e7       	ldi	r24, 0x78	; 120
    31c8:	90 e0       	ldi	r25, 0x00	; 0
    31ca:	02 c0       	rjmp	.+4      	; 0x31d0 <vfprintf+0x334>
    31cc:	88 e5       	ldi	r24, 0x58	; 88
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	b7 01       	movw	r22, r14
    31d2:	0c c0       	rjmp	.+24     	; 0x31ec <vfprintf+0x350>
    31d4:	83 2f       	mov	r24, r19
    31d6:	86 78       	andi	r24, 0x86	; 134
    31d8:	59 f0       	breq	.+22     	; 0x31f0 <vfprintf+0x354>
    31da:	31 ff       	sbrs	r19, 1
    31dc:	02 c0       	rjmp	.+4      	; 0x31e2 <vfprintf+0x346>
    31de:	8b e2       	ldi	r24, 0x2B	; 43
    31e0:	01 c0       	rjmp	.+2      	; 0x31e4 <vfprintf+0x348>
    31e2:	80 e2       	ldi	r24, 0x20	; 32
    31e4:	37 fd       	sbrc	r19, 7
    31e6:	8d e2       	ldi	r24, 0x2D	; 45
    31e8:	b7 01       	movw	r22, r14
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    31f0:	a5 14       	cp	r10, r5
    31f2:	38 f4       	brcc	.+14     	; 0x3202 <vfprintf+0x366>
    31f4:	b7 01       	movw	r22, r14
    31f6:	80 e3       	ldi	r24, 0x30	; 48
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    31fe:	5a 94       	dec	r5
    3200:	f7 cf       	rjmp	.-18     	; 0x31f0 <vfprintf+0x354>
    3202:	aa 94       	dec	r10
    3204:	f4 01       	movw	r30, r8
    3206:	ea 0d       	add	r30, r10
    3208:	f1 1d       	adc	r31, r1
    320a:	80 81       	ld	r24, Z
    320c:	b7 01       	movw	r22, r14
    320e:	90 e0       	ldi	r25, 0x00	; 0
    3210:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    3214:	a1 10       	cpse	r10, r1
    3216:	f5 cf       	rjmp	.-22     	; 0x3202 <vfprintf+0x366>
    3218:	33 20       	and	r3, r3
    321a:	09 f4       	brne	.+2      	; 0x321e <vfprintf+0x382>
    321c:	51 ce       	rjmp	.-862    	; 0x2ec0 <vfprintf+0x24>
    321e:	b7 01       	movw	r22, r14
    3220:	80 e2       	ldi	r24, 0x20	; 32
    3222:	90 e0       	ldi	r25, 0x00	; 0
    3224:	0e 94 36 19 	call	0x326c	; 0x326c <fputc>
    3228:	3a 94       	dec	r3
    322a:	f6 cf       	rjmp	.-20     	; 0x3218 <vfprintf+0x37c>
    322c:	f7 01       	movw	r30, r14
    322e:	86 81       	ldd	r24, Z+6	; 0x06
    3230:	97 81       	ldd	r25, Z+7	; 0x07
    3232:	02 c0       	rjmp	.+4      	; 0x3238 <vfprintf+0x39c>
    3234:	8f ef       	ldi	r24, 0xFF	; 255
    3236:	9f ef       	ldi	r25, 0xFF	; 255
    3238:	2c 96       	adiw	r28, 0x0c	; 12
    323a:	e2 e1       	ldi	r30, 0x12	; 18
    323c:	0c 94 e8 19 	jmp	0x33d0	; 0x33d0 <__epilogue_restores__>

00003240 <strnlen_P>:
    3240:	fc 01       	movw	r30, r24
    3242:	05 90       	lpm	r0, Z+
    3244:	61 50       	subi	r22, 0x01	; 1
    3246:	70 40       	sbci	r23, 0x00	; 0
    3248:	01 10       	cpse	r0, r1
    324a:	d8 f7       	brcc	.-10     	; 0x3242 <strnlen_P+0x2>
    324c:	80 95       	com	r24
    324e:	90 95       	com	r25
    3250:	8e 0f       	add	r24, r30
    3252:	9f 1f       	adc	r25, r31
    3254:	08 95       	ret

00003256 <strnlen>:
    3256:	fc 01       	movw	r30, r24
    3258:	61 50       	subi	r22, 0x01	; 1
    325a:	70 40       	sbci	r23, 0x00	; 0
    325c:	01 90       	ld	r0, Z+
    325e:	01 10       	cpse	r0, r1
    3260:	d8 f7       	brcc	.-10     	; 0x3258 <strnlen+0x2>
    3262:	80 95       	com	r24
    3264:	90 95       	com	r25
    3266:	8e 0f       	add	r24, r30
    3268:	9f 1f       	adc	r25, r31
    326a:	08 95       	ret

0000326c <fputc>:
    326c:	0f 93       	push	r16
    326e:	1f 93       	push	r17
    3270:	cf 93       	push	r28
    3272:	df 93       	push	r29
    3274:	fb 01       	movw	r30, r22
    3276:	23 81       	ldd	r18, Z+3	; 0x03
    3278:	21 fd       	sbrc	r18, 1
    327a:	03 c0       	rjmp	.+6      	; 0x3282 <fputc+0x16>
    327c:	8f ef       	ldi	r24, 0xFF	; 255
    327e:	9f ef       	ldi	r25, 0xFF	; 255
    3280:	28 c0       	rjmp	.+80     	; 0x32d2 <fputc+0x66>
    3282:	22 ff       	sbrs	r18, 2
    3284:	16 c0       	rjmp	.+44     	; 0x32b2 <fputc+0x46>
    3286:	46 81       	ldd	r20, Z+6	; 0x06
    3288:	57 81       	ldd	r21, Z+7	; 0x07
    328a:	24 81       	ldd	r18, Z+4	; 0x04
    328c:	35 81       	ldd	r19, Z+5	; 0x05
    328e:	42 17       	cp	r20, r18
    3290:	53 07       	cpc	r21, r19
    3292:	44 f4       	brge	.+16     	; 0x32a4 <fputc+0x38>
    3294:	a0 81       	ld	r26, Z
    3296:	b1 81       	ldd	r27, Z+1	; 0x01
    3298:	9d 01       	movw	r18, r26
    329a:	2f 5f       	subi	r18, 0xFF	; 255
    329c:	3f 4f       	sbci	r19, 0xFF	; 255
    329e:	31 83       	std	Z+1, r19	; 0x01
    32a0:	20 83       	st	Z, r18
    32a2:	8c 93       	st	X, r24
    32a4:	26 81       	ldd	r18, Z+6	; 0x06
    32a6:	37 81       	ldd	r19, Z+7	; 0x07
    32a8:	2f 5f       	subi	r18, 0xFF	; 255
    32aa:	3f 4f       	sbci	r19, 0xFF	; 255
    32ac:	37 83       	std	Z+7, r19	; 0x07
    32ae:	26 83       	std	Z+6, r18	; 0x06
    32b0:	10 c0       	rjmp	.+32     	; 0x32d2 <fputc+0x66>
    32b2:	eb 01       	movw	r28, r22
    32b4:	09 2f       	mov	r16, r25
    32b6:	18 2f       	mov	r17, r24
    32b8:	00 84       	ldd	r0, Z+8	; 0x08
    32ba:	f1 85       	ldd	r31, Z+9	; 0x09
    32bc:	e0 2d       	mov	r30, r0
    32be:	09 95       	icall
    32c0:	89 2b       	or	r24, r25
    32c2:	e1 f6       	brne	.-72     	; 0x327c <fputc+0x10>
    32c4:	8e 81       	ldd	r24, Y+6	; 0x06
    32c6:	9f 81       	ldd	r25, Y+7	; 0x07
    32c8:	01 96       	adiw	r24, 0x01	; 1
    32ca:	9f 83       	std	Y+7, r25	; 0x07
    32cc:	8e 83       	std	Y+6, r24	; 0x06
    32ce:	81 2f       	mov	r24, r17
    32d0:	90 2f       	mov	r25, r16
    32d2:	df 91       	pop	r29
    32d4:	cf 91       	pop	r28
    32d6:	1f 91       	pop	r17
    32d8:	0f 91       	pop	r16
    32da:	08 95       	ret

000032dc <__ultoa_invert>:
    32dc:	fa 01       	movw	r30, r20
    32de:	aa 27       	eor	r26, r26
    32e0:	28 30       	cpi	r18, 0x08	; 8
    32e2:	51 f1       	breq	.+84     	; 0x3338 <__ultoa_invert+0x5c>
    32e4:	20 31       	cpi	r18, 0x10	; 16
    32e6:	81 f1       	breq	.+96     	; 0x3348 <__ultoa_invert+0x6c>
    32e8:	e8 94       	clt
    32ea:	6f 93       	push	r22
    32ec:	6e 7f       	andi	r22, 0xFE	; 254
    32ee:	6e 5f       	subi	r22, 0xFE	; 254
    32f0:	7f 4f       	sbci	r23, 0xFF	; 255
    32f2:	8f 4f       	sbci	r24, 0xFF	; 255
    32f4:	9f 4f       	sbci	r25, 0xFF	; 255
    32f6:	af 4f       	sbci	r26, 0xFF	; 255
    32f8:	b1 e0       	ldi	r27, 0x01	; 1
    32fa:	3e d0       	rcall	.+124    	; 0x3378 <__ultoa_invert+0x9c>
    32fc:	b4 e0       	ldi	r27, 0x04	; 4
    32fe:	3c d0       	rcall	.+120    	; 0x3378 <__ultoa_invert+0x9c>
    3300:	67 0f       	add	r22, r23
    3302:	78 1f       	adc	r23, r24
    3304:	89 1f       	adc	r24, r25
    3306:	9a 1f       	adc	r25, r26
    3308:	a1 1d       	adc	r26, r1
    330a:	68 0f       	add	r22, r24
    330c:	79 1f       	adc	r23, r25
    330e:	8a 1f       	adc	r24, r26
    3310:	91 1d       	adc	r25, r1
    3312:	a1 1d       	adc	r26, r1
    3314:	6a 0f       	add	r22, r26
    3316:	71 1d       	adc	r23, r1
    3318:	81 1d       	adc	r24, r1
    331a:	91 1d       	adc	r25, r1
    331c:	a1 1d       	adc	r26, r1
    331e:	20 d0       	rcall	.+64     	; 0x3360 <__ultoa_invert+0x84>
    3320:	09 f4       	brne	.+2      	; 0x3324 <__ultoa_invert+0x48>
    3322:	68 94       	set
    3324:	3f 91       	pop	r19
    3326:	2a e0       	ldi	r18, 0x0A	; 10
    3328:	26 9f       	mul	r18, r22
    332a:	11 24       	eor	r1, r1
    332c:	30 19       	sub	r19, r0
    332e:	30 5d       	subi	r19, 0xD0	; 208
    3330:	31 93       	st	Z+, r19
    3332:	de f6       	brtc	.-74     	; 0x32ea <__ultoa_invert+0xe>
    3334:	cf 01       	movw	r24, r30
    3336:	08 95       	ret
    3338:	46 2f       	mov	r20, r22
    333a:	47 70       	andi	r20, 0x07	; 7
    333c:	40 5d       	subi	r20, 0xD0	; 208
    333e:	41 93       	st	Z+, r20
    3340:	b3 e0       	ldi	r27, 0x03	; 3
    3342:	0f d0       	rcall	.+30     	; 0x3362 <__ultoa_invert+0x86>
    3344:	c9 f7       	brne	.-14     	; 0x3338 <__ultoa_invert+0x5c>
    3346:	f6 cf       	rjmp	.-20     	; 0x3334 <__ultoa_invert+0x58>
    3348:	46 2f       	mov	r20, r22
    334a:	4f 70       	andi	r20, 0x0F	; 15
    334c:	40 5d       	subi	r20, 0xD0	; 208
    334e:	4a 33       	cpi	r20, 0x3A	; 58
    3350:	18 f0       	brcs	.+6      	; 0x3358 <__ultoa_invert+0x7c>
    3352:	49 5d       	subi	r20, 0xD9	; 217
    3354:	31 fd       	sbrc	r19, 1
    3356:	40 52       	subi	r20, 0x20	; 32
    3358:	41 93       	st	Z+, r20
    335a:	02 d0       	rcall	.+4      	; 0x3360 <__ultoa_invert+0x84>
    335c:	a9 f7       	brne	.-22     	; 0x3348 <__ultoa_invert+0x6c>
    335e:	ea cf       	rjmp	.-44     	; 0x3334 <__ultoa_invert+0x58>
    3360:	b4 e0       	ldi	r27, 0x04	; 4
    3362:	a6 95       	lsr	r26
    3364:	97 95       	ror	r25
    3366:	87 95       	ror	r24
    3368:	77 95       	ror	r23
    336a:	67 95       	ror	r22
    336c:	ba 95       	dec	r27
    336e:	c9 f7       	brne	.-14     	; 0x3362 <__ultoa_invert+0x86>
    3370:	00 97       	sbiw	r24, 0x00	; 0
    3372:	61 05       	cpc	r22, r1
    3374:	71 05       	cpc	r23, r1
    3376:	08 95       	ret
    3378:	9b 01       	movw	r18, r22
    337a:	ac 01       	movw	r20, r24
    337c:	0a 2e       	mov	r0, r26
    337e:	06 94       	lsr	r0
    3380:	57 95       	ror	r21
    3382:	47 95       	ror	r20
    3384:	37 95       	ror	r19
    3386:	27 95       	ror	r18
    3388:	ba 95       	dec	r27
    338a:	c9 f7       	brne	.-14     	; 0x337e <__ultoa_invert+0xa2>
    338c:	62 0f       	add	r22, r18
    338e:	73 1f       	adc	r23, r19
    3390:	84 1f       	adc	r24, r20
    3392:	95 1f       	adc	r25, r21
    3394:	a0 1d       	adc	r26, r0
    3396:	08 95       	ret

00003398 <__prologue_saves__>:
    3398:	2f 92       	push	r2
    339a:	3f 92       	push	r3
    339c:	4f 92       	push	r4
    339e:	5f 92       	push	r5
    33a0:	6f 92       	push	r6
    33a2:	7f 92       	push	r7
    33a4:	8f 92       	push	r8
    33a6:	9f 92       	push	r9
    33a8:	af 92       	push	r10
    33aa:	bf 92       	push	r11
    33ac:	cf 92       	push	r12
    33ae:	df 92       	push	r13
    33b0:	ef 92       	push	r14
    33b2:	ff 92       	push	r15
    33b4:	0f 93       	push	r16
    33b6:	1f 93       	push	r17
    33b8:	cf 93       	push	r28
    33ba:	df 93       	push	r29
    33bc:	cd b7       	in	r28, 0x3d	; 61
    33be:	de b7       	in	r29, 0x3e	; 62
    33c0:	ca 1b       	sub	r28, r26
    33c2:	db 0b       	sbc	r29, r27
    33c4:	0f b6       	in	r0, 0x3f	; 63
    33c6:	f8 94       	cli
    33c8:	de bf       	out	0x3e, r29	; 62
    33ca:	0f be       	out	0x3f, r0	; 63
    33cc:	cd bf       	out	0x3d, r28	; 61
    33ce:	09 94       	ijmp

000033d0 <__epilogue_restores__>:
    33d0:	2a 88       	ldd	r2, Y+18	; 0x12
    33d2:	39 88       	ldd	r3, Y+17	; 0x11
    33d4:	48 88       	ldd	r4, Y+16	; 0x10
    33d6:	5f 84       	ldd	r5, Y+15	; 0x0f
    33d8:	6e 84       	ldd	r6, Y+14	; 0x0e
    33da:	7d 84       	ldd	r7, Y+13	; 0x0d
    33dc:	8c 84       	ldd	r8, Y+12	; 0x0c
    33de:	9b 84       	ldd	r9, Y+11	; 0x0b
    33e0:	aa 84       	ldd	r10, Y+10	; 0x0a
    33e2:	b9 84       	ldd	r11, Y+9	; 0x09
    33e4:	c8 84       	ldd	r12, Y+8	; 0x08
    33e6:	df 80       	ldd	r13, Y+7	; 0x07
    33e8:	ee 80       	ldd	r14, Y+6	; 0x06
    33ea:	fd 80       	ldd	r15, Y+5	; 0x05
    33ec:	0c 81       	ldd	r16, Y+4	; 0x04
    33ee:	1b 81       	ldd	r17, Y+3	; 0x03
    33f0:	aa 81       	ldd	r26, Y+2	; 0x02
    33f2:	b9 81       	ldd	r27, Y+1	; 0x01
    33f4:	ce 0f       	add	r28, r30
    33f6:	d1 1d       	adc	r29, r1
    33f8:	0f b6       	in	r0, 0x3f	; 63
    33fa:	f8 94       	cli
    33fc:	de bf       	out	0x3e, r29	; 62
    33fe:	0f be       	out	0x3f, r0	; 63
    3400:	cd bf       	out	0x3d, r28	; 61
    3402:	ed 01       	movw	r28, r26
    3404:	08 95       	ret

00003406 <_exit>:
    3406:	f8 94       	cli

00003408 <__stop_program>:
    3408:	ff cf       	rjmp	.-2      	; 0x3408 <__stop_program>
